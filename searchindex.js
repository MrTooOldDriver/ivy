Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/asarray","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/asarray","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/asarray","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/asarray","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/asarray","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/asarray.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/asarray.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/asarray.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/asarray.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/asarray.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[783,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[371,0,0,"-"],creation_functions:[372,0,0,"-"],data_type_functions:[373,0,0,"-"],data_types:[377,0,0,"-"],elementwise_functions:[378,0,0,"-"],function_and_method_signatures:[380,0,0,"-"],linear_algebra_extension:[381,0,0,"-"],linear_algebra_functions:[382,0,0,"-"],manipulation_functions:[383,0,0,"-"],searching_functions:[384,0,0,"-"],set_functions:[385,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[373,1,1,""],finfo:[375,2,1,""],iinfo:[376,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[373,3,1,""],bits:[373,3,1,""],eps:[373,3,1,""],max:[373,3,1,""],min:[373,3,1,""],smallest_normal:[373,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[379,2,1,""]},"ivy.functional.ivy":{array_api:[784,0,0,"-"],core:[805,0,0,"-"],nn:[1151,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[785,0,0,"-"],creation_functions:[786,0,0,"-"],data_type_functions:[787,0,0,"-"],data_types:[790,0,0,"-"],elementwise_functions:[791,0,0,"-"],function_and_method_signatures:[793,0,0,"-"],linear_algebra_extension:[794,0,0,"-"],linear_algebra_functions:[795,0,0,"-"],manipulation_functions:[796,0,0,"-"],searching_functions:[797,0,0,"-"],set_functions:[798,0,0,"-"],sorting_functions:[799,0,0,"-"],statistical_functions:[801,0,0,"-"],utility_functions:[802,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[788,2,1,""],iinfo:[789,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[792,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[800,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[803,2,1,""],any:[804,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[806,0,0,"-"],compilation:[845,0,0,"-"],device:[847,0,0,"-"],dtype:[897,0,0,"-"],general:[921,0,0,"-"],gradients:[1022,0,0,"-"],image:[1038,0,0,"-"],linalg:[1045,0,0,"-"],logic:[1053,0,0,"-"],math:[1057,0,0,"-"],meta:[1075,0,0,"-"],multi_node:[1079,0,0,"-"],nest:[1123,0,0,"-"],random:[1135,0,0,"-"],reductions:[1142,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[807,2,1,""],builtin_add:[808,2,1,""],builtin_and:[809,2,1,""],builtin_bool:[810,2,1,""],builtin_contains:[811,2,1,""],builtin_deepcopy:[812,2,1,""],builtin_dir:[813,2,1,""],builtin_eq:[814,2,1,""],builtin_float:[815,2,1,""],builtin_floordiv:[816,2,1,""],builtin_ge:[817,2,1,""],builtin_getattr:[818,2,1,""],builtin_getattribute:[819,2,1,""],builtin_getitem:[820,2,1,""],builtin_gt:[821,2,1,""],builtin_int:[822,2,1,""],builtin_invert:[823,2,1,""],builtin_le:[824,2,1,""],builtin_lt:[825,2,1,""],builtin_mul:[826,2,1,""],builtin_ne:[827,2,1,""],builtin_neg:[828,2,1,""],builtin_or:[829,2,1,""],builtin_pos:[830,2,1,""],builtin_pow:[831,2,1,""],builtin_radd:[832,2,1,""],builtin_rand:[833,2,1,""],builtin_rfloordiv:[834,2,1,""],builtin_rmul:[835,2,1,""],builtin_ror:[836,2,1,""],builtin_rpow:[837,2,1,""],builtin_rsub:[838,2,1,""],builtin_rtruediv:[839,2,1,""],builtin_rxor:[840,2,1,""],builtin_setitem:[841,2,1,""],builtin_sub:[842,2,1,""],builtin_truediv:[843,2,1,""],builtin_xor:[844,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[846,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[847,1,1,""],DevClonedItem:[849,1,1,""],DevClonedIter:[850,1,1,""],DevClonedNest:[851,1,1,""],DevDistItem:[852,1,1,""],DevDistIter:[853,1,1,""],DevDistNest:[854,1,1,""],DevManager:[847,1,1,""],DevMapper:[856,1,1,""],DevMapperMultiProc:[857,1,1,""],MultiDev:[847,1,1,""],MultiDevItem:[859,1,1,""],MultiDevIter:[860,1,1,""],MultiDevNest:[861,1,1,""],Profiler:[862,1,1,""],clear_mem_on_dev:[863,2,1,""],default_device:[864,2,1,""],dev:[865,2,1,""],dev_clone:[866,2,1,""],dev_clone_array:[867,2,1,""],dev_clone_iter:[868,2,1,""],dev_clone_nest:[869,2,1,""],dev_dist:[870,2,1,""],dev_dist_array:[871,2,1,""],dev_dist_iter:[872,2,1,""],dev_dist_nest:[873,2,1,""],dev_from_str:[874,2,1,""],dev_to_str:[875,2,1,""],dev_unify:[876,2,1,""],dev_unify_array:[877,2,1,""],dev_unify_iter:[878,2,1,""],dev_unify_nest:[879,2,1,""],dev_util:[880,2,1,""],get_all_arrays_on_dev:[881,2,1,""],gpu_is_available:[882,2,1,""],num_arrays_on_dev:[883,2,1,""],num_cpu_cores:[884,2,1,""],num_gpus:[885,2,1,""],percent_used_mem_on_dev:[886,2,1,""],print_all_arrays_on_dev:[887,2,1,""],set_default_device:[888,2,1,""],set_split_factor:[889,2,1,""],split_factor:[890,2,1,""],split_func_call:[891,2,1,""],to_dev:[892,2,1,""],total_mem_on_dev:[893,2,1,""],tpu_is_available:[894,2,1,""],unset_default_device:[895,2,1,""],used_mem_on_dev:[896,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[847,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[847,3,1,""],da_tune_step:[847,3,1,""],dim_size:[847,3,1,""],ds_tune_step:[847,3,1,""],map:[847,3,1,""],repeated_config_check:[847,3,1,""],tune_step:[847,3,1,""],tuned:[847,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[856,3,1,""],map:[856,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[857,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[847,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[859,3,1,""],items:[859,3,1,""],keys:[859,3,1,""],shape:[859,3,1,""],values:[859,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[860,3,1,""],at_dev:[860,3,1,""],at_devs:[860,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[861,3,1,""],at_dev:[861,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[862,3,1,""],start:[862,3,1,""],stop:[862,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[897,1,1,""],DefaultFloatDtype:[897,1,1,""],DefaultIntDtype:[897,1,1,""],astype:[897,2,1,""],cast:[901,2,1,""],closest_valid_dtype:[902,2,1,""],convert_dtype:[903,2,1,""],default_dtype:[904,2,1,""],default_float_dtype:[905,2,1,""],default_int_dtype:[906,2,1,""],dtype:[907,2,1,""],dtype_bits:[908,2,1,""],dtype_from_str:[909,2,1,""],dtype_to_str:[910,2,1,""],invalid_dtype:[911,2,1,""],is_float_dtype:[912,2,1,""],is_int_dtype:[913,2,1,""],set_default_dtype:[914,2,1,""],set_default_float_dtype:[915,2,1,""],set_default_int_dtype:[916,2,1,""],unset_default_dtype:[917,2,1,""],unset_default_float_dtype:[918,2,1,""],unset_default_int_dtype:[919,2,1,""],valid_dtype:[920,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[897,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[897,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[897,3,1,""]},"ivy.functional.ivy.core.general":{"default":[946,2,1,""],abs:[922,2,1,""],all_equal:[923,2,1,""],arange:[924,2,1,""],arg_names:[925,2,1,""],argmax:[926,2,1,""],argmin:[927,2,1,""],array:[928,2,1,""],array_equal:[929,2,1,""],arrays_equal:[930,2,1,""],asarray:[921,2,1,""],assert_supports_inplace:[931,2,1,""],broadcast_to:[932,2,1,""],cache_fn:[933,2,1,""],ceil:[934,2,1,""],clip:[935,2,1,""],clip_matrix_norm:[936,2,1,""],clip_vector_norm:[937,2,1,""],concatenate:[938,2,1,""],constant_pad:[939,2,1,""],container_types:[940,2,1,""],copy_array:[941,2,1,""],cross:[942,2,1,""],cumprod:[943,2,1,""],cumsum:[944,2,1,""],current_framework_str:[945,2,1,""],einops_rearrange:[947,2,1,""],einops_reduce:[948,2,1,""],einops_repeat:[949,2,1,""],equal:[950,2,1,""],exists:[951,2,1,""],expand_dims:[952,2,1,""],flip:[953,2,1,""],floor:[954,2,1,""],floormod:[955,2,1,""],fourier_encode:[956,2,1,""],full:[957,2,1,""],gather:[958,2,1,""],gather_nd:[959,2,1,""],get_all_arrays_in_memory:[960,2,1,""],get_min_base:[961,2,1,""],get_min_denominator:[962,2,1,""],get_num_dims:[963,2,1,""],get_referrers_recursive:[964,2,1,""],has_nans:[965,2,1,""],identity:[966,2,1,""],indices_where:[967,2,1,""],inplace_arrays_supported:[968,2,1,""],inplace_decrement:[969,2,1,""],inplace_increment:[970,2,1,""],inplace_update:[971,2,1,""],inplace_variables_supported:[972,2,1,""],is_array:[973,2,1,""],isinf:[974,2,1,""],isnan:[975,2,1,""],linear_resample:[976,2,1,""],linspace:[977,2,1,""],logspace:[978,2,1,""],match_kwargs:[979,2,1,""],matmul:[980,2,1,""],maximum:[981,2,1,""],meshgrid:[982,2,1,""],minimum:[983,2,1,""],multiprocessing:[984,2,1,""],num_arrays_in_memory:[985,2,1,""],one_hot:[986,2,1,""],ones:[987,2,1,""],ones_like:[988,2,1,""],print_all_arrays_in_memory:[989,2,1,""],queue_timeout:[990,2,1,""],repeat:[991,2,1,""],reshape:[992,2,1,""],round:[993,2,1,""],scatter_flat:[994,2,1,""],scatter_nd:[995,2,1,""],set_min_base:[996,2,1,""],set_min_denominator:[997,2,1,""],set_queue_timeout:[998,2,1,""],set_tmp_dir:[999,2,1,""],shape:[1000,2,1,""],shape_to_tuple:[1001,2,1,""],split:[1002,2,1,""],squeeze:[1003,2,1,""],stable_divide:[1004,2,1,""],stable_pow:[1005,2,1,""],stack:[1006,2,1,""],supports_inplace:[1007,2,1,""],swapaxes:[1008,2,1,""],tile:[1009,2,1,""],tmp_dir:[1010,2,1,""],to_list:[1011,2,1,""],to_numpy:[1012,2,1,""],to_scalar:[1013,2,1,""],transpose:[1014,2,1,""],try_else_none:[1015,2,1,""],unstack:[1016,2,1,""],value_is_nan:[1017,2,1,""],where:[1018,2,1,""],zero_pad:[1019,2,1,""],zeros:[1020,2,1,""],zeros_like:[1021,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1022,1,1,""],adam_step:[1024,2,1,""],adam_update:[1025,2,1,""],execute_with_gradients:[1026,2,1,""],gradient_descent_update:[1027,2,1,""],is_variable:[1028,2,1,""],lamb_update:[1029,2,1,""],lars_update:[1030,2,1,""],optimizer_update:[1031,2,1,""],set_with_grads:[1032,2,1,""],stop_gradient:[1033,2,1,""],unset_with_grads:[1034,2,1,""],variable:[1035,2,1,""],variable_data:[1036,2,1,""],with_grads:[1037,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1022,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1039,2,1,""],float_img_to_uint8_img:[1040,2,1,""],gradient_image:[1041,2,1,""],random_crop:[1042,2,1,""],stack_images:[1043,2,1,""],uint8_img_to_float_img:[1044,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1046,2,1,""],inv:[1047,2,1,""],matrix_norm:[1048,2,1,""],pinv:[1049,2,1,""],svd:[1050,2,1,""],vector_norm:[1051,2,1,""],vector_to_skew_symmetric_matrix:[1052,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1054,2,1,""],logical_not:[1055,2,1,""],logical_or:[1056,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1058,2,1,""],acosh:[1059,2,1,""],asin:[1060,2,1,""],asinh:[1061,2,1,""],atan2:[1063,2,1,""],atan:[1062,2,1,""],atanh:[1064,2,1,""],cos:[1065,2,1,""],cosh:[1066,2,1,""],divide:[1067,2,1,""],erf:[1068,2,1,""],exp:[1069,2,1,""],log:[1070,2,1,""],sin:[1071,2,1,""],sinh:[1072,2,1,""],tan:[1073,2,1,""],tanh:[1074,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1076,2,1,""],maml_step:[1077,2,1,""],reptile_step:[1078,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1079,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1124,2,1,""],copy_nest:[1125,2,1,""],index_nest:[1126,2,1,""],map:[1127,2,1,""],map_nest_at_index:[1128,2,1,""],map_nest_at_indices:[1129,2,1,""],multi_index_nest:[1130,2,1,""],nested_indices_where:[1131,2,1,""],nested_map:[1132,2,1,""],set_nest_at_index:[1133,2,1,""],set_nest_at_indices:[1134,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1136,2,1,""],randint:[1137,2,1,""],random_normal:[1138,2,1,""],random_uniform:[1139,2,1,""],seed:[1140,2,1,""],shuffle:[1141,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1143,2,1,""],reduce_max:[1144,2,1,""],reduce_mean:[1145,2,1,""],reduce_min:[1146,2,1,""],reduce_prod:[1147,2,1,""],reduce_std:[1148,2,1,""],reduce_sum:[1149,2,1,""],reduce_var:[1150,2,1,""]},"ivy.functional.ivy.nn":{activations:[1152,0,0,"-"],layers:[1160,0,0,"-"],losses:[1173,0,0,"-"],norms:[1177,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1153,2,1,""],leaky_relu:[1154,2,1,""],relu:[1155,2,1,""],sigmoid:[1156,2,1,""],softmax:[1157,2,1,""],softplus:[1158,2,1,""],tanh:[1159,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1161,2,1,""],conv1d_transpose:[1162,2,1,""],conv2d:[1163,2,1,""],conv2d_transpose:[1164,2,1,""],conv3d:[1165,2,1,""],conv3d_transpose:[1166,2,1,""],depthwise_conv2d:[1167,2,1,""],dropout:[1168,2,1,""],linear:[1169,2,1,""],lstm_update:[1170,2,1,""],multi_head_attention:[1171,2,1,""],scaled_dot_product_attention:[1172,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1174,2,1,""],cross_entropy:[1175,2,1,""],sparse_cross_entropy:[1176,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1178,2,1,""]},"ivy.graph_compiler":{compiler:[1179,0,0,"-"],globals:[1182,0,0,"-"],graph:[1185,0,0,"-"],helpers:[1187,0,0,"-"],op_logging:[1188,0,0,"-"],param:[1189,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1180,2,1,""],show_graph:[1181,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1183,2,1,""],log_global_inference_rel_times:[1184,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1185,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1185,3,1,""],add_fn_to_dict:[1185,3,1,""],add_param:[1185,3,1,""],compiled:[1185,3,1,""],connect:[1185,3,1,""],debug_info:[1185,3,1,""],get_param:[1185,3,1,""],get_param_recursive:[1185,3,1,""],include_generators:[1185,3,1,""],increment_param_count:[1185,3,1,""],log_all_ops:[1185,3,1,""],params_all_empty:[1185,3,1,""],save_debug_info:[1185,3,1,""],set_param:[1185,3,1,""],show:[1185,3,1,""],show_debug_info:[1185,3,1,""],update_inference_times:[1185,3,1,""],with_array_caching:[1185,3,1,""]},"ivy.graph_compiler.param":{Param:[1189,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1189,3,1,""],count:[1189,3,1,""],depth:[1189,3,1,""],get:[1189,3,1,""],is_var:[1189,3,1,""],ptype:[1189,3,1,""],set:[1189,3,1,""],set_count:[1189,3,1,""],shape:[1189,3,1,""]},"ivy.stateful":{activations:[1194,0,0,"-"],converters:[1197,0,0,"-"],initializers:[1199,0,0,"-"],layers:[1208,0,0,"-"],module:[1220,0,0,"-"],norms:[1222,0,0,"-"],optimizers:[1224,0,0,"-"],sequential:[1230,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1195,1,1,""],GELU:[1196,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1195,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1196,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1198,2,1,""]},"ivy.stateful.initializers":{Constant:[1199,1,1,""],FirstLayerSiren:[1201,1,1,""],GlorotUniform:[1202,1,1,""],KaimingNormal:[1199,1,1,""],Ones:[1204,1,1,""],Siren:[1205,1,1,""],Uniform:[1199,1,1,""],Zeros:[1207,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1199,3,1,""],create_variables:[1199,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1201,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1202,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1199,3,1,""],create_variables:[1199,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1204,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1205,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1199,3,1,""],create_variables:[1199,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1207,3,1,""]},"ivy.stateful.layers":{Conv1D:[1209,1,1,""],Conv1DTranspose:[1210,1,1,""],Conv2D:[1211,1,1,""],Conv2DTranspose:[1212,1,1,""],Conv3D:[1213,1,1,""],Conv3DTranspose:[1214,1,1,""],DepthwiseConv2D:[1215,1,1,""],Dropout:[1216,1,1,""],LSTM:[1217,1,1,""],Linear:[1218,1,1,""],MultiHeadAttention:[1219,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1209,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1210,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1211,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1212,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1213,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1214,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1215,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1216,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1217,3,1,""],get_initial_state:[1217,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1218,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1219,3,1,""]},"ivy.stateful.module":{Module:[1221,1,1,""]},"ivy.stateful.module.Module":{__init__:[1221,3,1,""],build:[1221,3,1,""],build_mode:[1221,3,1,""],built:[1221,3,1,""],check_submod_rets:[1221,3,1,""],compile_graph:[1221,3,1,""],compile_on_next_step:[1221,3,1,""],get_mod_key:[1221,3,1,""],mod_depth:[1221,3,1,""],mod_height:[1221,3,1,""],mod_with_top_mod_key_chain:[1221,3,1,""],save_weights:[1221,3,1,""],show_graph:[1221,3,1,""],show_mod_in_top_mod:[1221,3,1,""],show_structure:[1221,3,1,""],show_v_in_top_v:[1221,3,1,""],sub_mods:[1221,3,1,""],track_submod_call_order:[1221,3,1,""],track_submod_rets:[1221,3,1,""],v_with_top_v_key_chains:[1221,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1223,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1223,3,1,""]},"ivy.stateful.optimizers":{Adam:[1225,1,1,""],LAMB:[1226,1,1,""],LARS:[1227,1,1,""],Optimizer:[1228,1,1,""],SGD:[1229,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1225,3,1,""],set_state:[1225,3,1,""],state:[1225,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1226,3,1,""],set_state:[1226,3,1,""],state:[1226,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1227,3,1,""],set_state:[1227,3,1,""],state:[1227,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1228,3,1,""],compile_graph:[1228,3,1,""],compile_on_next_step:[1228,3,1,""],set_state:[1228,3,1,""],show_graph:[1228,3,1,""],step:[1228,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1229,3,1,""],set_state:[1229,3,1,""],state:[1229,3,1,""]},"ivy.stateful.sequential":{Sequential:[1231,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1231,3,1,""]},"ivy.verbosity":{cprint:[1236,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1235,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1224,1225,1226],"02886":1191,"100":[1079,1191,1233],"2021":1191,"2102":1191,"360":[1057,1065,1071,1073],"754":[787,788],"999":[1022,1024,1025,1029,1224,1225,1226],"abstract":[847,862,1191,1224,1228],"boolean":[40,41,847,882,894,897,911,920,921,923,929,930,965,967,968,972,973,974,975,1007,1017,1022,1028,1053,1054,1055,1056,1075,1076,1077,1079],"break":43,"case":[15,18,19,40,41,42,43,847,886,893,896,921,924,992,994,995,1045,1048,1051,1079,1123,1126,1130,1191,1208,1219,1220,1221,1224,1228,1237],"catch":[921,946],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,373,787,789,847,849,850,851,852,853,854,856,857,859,860,861,862,874,875,897,921,925,979,987,1022,1036,1079,1123,1125,1132,1173,1175,1176,1185,1189,1191,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1237],"default":[15,18,19,40,41,42,43,799,800,802,803,804,845,846,847,856,857,864,865,869,870,871,872,873,876,877,878,879,886,889,890,891,896,897,904,905,906,907,921,923,924,926,927,936,937,938,939,942,943,944,953,956,957,958,963,965,966,976,978,979,982,984,987,990,991,994,995,998,1000,1002,1004,1005,1014,1016,1017,1020,1022,1025,1027,1028,1029,1030,1031,1033,1037,1045,1048,1051,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1152,1153,1157,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],"final":[40,41,921,956,977,978,1079,1208,1219,1234],"float":[40,41,42,43,787,788,806,831,847,856,857,880,886,889,893,896,897,905,912,921,924,936,937,939,956,957,961,962,978,996,997,998,1004,1005,1022,1024,1025,1027,1029,1030,1031,1038,1040,1044,1057,1067,1075,1076,1077,1078,1079,1135,1138,1139,1152,1154,1160,1168,1171,1172,1173,1174,1175,1176,1177,1178,1208,1216,1219,1222,1223,1224,1225,1226,1227,1228,1229],"function":[15,40,41,43,375,376,379,788,789,792,800,803,804,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1191,1194,1195,1196,1224,1227,1228,1229,1233,1234,1237],"import":[43,1191,1234,1237],"int":[40,41,42,43,787,788,789,799,800,802,803,804,806,831,845,846,847,869,870,871,872,873,876,877,878,879,884,885,891,897,906,908,913,921,926,927,932,938,939,943,944,947,948,949,952,953,956,957,958,963,966,976,977,978,986,987,991,992,994,995,1000,1001,1002,1003,1006,1008,1009,1014,1016,1019,1020,1022,1024,1025,1029,1038,1042,1043,1045,1048,1051,1075,1076,1077,1078,1079,1123,1132,1135,1136,1137,1139,1140,1142,1144,1145,1146,1147,1148,1149,1150,1152,1157,1160,1161,1162,1163,1164,1165,1166,1167,1171,1173,1175,1176,1177,1178,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1222,1223],"long":[1160,1170],"new":[40,41,43,897,901,921,922,932,947,948,949,952,956,957,958,959,987,992,994,995,996,997,1004,1005,1006,1020,1022,1025,1027,1029,1030,1031,1038,1040,1042,1044,1057,1059,1061,1064,1066,1072,1074,1079,1123,1133,1134,1135,1136,1177,1178,1191,1197,1198,1208,1218,1222,1223,1224,1225,1226,1227,1228,1229,1234,1237],"public":[921,940],"return":[15,16,17,18,19,40,41,42,43,787,788,789,791,792,799,800,802,803,804,806,831,845,846,847,856,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,882,883,885,886,890,891,892,893,894,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,920,921,922,923,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,991,992,993,994,995,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1033,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1191,1197,1198,1208,1217,1218,1224,1228,1233,1234,1237],"short":[1160,1170,1191,1237],"static":[40,41,845,846],"super":1079,"true":[40,41,42,791,792,799,800,802,803,804,845,846,847,921,923,931,933,951,956,965,967,1017,1018,1022,1025,1027,1028,1029,1030,1031,1033,1045,1048,1051,1075,1076,1077,1078,1079,1123,1124,1131,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1152,1153,1160,1168,1173,1174,1175,1176,1179,1180,1181,1185,1208,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],"try":[40,41,921,1015,1079],"var":[40,41,1075,1076,1077,1237],"while":[40,41,42,1079],AND:[802,803,1053,1054],But:1237,For:[43,921,924,935,1006,1022,1028,1036,1057,1058,1191,1197,1198,1234,1237],Its:[1057,1062],NOT:[1053,1055],One:[40,41,921,948,992,1135,1137,1237],Ones:[1191,1199],Such:[921,940],That:1234,The:[15,16,17,18,19,40,41,42,43,791,792,799,800,802,803,804,806,831,845,846,847,856,857,863,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,886,889,890,891,892,893,896,897,901,902,903,908,909,910,911,920,921,924,928,929,932,933,936,937,938,939,941,942,945,946,950,953,956,958,959,966,969,970,971,973,976,978,980,982,984,987,988,991,992,994,995,996,997,998,1001,1002,1003,1004,1005,1006,1009,1017,1020,1021,1022,1024,1025,1027,1029,1030,1031,1033,1036,1038,1040,1042,1044,1045,1048,1050,1057,1058,1060,1062,1065,1067,1068,1069,1070,1071,1073,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1191,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1234,1237],There:[43,1191,1234],These:[43,1191],Used:[1123,1124,1131,1220,1221],Using:[1191,1192,1237],With:[40,41,1045,1048,1051,1142,1144,1145,1146,1147,1148,1149,1150,1191,1233,1237],__array__:[921,928],__call__:[1208,1219,1220,1221],__del__:1079,__dict__:[1079,1234],__enter__:1079,__exit__:1079,__getitem__:1079,__getstate__:1079,__init__:[40,41,42,43,59,60,79,197,373,374,484,601,847,848,855,856,857,858,859,860,861,862,897,898,899,900,1022,1023,1079,1083,1090,1185,1186,1189,1190,1191,1194,1195,1196,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1237],__iter__:1079,__len__:1079,__next__:1079,__pow__:43,__repr__:1079,_assign_vari:1233,_axi:1079,_base:[1123,1124,1131],_compute_node_da_ratio:1079,_compute_node_strs_da:1079,_concat_unify_arrai:1079,_counter:1079,_cur_framework:[43,1079],_da_direct:1079,_da_directions_flip:1079,_da_step_tim:1079,_da_tim:1079,_da_tune_count:1079,_data:1079,_delta_da_dim_s:1079,_delta_sf:1079,_dict:1079,_dim_siz:1079,_first_da_tune_step:1079,_first_ns_tune_step:1079,_fn:1079,_forward:[1191,1233],_get_kalman_param:1237,_get_prior:1237,_get_some_model:1237,_handle_flat_arrays_in_out:43,_index:[1123,1124,1131],_input_queu:1079,_length:1079,_max_depth:1079,_max_node_dim_step_ratio:1079,_max_node_dim_step_s:1079,_max_split_factor_step_s:1079,_mean_unify_arrai:1079,_min_bas:[921,1005,1177,1178,1222,1223],_min_denomin:[921,1004],_min_node_dim_s:1079,_min_sf_tune_step:1079,_min_unit_node_tune_step:1079,_model:1237,_native_wrapp:43,_node_mapp:1079,_node_percent_mem:1079,_node_str:1079,_node_str_da_ratio:1079,_node_strs_da:1079,_node_strs_kei:1079,_node_strs_n:1079,_node_util:1079,_ns_step_tim:1079,_ns_time:1079,_ns_tune_count:1079,_num_nod:1079,_num_work:1079,_observed_config:1079,_output_queu:1079,_paramet:1233,_percent_mem_inc_per_sf:1079,_percent_mem_inc_per_unit_da_dim:1079,_percent_util_inc_per_unit_da_dim:1079,_ret_fn:1079,_safety_factor:1079,_save_dir:1079,_shift_da_split:1079,_shift_n:1079,_slice:1079,_step:[1224,1228],_sum_unify_arrai:1079,_timeout:1079,_tune:1079,_tune_da:1079,_tune_n:1079,_tune_step:1079,_unit_da_tune_count:1079,_unroll_step:1237,_with_node_mappig:1079,_worker:1079,_worker_class:1079,_worker_fn:1079,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,847,856,862,1079,1220,1221,1224,1228],abil:1191,abl:[40,41],about:[787,788,789],abov:[43,1135,1137],above_height:[40,41],abs:[270,519,637,921,1079],absolut:[40,41,921,922],abstractmethod:1079,accept:[15,43,1191],access:[40,41,1234],accord:[40,41,787,788,921,939,958,994,995,1014,1019],accordingli:[802,803,804],accur:[59,373,847,859,860,861,862,897,1022,1185,1189,1199,1201,1202,1204,1205,1207],aco:[731,1057],acosh:[731,1057],across:[40,41,847,856,857,866,867,869,870,871,872,873,879,889,890,921,926,927,929,930,1079,1123,1127],activ:[1153,1154,1155,1156,1157,1158,1159,1191,1195,1196],actual:1234,adam:[1022,1024,1025,1029,1191,1224,1226,1233],adam_step:1022,adam_upd:1022,adapt:[1022,1030,1224,1227],add:[40,41,43,1079,1173,1174,1175,1176,1177,1178,1191,1222,1223,1234],add_fn_to_dict:1185,add_param:1185,added:[43,921,1004,1005,1230,1231],adding:[921,932],addit:[40,41,43,921,947,948,949,1177,1178,1208,1218],adher:43,adjac:[921,924],adopt:[921,940],affect:[921,924],affin:[1222,1223],after:[921,976,1022,1025,1026,1027,1029,1030,1031,1038,1039,1177,1178,1224,1225,1226,1227,1228,1229,1237],after_1:[921,939,1019],after_n:[921,939,1019],again:43,against:[40,41,1045,1048,1051,1142,1144,1145,1146,1147,1148,1149,1150],agnost:[43,1191,1233,1234],aim:1237,algebra:1045,algorithm:[1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215,1237],align:[40,41,43,921,932],aliv:[847,881,883,887,921,960,985,989],all:[15,16,17,18,19,40,41,43,94,212,389,499,616,802,845,846,847,856,881,887,921,922,923,929,930,940,953,960,966,989,1003,1075,1076,1077,1078,1079,1123,1124,1125,1131,1132,1135,1136,1139,1142,1144,1145,1146,1147,1148,1149,1150,1160,1170,1191,1234,1237],all_depth:[40,41],all_equ:921,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1123,all_tru:[40,41],alloc:[847,1079],allow:[921,977,978,979,1220,1221],allow_dupl:[921,979],alon:[847,886,896,1079,1191],along:[40,41,43,799,800,802,803,804,847,870,871,872,873,876,877,878,879,891,921,938,943,944,953,958,976,977,978,991,1002,1006,1009,1016,1045,1048,1051,1075,1076,1077,1078,1079,1135,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150],alongsid:[1233,1234],alpha:[1152,1154],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,847,1079],also:[40,41,43,921,924,1022,1025,1075,1076,1077,1078,1123,1124,1125,1131,1132,1160,1169,1208,1218,1233],altern:1233,alwai:[40,41,43,1022,1028,1033],among:[40,41],amount:[847,893,1079,1191],angl:[1057,1058,1063],ani:[15,16,17,18,19,40,41,43,94,212,389,499,616,802,845,846,847,849,852,856,857,859,868,869,872,873,878,921,923,924,928,946,947,948,949,950,951,965,973,979,1004,1005,1022,1026,1079,1123,1124,1127,1131,1132,1133,1134,1135,1139,1191,1197,1198,1220,1221,1233,1234,1237],anoth:[40,41,897,903,1191],another_backend:43,anyth:[43,1237],anywai:43,apart:43,api:[1191,1192],appear:[921,952],append:[40,41,1079],appli:[15,18,19,40,41,921,947,948,949,1022,1029,1030,1045,1050,1053,1054,1055,1056,1075,1076,1077,1123,1127,1130,1132,1152,1153,1154,1155,1156,1157,1158,1159,1160,1169,1171,1172,1177,1178,1191,1194,1195,1196,1222,1223],applic:[1123,1127,1132,1160,1171,1172,1191,1237],approxim:[43,806,831,1152,1153],arang:[114,270,404,519,637,921,977,978],arbitrari:[40,41,847,876,877,879,1079],arc:[1057,1063],arcco:[1057,1058],arctan:[1057,1062],area:1191,arg:[15,16,17,40,41,43,59,63,847,856,869,873,879,891,921,947,948,949,995,1079,1179,1180,1181,1185,1197,1198,1220,1221],arg_nam:921,arg_stateful_idx:[1179,1180,1181,1185,1220,1221],argmax:[114,404,519,637,921],argmin:[114,404,519,637,921],args_clon:1079,args_dist:1079,args_to_ivi:[15,1191],args_to_n:[15,1191],args_uni:1079,argsort:[91,209,386,496,613,799],argument:[15,16,17,18,19,40,41,42,43,59,63,845,846,847,856,857,869,873,879,921,924,925,933,946,979,995,1057,1058,1079,1123,1127,1197,1198,1220,1221],aris:[1191,1237],arithmet:[43,1142,1145,1148,1150],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,114,270,404,519,637,787,788,789,791,792,799,800,802,803,804,831,847,865,866,867,870,871,872,873,876,877,878,879,881,883,887,891,892,897,901,907,912,913,921,922,923,924,926,927,929,930,931,932,934,935,936,937,938,939,941,942,943,944,947,948,949,950,952,953,954,955,956,957,958,959,960,963,965,966,967,968,969,970,971,973,974,975,976,977,978,980,981,982,983,985,986,987,988,989,991,992,993,994,995,1000,1002,1003,1006,1007,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1022,1024,1025,1028,1029,1033,1035,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1123,1125,1132,1135,1136,1137,1138,1139,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1191,1192,1208,1216,1217,1219,1224,1228,1233,1234],arrang:[921,947],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,373,375,376,378,379,787,788,789,791,792,799,800,802,803,804],array_builtin:[43,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844],array_equ:[270,637,921],array_lik:[921,928],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,921],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1191],arraywithgener:[22,1191],arraywithgradi:[24,1191],arraywithimag:[26,1191],arraywithlinalg:[28,1191],arraywithlog:[30,1191],arraywithmath:[32,1191],arraywithmeta:[34,1191],arraywithrandom:[36,1191],arraywithreduct:[38,1191],arriv:[40,41,42],articl:1191,arxiv:1191,as_arrai:[40,41,921,963,1000],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[847,865,897,904,905,906,907],as_vari:[40,41],as_zero:[40,41],asarrai:[114,270,404,519,637,921],asin:[731,1057],asinh:[731,1057],aspect:[1038,1043],assert:[40,41,921,931,1079],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:921,associ:[43,1045,1052],assum:[1234,1237],astyp:897,asynchron:[40,41,42],at_dev:[40,42,847,860,861],at_kei:[40,41],at_key_chain:[40,41],at_nod:1079,atan2:[731,1057],atan:[731,1057],atanh:[731,1057],attent:[1160,1171,1172,1208,1219],attribut:[0,6,40,41,787,788,789,921,988,1021],audienc:[1191,1234],author:1191,avail:[40,41,847,882,884,885,894,921,948,1079],averag:[1022,1024,1025,1029,1075,1076,1077,1142,1145],average_across_step:[1075,1076,1077],avoid:[847,1079,1234],axes:[40,41,43,802,803,804,847,891,921,926,927,939,952,953,1008,1014,1019,1045,1048,1051,1079,1142,1144,1145,1146,1147,1148,1149,1150],axes_length:[40,41,921,947,948,949],axi:[40,41,799,800,802,803,804,847,849,852,859,870,871,872,873,876,877,878,879,891,921,926,927,938,939,942,943,944,952,953,958,976,977,978,991,1002,1003,1006,1008,1009,1016,1019,1045,1051,1079,1135,1141,1142,1144,1145,1146,1147,1148,1149,1150,1152,1157,1173,1175,1176],axis0:[40,41,921,1008],axis1:[40,41,921,1008],back:[1220,1221,1224,1228],backend:[15,17,19,40,41,373,375,376,378,379,847,882,885,894,897,903,911,920,921,968,972,1022,1025,1027,1029,1030,1031,1036,1079,1191,1192,1197,1198,1224,1225,1226,1227,1228,1229,1233,1234,1237],background:[1191,1234],backprop:1237,backward:[802,803,804,1233],band:[921,956],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,373,806,831,847,849,850,851,852,853,854,856,857,859,860,861,862,897,921,961,978,996,1005,1022,1079,1142,1143,1185,1189,1191,1194,1195,1196,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1237],batch:[40,41,847,889,890,921,953,956,966,1038,1042,1045,1050,1075,1076,1077,1078,1079,1160,1169,1177,1178,1222,1223],batch_shap:[921,953,966,986,1038,1039,1040,1041,1042,1043,1044,1045,1052,1135,1136,1160,1170,1171,1172,1208,1217],batch_siz:[1079,1135,1136,1160,1161,1162,1163,1164,1165,1166,1167],bayesian:1237,becaus:[43,921,924],becom:[921,935,1057,1063,1237],been:[921,947,948,949,1135,1136],befor:[40,41,43,847,891,1075,1076,1077,1079,1123,1132,1142,1144,1145,1146,1147,1148,1149,1150,1160,1171,1172,1237],before_1:[921,939,1019],before_n:[921,939,1019],begin:[1123,1124,1131,1234],behaviour:[43,1237],behind:[1022,1025,1027,1029,1030,1031,1191],being:[40,41,43,921,924,990,998,1079],belong:[40,41],below:[43,1191,1234,1237],below_depth:[40,41],benefit:1191,bernoul:[1160,1168,1208,1216],best:[921,979,1191],beta1:[1022,1024,1025,1029,1224,1225,1226],beta2:[1022,1024,1025,1029,1224,1225,1226],beta:[1177,1178],between:[40,41,42,787,788,921,924,1123,1127,1135,1137,1173,1175,1176,1224,1226],bia:[1160,1169,1170,1208,1209,1210,1211,1212,1213,1214,1215,1218],bias_initi:[1208,1209,1210,1211,1212,1213,1214,1215,1218],bilinear:[1038,1039],bilinear_resampl:[154,330,447,567,716,1038],bilinearli:[1038,1039],binari:[1173,1174],binary_cross_entropi:1173,bit:[373,787,788,789,897,908,1038,1040,1044,1191],bitwise_oper:[0,7,8],block:[1191,1234],bool:[15,18,19,40,41,42,43,791,792,799,800,802,803,804,845,846,847,865,878,882,886,891,894,896,897,907,921,923,929,930,943,946,950,951,956,963,965,973,979,1000,1002,1016,1017,1018,1022,1025,1026,1027,1028,1029,1030,1031,1033,1045,1048,1051,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1152,1153,1160,1168,1197,1198,1208,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],both:[43,921,942],bottom:1191,boundari:[40,41,1135,1139],branch:[845,846],brittl:43,broadcast:[40,41,43,802,803,804,806,831,921,932,950,981,982,983,991,1045,1048,1051,1057,1063,1067,1142,1144,1145,1146,1147,1148,1149,1150],broadcast_to:[270,637,921],build:[1079,1191,1208,1219,1220,1221],build_mod:[1208,1219,1220,1221],builder:1191,built:[847,921,924,1079,1208,1219,1220,1221],builtin:43,builtin_ab:[225,806],builtin_add:[225,806],builtin_and:[225,806],builtin_bool:[225,806],builtin_contain:[225,806],builtin_deepcopi:[225,806],builtin_dir:[225,806],builtin_eq:[225,806],builtin_float:[225,806],builtin_floordiv:[225,806],builtin_g:[225,806],builtin_getattr:[225,806],builtin_getattribut:[225,806],builtin_getitem:[225,806],builtin_gt:[225,806],builtin_int:[225,806],builtin_invert:[225,806],builtin_l:[225,806],builtin_lt:[225,806],builtin_mul:[225,806],builtin_n:[225,806],builtin_neg:[225,806],builtin_or:[225,806],builtin_po:[225,806],builtin_pow:[43,225,806],builtin_radd:[225,806],builtin_rand:[225,806],builtin_rfloordiv:[225,806],builtin_rmul:[225,806],builtin_ror:[225,806],builtin_rpow:[225,806],builtin_rsub:[225,806],builtin_rtruediv:[225,806],builtin_rxor:[225,806],builtin_setitem:[225,806],builtin_some_op:43,builtin_sub:[225,806],builtin_truediv:[225,806],builtin_xor:[225,806],bypass:1234,cach:[847,863,921,933],cache_fn:921,calcul:[40,41,42,43,806,831,1057,1067],call:[43,847,891,921,990,998,1015,1022,1026,1079,1123,1124,1127,1131,1208,1219,1220,1221,1224,1228,1234,1237],callabl:[40,41,845,846,847,856,857,891,921,933,946,948,979,1015,1075,1076,1077,1078,1079,1123,1127,1128,1129,1131,1132,1160,1171],can:[43,847,889,890,891,921,992,1038,1040,1079,1191,1233,1234,1237],cancel_join_thread:1079,captur:1191,cast:[40,41,114,270,404,519,637,897,921,938,1038,1040,1044],catch_except:[921,946],categori:43,ceil:[270,637,921,924],cell:[1160,1170,1208,1217],certain:[40,41,921,924,977,978],chain:[40,41,1075,1076,1077,1230,1231],chang:[847,921,992,1079,1123,1125,1132,1191,1233],channel:[921,956,1038,1040,1041,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218],check:[15,16,17,18,19,40,41,847,886,896,897,902,911,920,921,931,951,965,973,1007,1017,1022,1028,1079,1123,1124,1131,1191,1234],check_nest:[1123,1131],check_shap:[40,41],check_submod_ret:[1220,1221],check_typ:[40,41],choic:[1191,1234],choleski:[720,1045],choos:[921,1018,1057,1063,1191],choose_random_framework:59,chosen:[40,41,921,924,1018],chunk:[847,889,890,891,1079],chunk_siz:[847,891,1079],circl:[1057,1058,1060],clark:1191,clear:[847,863,1079],clear_framework_stack:59,clear_mem_on_dev:[629,847],click:1191,clip:[40,41,270,637,921,936,937,981,983,1191],clip_matrix_norm:921,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,921],clipped_delta:1079,clone:[40,41,847,866,867,868,869,1079],clone_arrai:1079,clone_it:1079,clone_nest:1079,clonedit:1079,cloneditem:1079,clonednest:1079,close:[43,1038,1043,1057,1060,1079,1237],closest:[897,902],closest_valid_dtyp:897,code:[40,41,42,43,1191,1192,1233,1234],codebas:[847,889,890,1079,1191,1234,1237],collect:[15,40,41,806,845,847,897,921,1022,1038,1045,1053,1057,1079,1123,1135,1142,1152,1160,1173,1177,1194,1208,1222,1224],color:[40,41,42,1235,1236],column:[921,966],combin:[40,41,42,1038,1043,1191,1237],combined_batch_s:1079,come:1234,command:1191,commit:1237,common:[40,41,1057,1063],common_key_chain:[40,41],commun:[1191,1234],compar:[40,41,921,923,929,930],comparison_oper:[0,9,10],compat:[43,802,803,804,806,831,921,950,992,1057,1067,1191,1237],compil:[270,404,637,1180,1181,1185,1191,1220,1221,1224,1225,1226,1227,1228,1229],compile_graph:[1179,1191,1220,1221,1224,1228],compile_on_next_step:[1220,1221,1224,1225,1226,1227,1228,1229],complet:[40,41,1079],complex:[1234,1237],compon:[921,942],composit:43,comput:[40,41,847,891,921,936,937,943,944,950,980,1022,1024,1025,1026,1027,1029,1030,1031,1033,1035,1038,1041,1045,1046,1047,1048,1049,1051,1053,1054,1055,1056,1057,1058,1060,1062,1063,1065,1068,1069,1070,1071,1073,1123,1127,1142,1143,1144,1145,1146,1147,1148,1149,1150,1160,1161,1162,1163,1164,1165,1166,1167,1169,1171,1173,1174,1175,1176],concat:[40,41,847,876,877,878,879,891,921,956,1079],concaten:[40,41,114,270,404,519,637,921,956,1079,1191],concatten:[40,41,847,876,877,878,879,891,1079],condit:[845,846,921,1018,1123,1131],conditon:[1123,1131],config:[40,41,1079],config_list:1079,configur:[40,41],conjunct:1234,connect:[1185,1208,1218,1219],consid:[40,41,1045,1051,1233,1237],consist:[40,41,847,879,1079,1142,1143,1220,1221,1234],constant:[847,856,857,921,939,1079,1123,1127,1173,1174,1175,1176,1177,1178,1199,1200,1204,1207,1220,1221,1222,1223,1234],constant_kwarg:1079,constant_pad:[270,519,637,921],constitu:[40,41],construct:[921,1009,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233],constructor:[40,41,42,921,925,1230,1231],consum:[847,1079],cont_feat_dim:[1160,1171],contaienr:[40,41],contain:[15,18,19,42,43,791,792,799,800,802,803,804,806,831,847,866,870,891,897,901,921,922,926,927,935,936,937,940,950,965,981,983,993,1004,1005,1022,1024,1025,1027,1029,1030,1031,1057,1067,1075,1076,1077,1078,1079,1135,1136,1142,1144,1145,1146,1148,1150,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[637,921],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[921,984,1160,1171,1208,1219],context_dim:[1208,1219],contextmanag:[59,60],continu:[43,1079,1234],contract:[40,41,1142,1143],contribut:[1191,1192],contributor:1191,control:1191,conv1d:[184,361,471,775,1160,1191,1208],conv1d_transpos:[184,361,471,775,1160],conv1dtranspos:[1191,1208],conv2d:[184,361,471,592,775,1160,1191,1208],conv2d_transpos:[184,361,471,775,1160],conv2dtranspos:[1191,1208],conv3d:[184,361,471,592,775,1160,1191,1208],conv3d_transpos:[184,361,471,775,1160],conv3dtranspos:[1191,1208],convent:[40,41,1142,1143],conver:[847,863,874,886,893,896,1079],convers:[16,17,18,19,40,41,1079,1191],convert:[15,16,17,18,19,40,41,43,847,874,875,897,903,909,910,921,1001,1012,1013,1038,1040,1044,1045,1052,1079,1123,1125,1132,1191,1198],convert_dtyp:897,convolut:[1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],cool:43,cooler:43,coordin:[921,982,1057,1058,1060,1063],copi:[40,41,921,941,1079,1123,1125],copy_arrai:[637,921],copy_nest:1123,core:[806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1191],correct:[43,1191,1234],correctli:[40,41,1045,1048,1051,1057,1063,1142,1144,1145,1146,1147,1148,1149,1150],correspond:[40,41,43,806,831,921,938,1135,1136],cos:[731,921,956,1057,1058,1073,1234],cosh:[731,1057],cosin:[1057,1058,1059,1065,1066],cost:[1022,1024,1025,1027,1029,1030,1031,1075,1076,1077,1078],cost_fn:[1075,1078],could:1237,count:[40,41,802,803,804,1079,1142,1147,1149,1189],cprint:1235,cpu:[40,41,43,847,884,886,892,893,896,921,924,928,958,959,966,977,978,986,987,988,994,995,1020,1021,1079,1135,1136,1137,1138,1139,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231,1233,1234],creat:[40,41,847,856,857,921,924,928,957,958,959,966,977,978,986,987,988,994,995,1011,1020,1021,1022,1035,1079,1135,1136,1137,1138,1139,1191,1197,1198,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1237],create_if_abs:[40,41],create_vari:1199,creation:[40,41,42,43],crop:[1038,1042],crop_siz:[1038,1042],cross:[270,637,921,1173,1174,1175,1176],cross_entropi:1173,cuda:[40,41,847,856,875,892,921,924,928,958,959,966,977,978,986,987,988,994,995,1020,1021,1079,1135,1136,1137,1138,1139,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231],cumprod:[114,270,404,637,921],cumsum:[637,921],cumul:[921,943,944],current:[40,41,42,43,847,856,880,881,883,887,897,903,911,920,921,945,960,968,972,985,989,1079,1123,1124,1131,1191,1237],current_framework:59,current_framework_str:[637,921,1079],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1185,d_in:[1160,1161,1162,1163,1164,1165,1166],d_out:[1160,1161,1162,1163,1164,1165,1166],da_can_termin:1079,da_dim_s:[847,1079],da_direct:1079,da_tune_step:[847,1079],dai:1237,daniel:1191,data:[40,41,42,43,788,789,791,792,802,803,804,806,831,847,849,850,851,852,853,854,859,860,861,875,897,901,902,903,907,908,909,910,911,912,913,920,921,924,928,950,957,966,973,987,988,992,1003,1007,1020,1021,1022,1028,1036,1057,1067,1079,1160,1169,1191],data_format:[1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],data_type_funct:[373,375,376,787,788,789],dataset:[40,41],datatyp:[40,41,897,902,912,913],dcdw:[1022,1024,1025,1027,1029,1030],debug_info:1185,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1022,1029,1030,1224,1226,1227],decay_lambda:[1022,1029,1030,1224,1226,1227],decid:[40,41,1237],decompos:[1045,1046],decomposit:[1045,1046,1050],decor:43,decrement:[921,969],dedic:[1022,1036,1197,1198],deep:[40,41,1191],deep_copi:[40,41],deeper:[847,869,873,879,1079,1123,1132,1191],deepli:[1123,1125],def:[43,60,79,197,374,484,601,848,855,858,898,899,900,1023,1079,1083,1090,1186,1190,1191,1200,1203,1206,1233,1234,1237],default_dev:43,default_devic:847,default_dtyp:[43,897],default_float_dtyp:897,default_int_dtyp:897,default_key_color:[40,41,42],default_nod:1079,default_v:[921,946],defaultdevic:[847,848],defaultdtyp:[897,898],defaultfloatdtyp:[897,899],defaultintdtyp:[897,900],defer:43,defin:[43,921,942,986,988,1021,1135,1137],degre:[1057,1065,1071,1073],del:1079,delta:[1022,1024,1079,1185],delta_dim_s:1079,delta_percent_mem:1079,delta_sf:1079,delta_util:1079,demo:1191,denomin:[921,955,962,997,1004,1005,1177,1178,1222,1223],dens:[1208,1218],depend:[43,806,831,921,1018,1045,1050,1191],depth:[40,41,847,869,873,879,921,964,986,1079,1123,1132,1185,1189,1220,1221],depth_cutoff:[40,41],depthwis:[1160,1167,1208,1215],depthwise_conv2d:[184,361,471,592,775,1160],depthwiseconv2d:[1191,1208],deriv:[1022,1024,1025,1027,1029,1030,1031,1123,1125,1132,1191,1220,1224,1228,1230],descend:[799,800,1045,1050],descent:[1022,1027,1224,1229],describ:[40,41,1142,1143],design:[1191,1192],desir:[40,41,847,892,897,901,921,924,928,966,967,987,988,1020,1021,1038,1043,1079,1142,1144,1145,1146,1148,1150],desired_aspect_ratio:[1038,1043],desired_percent_increas:1079,detail:1237,detect:[40,41,1123,1124,1131],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,791,792,802,803,804,806,831,847,882,884,885,894,897,901,902,908,911,912,913,920,921,923,924,928,929,930,965,968,972,973,1007,1017,1022,1028,1057,1067,1075,1076,1077,1078,1079,1160,1171],dev:[40,41,42,43,107,264,512,629,847,850,851,853,854,856,857,860,861,863,864,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,883,886,887,888,889,890,891,892,893,896,921,924,928,958,959,966,977,978,986,987,988,994,995,1020,1021,1022,1037,1135,1136,1137,1138,1139,1197,1198,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231],dev_clon:[40,41,847],dev_clone_arrai:847,dev_clone_it:847,dev_clone_nest:847,dev_dist:[40,41,847],dev_dist_arrai:847,dev_dist_it:847,dev_dist_nest:847,dev_from_str:[43,107,264,512,629,847],dev_mapp:847,dev_str:[40,41],dev_to_str:[107,264,512,629,847],dev_unifi:847,dev_unify_arrai:847,dev_unify_it:847,dev_unify_nest:847,dev_util:847,devclonedit:847,devcloneditem:847,devclonednest:847,devdistit:847,devdistitem:847,devdistnest:847,develop:[1191,1234,1237],deviat:[40,41,1135,1138,1142,1148,1177,1178,1222,1223],devic:[21,40,41,43,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,921,924,928,957,958,959,966,977,978,986,987,988,994,995,1020,1021,1022,1037,1135,1136,1137,1138,1139,1191,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231],devmanag:[847,855],devmapp:[847,857],devmappermultiproc:847,diag:[1045,1050],diagon:[921,966],dict:[15,16,17,18,19,40,41,42,847,849,852,856,857,859,869,870,871,872,873,921,947,948,949,979,1075,1076,1077,1079,1123,1125,1126,1127,1130,1132,1197,1198],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,787,788,847,866,867,870,871,1079,1160,1169,1191,1234,1237],differenti:[1191,1234],dilat:[1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],dim:[40,41,43,921,986,1038,1039,1043,1045,1050,1079,1208,1219],dim_siz:[40,41,847,1079],dimens:[40,41,42,802,803,804,847,878,921,932,938,942,947,948,949,952,956,963,976,986,991,992,1002,1003,1006,1014,1016,1038,1042,1045,1048,1050,1051,1075,1076,1077,1078,1079,1135,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1157,1160,1161,1162,1163,1164,1165,1166,1167,1170,1173,1175,1176,1208,1209,1210,1211,1212,1213,1214,1215,1218,1219],dimension:[40,41,802,803,804,921,1002,1003,1045,1050],direct:1079,directli:[43,1123,1132,1234,1237],directori:[921,999,1010],discret:[1173,1175],disk:[40,41,1038,1040],distanc:[921,924],distribut:[40,41,847,866,870,871,872,873,1079,1135,1136,1137,1138,1139,1160,1168,1208,1216,1220,1221],distribute_nest:1079,distributedarrai:[40,41],distrubt:[1173,1175],dive:[1191,1234],divid:[40,41,921,1002,1004,1057],dividend:[1057,1067],divis:[921,955,962,997,1004,1005,1022,1024,1025,1029,1057,1067,1224,1225,1226],divisor:[1022,1024,1025,1029,1057,1067,1224,1225,1226],doc:1191,docstr:43,doe:[40,41,43,921,924,1002,1233],doesn:1191,doing:43,domain:[1057,1058],don:1191,door:1237,dot:[1045,1047,1160,1171,1172,1208,1219],down:1233,downscal:[921,936,937],drag:[1191,1237],draw:[1135,1136,1138,1139],drawn:[1135,1136,1137,1138,1139],drop:[1191,1237],dropout:[1160,1191,1208,1219],dropout_r:[1208,1219],ds_tune_step:847,dtype:[40,41,43,114,270,373,375,376,404,519,637,787,788,789,901,902,903,904,905,906,908,909,910,911,912,913,914,915,916,917,918,919,920,921,924,928,957,966,986,987,988,1020,1021],dtype_bit:[114,270,404,519,637,897],dtype_from_str:[43,114,270,404,519,637,897],dtype_in:[897,903,908,909,910,911,912,913,920],dtype_to_str:[114,270,404,519,637,897],duplic:[40,41],dure:[40,41,43,845,846,921,1015,1022,1024,1025,1029,1075,1076,1077,1078,1220,1221,1224,1225,1226,1228],dynam:[845,846],each:[40,41,42,43,791,792,799,800,806,831,847,856,857,866,867,868,869,870,871,872,878,890,891,921,922,923,939,950,991,1002,1006,1009,1019,1022,1025,1027,1029,1030,1031,1038,1041,1045,1050,1057,1060,1067,1069,1070,1079,1123,1127,1135,1136,1142,1143,1160,1161,1162,1163,1164,1165,1166,1167,1168,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1234],eager:1234,easi:1237,easili:1191,econom:1237,ecosystem:1191,edg:[921,935,939,1019],effect:[1022,1031],effective_grad:[1022,1031],effici:1237,einop:[40,41,921,947,948,949],einops_rearrang:[40,41,921],einops_reduc:[40,41,921],einops_repeat:[40,41,921],einstein:[40,41,1142,1143],einsum:[40,41,170,349,459,582,755,1142],either:[40,41,921,946,979,982,984,1075,1076,1077,1078,1079,1208,1219,1220,1221,1234],eleg:1079,element:[40,41,43,791,792,799,800,802,803,804,806,831,847,868,872,878,897,901,921,922,924,926,927,929,930,934,935,936,937,943,944,950,953,954,955,966,967,981,983,991,993,1002,1013,1018,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1142,1143,1145,1147,1149,1152,1153,1154,1155,1156,1157,1158,1159,1160,1168,1208,1216],elementwis:[40,41],elementwise_affin:[1222,1223],elementwise_funct:[378,379,791,792],elemtn:[1135,1136],elif:1079,els:[921,931,946,951,1079],elsewher:[921,1018],emphas:1191,empti:[40,41,1079],enabl:[40,41,42,1191],encapsul:[787,789],encod:[921,956,1038,1040],end:[921,924,1191,1234],ensur:43,entir:[40,41,802,803,804,847,891,1079,1191,1208,1217],entri:[40,41,921,953,977,978,1002,1003],entropi:[1173,1174,1175,1176],enumer:1079,environ:1191,eps:[373,787,788],epsilon:[1022,1024,1025,1029,1173,1174,1175,1176,1177,1178,1222,1223,1224,1225,1226],equal:[40,41,519,637,791,792,921,923,929,930,939,1002,1019,1057,1065,1071,1073,1135,1139],equality_matrix:[921,923],equat:[40,41,1142,1143],equival:[921,924,1057,1073],erf:[455,731,1057],error:[40,41,847,921,1003,1057,1068,1079,1152,1153,1220,1221,1224,1228],essenti:43,etc:[40,41,43,847,892,921,924,928,958,959,966,977,978,986,987,988,994,995,1020,1021,1079,1135,1136,1137,1138,1139,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231,1237],evalu:[40,41,802,803,804,921,982,1123,1124,1131],even:1237,evenli:[40,41,921,924,977,978,1002],everi:[921,923,1237],exact:[40,41],exampl:[43,845,846,921,935,1006,1191,1233,1234,1237],example_input:[845,846],exc_tb:1079,exc_typ:1079,exc_val:1079,exce:[921,983],except:[40,41,44,47,802,803,804,921,924,931,938,946,1015,1079],excess_s:1079,excit:[1191,1234],exclud:[59,61,921,924,1135,1139],exclus:[40,41,921,943,973,1022,1028,1135,1137],execut:[43,921,1015,1234],execute_with_gradi:[151,325,442,562,710,1022,1191,1233],exist:[40,41,921,946,1079,1191,1224,1228,1237],exp:[731,1057],expand:[40,41,921,952,956],expand_dim:[40,41,270,637,921,1079],expect:[921,925],explain:1234,explicitli:[1208,1217,1219,1220,1221,1234],expon:[43,806,831,921,1005],exponenti:[43,806,831,1057,1068,1069],expos:[921,928,940],express:[921,982],exsit:[40,41],extend:43,extra:[40,41,42,1022,1026],eye:[1045,1047],fabian:1191,fabio:1191,factor:[847,856,889,890,891,1022,1024,1025,1029,1030,1045,1050,1079,1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215,1224,1225,1226,1227],falck:1191,fall:[1220,1221,1224,1228],fallback_to_non_compil:[1220,1221,1224,1228],fals:[15,18,19,40,41,42,59,66,67,68,69,70,791,792,799,800,802,803,804,847,865,878,886,891,896,897,904,905,906,907,921,923,943,946,951,956,963,973,979,1000,1002,1016,1018,1022,1025,1026,1027,1028,1029,1030,1031,1045,1048,1051,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1142,1144,1145,1146,1147,1148,1149,1150,1179,1180,1181,1185,1189,1197,1198,1220,1221,1224,1225,1226,1227,1228,1229],fan_in:1199,fan_mod:1199,fan_out:1199,far:[1123,1124,1131,1233],faster:[845,846],favourit:[1191,1233],feasibl:1237,feat_dim:[1160,1171,1172],fed:[847,891,1079],feed:[847,891,1079],field:1237,file:[40,41,43,921,999,1010,1220,1221],filepath:[40,41],fill:[40,41,921,957,987,1020,1135,1137],fill_valu:[921,957],filter:[1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215,1237],filter_s:[1208,1209,1210],filter_shap:[1208,1211,1212,1213,1214,1215],find:[40,41,1237],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,196,197,373,374,483,484,600,601,787],finish:[1191,1237],finit:[791,792],first:[40,41,845,846,847,878,921,929,938,942,950,977,978,1006,1008,1022,1026,1045,1050,1075,1076,1077,1078,1079,1123,1124,1131,1135,1141,1142,1147,1149,1208,1219,1220,1221,1224,1228,1234,1237],firstlayersiren:[1191,1199],firstli:[1234,1237],fist:[847,891,1079],fit:[40,41,921,991,1038,1043],fkt:1237,flag:[40,41,1022,1028],flat:[40,41,43,921,991,994],flat_list:[40,41],flatten:[40,41,921,956,991,1045,1051,1142,1144,1145,1146,1148,1150],flatten_key_chain:[40,41,1220,1221],flexibl:[1191,1234],flip:[40,41,114,270,404,519,637,921],float32:[43,897,901,909,910,921,924,928,966,987,988,1020,1021],float_dtyp:[897,905,915],float_img_to_uint8_img:1038,floor:[270,637,921,955,1079],floormod:[270,637,921],fluid:1237,fname:[1179,1181,1185,1220,1221],folder:[43,1191],follow:[40,41,43,787,789,847,891,921,969,970,971,1004,1005,1022,1025,1027,1029,1030,1031,1079,1123,1127,1132,1160,1171,1172,1191,1208,1218,1224,1228],followng:[787,788],fomaml_step:1075,forget:[1022,1024,1025,1029,1224,1225,1226],fork:[921,984],forkserv:[921,984,1079],form:[15,16,17,18,19,40,41,921,928,1022,1025,1027,1029,1030,1031,1123,1125,1132,1160],format:[40,41,43,847,865,897,901,903,907,921,924,928,966,987,988,1020,1021,1079,1142,1143,1191,1233,1234],format_fn:[40,41],format_key_chain:[40,41],forward:[1220,1221,1224,1228,1233],found:[40,41,42],fourier:[921,956],fourier_encod:921,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,92,95,96,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,157,159,160,164,165,166,167,168,169,171,172,173,174,175,176,177,180,182,183,185,186,187,188,189,190,191,197,198,199,202,210,213,214,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,331,332,333,335,336,337,338,340,341,342,345,346,347,348,350,351,352,353,354,355,356,357,360,362,363,364,365,366,367,368,374,375,376,379,387,390,391,403,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,444,445,446,448,449,450,452,453,456,458,460,461,462,463,464,465,466,469,470,472,473,474,475,476,477,478,484,485,486,489,497,500,501,513,514,515,516,517,518,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,563,564,565,566,568,569,570,572,573,574,578,579,580,581,583,584,585,586,587,588,589,593,594,595,601,602,603,606,614,617,618,630,631,632,633,634,635,636,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,711,712,713,714,715,717,718,719,721,722,723,724,725,726,728,729,730,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,749,750,751,752,753,754,756,757,758,759,760,761,762,765,766,767,768,769,770,771,773,774,776,777,778,779,780,781,782,788,789,792,799,800,803,804,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1054,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1153,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1178,1180,1181,1183,1184,1186,1190,1191,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1236,1237],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1079,framewrk:[921,984],freeli:43,frequenc:[921,956],from:[40,41,42,43,799,800,802,803,804,847,856,857,891,897,903,921,946,953,958,959,966,992,1003,1011,1018,1022,1025,1029,1038,1042,1075,1076,1077,1078,1079,1123,1125,1132,1135,1136,1137,1138,1139,1142,1147,1149,1160,1168,1171,1191,1197,1198,1208,1216,1219,1224,1228,1233,1234],from_cal:[1220,1221],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[114,270,404,519,637,787,788,921,1191],full_matric:[1045,1050],fulli:[43,1191,1208,1218,1219,1233],func:[40,41,845,846,847,891,921,933,1022,1026,1079],further:1237,furthermor:1237,futur:1237,gain:1199,gamma:[1177,1178],gather:[40,41,114,270,404,519,637,921,959],gather_nd:[40,41,114,270,404,519,637,921],gauss:[1057,1068],gaussian:[1152,1153],geglu:[1191,1194],gelu:[359,468,764,1152,1191,1194],gener:[23,40,41,43,845,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1028,1135,1137,1139,1140,1191,1224,1228],geometr:[921,956],get:[40,41,787,788,789,847,856,857,865,880,881,886,890,893,896,897,907,908,921,925,960,961,962,990,1079,1189,1191,1208,1217,1237],get_all_arrays_in_memori:921,get_all_arrays_on_dev:847,get_framework:59,get_initial_st:[1208,1217],get_min_bas:921,get_min_denomin:921,get_mod_kei:[1220,1221],get_num_dim:[637,921],get_param:1185,get_param_recurs:1185,get_referrers_recurs:921,getfullargspec:1079,gist:1191,give:[799,800,921,992,1234],given:[40,41,43,799,800,847,880,886,889,890,891,893,896,897,901,921,924,928,935,943,944,953,959,977,978,987,988,991,994,995,1002,1009,1014,1016,1020,1021,1022,1024,1025,1027,1029,1030,1031,1045,1047,1052,1057,1058,1079,1123,1128,1129,1135,1138,1139,1141,1142,1145,1147,1148,1149,1150,1160,1161,1162,1163,1164,1165,1166,1167,1197,1198,1237],global:[40,41,42,847,856,857,864,889,890,891,897,904,905,906,921,945,961,962,990,996,997,998,1004,1005,1022,1037,1079,1177,1178,1183,1184,1191,1222,1223],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1191,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218],got:1191,gpu0:43,gpu2:43,gpu:[847,882,885,1079],gpu_is_avail:[847,1079],grad:[1191,1224,1228,1233],gradient:[25,40,41,847,891,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1041,1075,1076,1077,1078,1191,1224,1225,1226,1227,1228,1229,1233,1237],gradient_descent_upd:[1022,1075,1076,1077,1078],gradient_imag:[154,330,447,567,716,1038],gradienttrack:[1022,1023],graph:[1022,1025,1027,1029,1030,1031,1179,1180,1181,1186,1191,1220,1221],graph_compil:[1179,1180,1181,1182,1183,1184,1185,1189],greater:[40,41,921,924,954,1003,1135,1139],green:[40,41,42,1235,1236],grid:[921,982],group:[1038,1043],guid:[1191,1192,1237],gym:1191,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1237,half:[921,924,1079,1135,1139],hand:1191,handl:[40,41,42,43,845,846,847,863,865,874,875,886,893,896,1022,1025,1027,1029,1030,1031,1079,1224,1225,1226,1227,1228,1229],has:[40,41,43,921,1006,1057,1062],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,921],hasattr:1079,have:[40,41,43,787,788,791,792,802,803,804,806,831,921,938,942,947,948,949,950,957,1006,1022,1028,1036,1045,1050,1057,1067,1079,1191,1233,1234],hdf5:[40,41,1220,1221],head:[1160,1171,1208,1219],head_dim:[1208,1219],height:[1038,1043],height_cutoff:[40,41],help:[59,373,847,859,860,861,862,897,1022,1185,1189,1191,1199,1201,1202,1204,1205,1207],helper:1191,here:[43,1191],hidden:[1160,1170,1208,1217],hierarch:[921,940],hierarchi:[40,41],high:[40,41,1135,1137,1139],higher:[1022,1025,1027,1029,1030,1031,1045,1050],highest:[1135,1137],highest_util:1079,highest_util_nod:1079,highli:1191,highlight:1237,highlight_subgraph:[1179,1181,1185],hint:43,hkt:1237,hold:[897,901,921,924,928,994,995],host:1191,hot:[921,986],how:[1191,1208,1219,1220,1221,1234,1237],howev:[43,1234],http:1237,hyperbol:[1057,1059,1061,1064,1066,1072,1074,1152,1159],hypothet:1237,icon:1191,idea:1191,ident:[40,41,43,114,270,404,519,637,921],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[787,788],if_exist:[40,41],ignor:[40,41,1224,1228],ignore_key_error:[40,41],ignore_miss:[1224,1228],ignore_non:[40,41],iinfo:[78,196,373,483,600,787],imag:[27,921,976,1039,1040,1041,1042,1043,1044,1160,1161,1162,1163,1164,1166,1167,1191,1237],image_dim:[1038,1042],imkkhk:1237,immedi:[1191,1234,1237],implement:[43,806,831,1191,1234,1237],in_featur:[1160,1169],includ:[40,41,43,802,803,804,921,924,965,1004,1005,1017,1123,1124,1135,1139,1208,1218,1219,1222,1223,1233],include_deriv:[1123,1125,1132],include_empti:[40,41],include_gener:[1179,1180,1181,1185,1220,1221],include_inf:[40,41,921,965,1017],include_nest:[1123,1124],include_self:[40,41],inclus:[1135,1137],incom:[1160,1169],increas:[847,869,873,879,921,939,952,1019,1079,1123,1132],increasingli:1237,increment:[921,970,1079],increment_param_count:1185,inde:1191,indent:[40,41,42],independ:[1135,1136],index:[40,41,921,926,927,958,959,982,1003,1006,1123,1126,1128,1129,1130,1133],index_nest:1123,indic:[40,41,799,800,921,926,927,958,959,967,986,994,995,1123,1124,1126,1128,1129,1130,1131,1133,1134,1135,1136,1152,1157,1160,1161,1162,1163,1164,1165,1166,1167,1177,1178,1208,1209,1210,1211,1212,1213,1214,1215,1220,1221],indices_wher:[114,270,404,637,921],inevit:1237,inf:[40,41,921,965,974,1017,1057,1062],infer:[799,800,845,846,921,953,963,966,992,1000,1038,1042,1234,1237],infin:[791,792,921,974],inform:[787,788,789,1022,1033],init_c:[1160,1170],init_h:[1160,1170],init_on_first_step:[1224,1228],initi:[40,41,42,59,373,847,859,860,861,862,897,1022,1079,1160,1170,1185,1189,1191,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1224,1228],initialz:[1220,1221],inner:[1075,1076,1077,1078],inner_batch_fn:[1075,1076,1077],inner_batch_shap:[1160,1169],inner_cost_fn:[1075,1076,1077],inner_grad_step:[1075,1076,1077,1078],inner_learning_r:[1075,1076,1077,1078],inner_optimization_step:[1075,1076,1077,1078],inner_v:[1075,1076,1077],inp:1079,inplac:[40,41,921,931,968,972,1007,1022,1025,1027,1029,1030,1031,1197,1198,1224,1225,1226,1227,1228,1229],inplace_arrays_support:921,inplace_decr:[114,270,404,519,637,921],inplace_incr:[114,270,404,519,637,921],inplace_oper:[0,11,12],inplace_upd:[40,41,114,270,404,519,637,921,1197,1198],inplace_variables_support:921,input:[15,18,19,40,41,42,43,791,792,799,800,802,803,804,845,846,847,856,857,864,865,866,869,870,873,879,891,892,897,901,902,904,905,906,907,908,912,913,921,922,923,926,927,929,930,931,932,934,935,936,937,938,939,941,943,944,946,947,948,949,950,951,952,953,954,955,956,963,965,966,967,969,970,971,973,974,975,976,980,981,982,983,991,993,1000,1001,1003,1006,1007,1008,1009,1011,1012,1013,1014,1016,1017,1019,1022,1026,1028,1033,1037,1038,1039,1040,1041,1042,1044,1045,1048,1050,1051,1053,1054,1055,1056,1057,1059,1061,1062,1064,1065,1066,1067,1071,1072,1073,1074,1075,1076,1077,1078,1079,1135,1136,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1177,1178,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222,1223,1234],input_ax:[847,891,1079],input_channel:[1208,1209,1210,1211,1212,1213,1214,1217,1218],input_queu:1079,inputs_split:1079,insert:[921,952],insid:43,inspect:1079,inspir:1237,instal:1191,instanc:[15,16,17,18,19,40,41,43,806,831,847,856,1079,1197,1198,1230,1231],instead:[40,41,1142,1144,1145,1146,1147,1148,1149,1150,1237],int32:43,int64:[897,901,921,924,928,966,987,988,1020,1021],int_dtyp:[897,906,916],integ:[40,41,787,789,802,803,804,897,913,921,924,934,954,993,1002,1045,1051,1135,1137,1140],integr:1191,intend:43,inter:1191,interchang:[40,41,921,1008],interest:1191,interfac:[921,928,1234],intermedi:[40,41],intern:[40,41,847,1022,1036,1079,1123,1124,1131,1132,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1230,1231],interpol:[921,976],intersect:[1057,1058],interv:[40,41,802,803,804,921,924,935,977,978,1057,1060,1135,1139],introduc:1237,inv:[720,1045,1237],invalid:[802,803,804],invalid_dtyp:897,invers:[1045,1047,1049,1057,1058,1059,1060,1061,1062,1064,1237],invert:[1045,1047,1049],invest:1237,invoc:[845,846],irrespect:1191,is_al:1079,is_arrai:[114,270,404,519,637,921,1079],is_float_dtyp:897,is_int_dtyp:897,is_mean:1079,is_sum:1079,is_var:[1185,1189],is_vari:[151,325,442,562,710,1022],isfinit:[83,201,378,488,605,791],isinf:[270,519,637,921],isinst:1079,isnan:[270,519,637,921],isnumer:1079,item:[15,19,40,41,806,818,819,847,856,857,859,866,868,870,872,878,897,904,921,940,964,1004,1005,1079,1123,1127,1128,1129,1132,1133,1134,1191,1220,1221,1233],iter:[15,16,17,18,19,40,41,42,845,846,847,850,851,853,854,856,857,860,861,868,870,871,872,873,878,891,921,923,932,938,939,953,966,982,987,991,992,995,1000,1002,1006,1009,1014,1019,1020,1079,1123,1124,1125,1127,1131,1132],iterbal:[847,868,872,878,1079],its:[799,800,847,891,921,966,992,1008,1014,1079,1191],itself:[43,1123,1132],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,373,375,376,378,379,787,788,789,791,792,799,800,802,803,804,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1189,1191,1192,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1235,1236],ivy_backend:[40,41],ivy_bay:1237,ivyfcmodel:1233,ivyh:[40,41,42],ivymodul:[181,772],jame:1191,jax:[1022,1028,1191,1237],jax_concat:1191,jnp:1191,join:[40,41,921,938,1006,1079],journal:1191,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1191,1208,1217,1237],kaimingnorm:[1199,1203],kalman:1237,kalman_filt:1237,kalman_filter_step:1237,kalman_filter_upd:1237,keep:[40,41,847,892,921,1016,1079,1191,1237],keep_inner_v:[1075,1076,1077],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1075,1076,1077],keepdim:[40,41,802,803,804,921,1016,1045,1048,1051,1142,1144,1145,1146,1147,1148,1149,1150],kei:[15,16,17,40,41,42,806,811,847,859,921,940,1075,1076,1077,1079,1123,1126,1130,1160,1171,1172,1191,1197,1198,1208,1219,1224,1228],kept:[40,41,42,1075,1076,1077],kera:1237,kernel:[1160,1170],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,847,856,857,869,873,879,921,925,947,948,949,979,1079,1123,1127,1220,1221],keyword_color_dict:[40,41,42],kind:[787,788,789,1237],kwarg:[15,16,17,40,41,42,59,63,847,856,869,873,879,921,979,1079,1179,1180,1181,1185,1197,1198,1220,1221],kwarg_stateful_idx:[1179,1180,1181,1185,1220,1221],kwargs_clon:1079,kwargs_dist:1079,kwargs_uni:1079,label:[1173,1174,1175,1176],lamb:[1022,1029,1191,1224],lamb_upd:1022,lambda:[1079,1224,1227,1229,1233],lar:[1022,1029,1030,1191,1224],larger:[787,788,921,935],largest:[40,41,787,788,789,921,926,954],lars_upd:1022,last:[40,41,802,803,804,921,924,942,976,1002,1006,1045,1048,1050,1142,1147,1149,1152,1157,1160,1170,1208,1218],later:[40,41,921,933],latest:[1208,1217],layer:[1022,1025,1027,1029,1031,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1177,1178,1191,1199,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231,1237],layer_norm:1177,layernorm:[1191,1222],layerwis:[1022,1030,1224,1227],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1123,1124,1131],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1152,1153,1154],leaky_relu:[764,1152],learn:[799,800,1022,1025,1027,1029,1030,1031,1075,1076,1077,1078,1135,1141,1191,1224,1225,1226,1227,1228,1229,1234,1237],learnabl:[1177,1178,1222,1223],leav:[15,18,19,40,41,1123,1124,1125,1131,1132],left:[40,41,1045,1048,1051,1142,1144,1145,1146,1147,1148,1149,1150,1191],leftmost:[40,41],len:1079,length:[40,41,42,921,924,992,1003,1014],lenton2021ivi:1191,lenton:1191,less:[40,41,43,921,934,1079,1135,1139],less_util_node_str:1079,let:[1234,1237],level:1191,librari:[1191,1233,1237],lightweight:1191,like:[43,1022,1028,1135,1139,1191,1233,1234,1237],limit:[40,41,42,787,788,789,921,935,936,937],linalg:[29,1046,1047,1048,1049,1050,1051,1052,1191],linear0:[1191,1233],linear1:1191,linear2:1233,linear:[921,956,976,1045,1152,1153,1154,1155,1160,1168,1191,1208,1209,1210,1211,1212,1213,1214,1215,1233],linear_resampl:[114,270,404,519,637,921],linearli:[921,956],link:1191,linspac:[114,270,404,519,637,921,924],list:[15,18,19,40,41,43,802,803,804,847,856,857,866,867,869,870,871,873,876,877,891,921,924,928,930,982,1001,1002,1011,1016,1075,1076,1077,1079,1123,1124,1125,1127,1131,1132,1160,1161,1162,1163,1164,1165,1166,1167,1191,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215],list_join:[40,41,42],list_stack:[40,41],littl:1234,load:[40,41],loaded_kwarg:1079,loader:1191,local_set:[921,964],locat:[43,921,974,975,1135,1136],log:[731,921,978,1057,1079,1173,1174,1175,1176,1191],log_all_op:1185,log_global_inference_abs_tim:[1182,1191],log_global_inference_rel_tim:[1182,1191],logarithm:[1057,1070],logic:[31,802,803,804,1054,1055,1056,1191],logical_and:[339,727,1053],logical_not:[339,727,1053],logical_or:[339,727,1053],logit:[1173,1176],logspac:[114,270,404,519,637,921],look:[43,1234,1237],loop:[1075,1076,1077,1078],loss:[1174,1175,1176,1191,1233],loss_fn:[1191,1233],lot:1234,low:[40,41,1135,1137,1139],lower:[40,41,921,981,1135,1139],lower_depth:[1220,1221],lowest:[15,18,19,40,41,1123,1132,1135,1137],lstm:[1160,1170,1191,1208],lstm_updat:[43,1160],machin:[787,788,789,799,800,1135,1141,1191,1234,1237],mai:[921,924,946,950,1191,1234,1237],main:[921,966,1191],mainli:1191,make:[43,847,1079,1191,1234],maml:[1075,1076,1077],maml_step:1075,manag:[847,1079],mani:[40,41,43,921,1002,1191],manner:[15,18,19,40,41,43,1123,1132],manual:[1123,1124,1131,1237],map:[40,41,42,847,856,921,974,975,1079,1123,1128,1129,1132,1208,1219,1233],map_cont:[40,41],map_nest_at_index:1123,map_nest_at_indic:1123,map_sequ:[40,41],mapper:[847,856,857,1079],mask:[1160,1171,1172],match:[40,41,921,979],match_kwarg:921,math:[33,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1079,1191],mathbb:[1045,1052],mathbf:[1045,1052],matmul:[43,270,519,637,921,1237],matplotlib:1234,matric:[1160,1169],matrix:[40,41,921,923,936,980,1045,1046,1047,1048,1049,1052,1160,1169,1208,1218],matrix_norm:[40,41,158,334,451,571,720,1045],matter:1191,max:[40,41,373,787,788,789,921,936,937,948,981,994,995,1079,1142,1144,1224,1226],max_batch_s:[40,41],max_chunk_s:[847,891,1079],max_depth:[40,41,847,851,854,861,869,873,879,921,964,1079,1123,1132],max_dev_dim_step_ratio:847,max_freq:[921,956],max_length:[40,41],max_node_dim_step_ratio:1079,max_norm:[40,41,921,936,937],max_split_factor_step_s:[847,1079],max_trust_ratio:[1022,1029,1224,1226],maxim:[1191,1234,1237],maximis:1191,maximum:[40,41,42,637,847,869,873,879,891,921,926,935,936,937,956,1022,1029,1079,1123,1132,1142,1144],mayb:[15,18,19],mdi:1079,mean:[40,41,847,876,877,878,879,891,921,948,1075,1076,1077,1078,1079,1123,1127,1135,1138,1142,1145,1148,1150,1199,1233,1237],measur:[1160,1171,1208,1219],mech:1191,mechan:[1191,1237],medic:1237,memori:[847,863,886,891,893,896,1079,1160,1170,1191],meshgrid:[270,637,921],messag:[1235,1236],meta:[35,1076,1077,1078,1191],method:[40,41,42,43,921,928,940,982,994,995,1022,1029,1030,1079,1123,1124,1131,1132,1191,1208,1219,1220,1221,1234],might:[921,946,1237],min:[40,41,373,787,788,789,921,948,983,994,995,1004,1079,1142,1146],min_bas:[921,1005],min_denomin:[921,1004],min_dev_dim_s:847,min_node_dim_s:1079,min_sf_tune_step:[847,1079],min_unit_dev_tune_step:847,min_unit_node_tune_step:1079,mind:1191,mini:[1177,1178,1222,1223],minimum:[40,41,637,847,897,901,921,924,927,928,935,961,962,996,997,1004,1005,1079,1142,1146],miss:[1224,1228],ml_framework:[799,800,921,924],mod:[921,955],mod_depth:[1220,1221],mod_height:[1220,1221],mod_with_top_mod_key_chain:[1220,1221],mode:[40,41,845,846,847,876,877,878,879,891,1045,1050,1079,1234],model:[1191,1233],modul:[40,41,42,59,921,984,1079,1191,1192,1194,1195,1196,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1222,1223,1230,1231,1237],moment:[1022,1024,1025,1029,1224,1225,1226],more:[43,921,1006,1079,1191,1234,1237],more_util_node_str:1079,most:[40,41,43,1191,1237],move:[40,41,43,847,892,1079],much:[1191,1237],multi:[921,984,1160,1171,1208,1219],multi_head_attent:1160,multi_index_nest:1123,multi_map:[40,41],multi_nod:1079,multidev:[847,858,859,860,879],multidevcontain:[40,41],multidevic:[847,856],multidevit:[847,850,853,856,857,861],multidevitem:[847,849,852],multidevnest:[847,851,854],multiheadattent:[1191,1208],multinod:[1079,1083],multinodecontain:1079,multinodeit:1079,multinodeitem:1079,multinodenest:1079,multinomi:[163,344,457,577,748,1135],multipl:[40,41,802,803,804,921,979,1002,1045,1047,1142,1144,1145,1146,1147,1148,1150,1177,1178,1208,1218,1234],multipli:[40,41,921,943,1142,1147],multiprocess:[40,41,42,637,847,856,921,1079],must:[40,41,42,43,791,792,802,803,804,806,831,847,876,877,878,879,891,921,924,938,940,942,950,981,983,995,1006,1057,1063,1067,1079,1135,1140,1224,1228],mutabl:[1123,1125,1132],mutlidevic:[847,856],mutlinod:1079,mw_tm1:[1022,1025,1029],mx_concat:1191,mxnet:[43,1191,1237],my_func:43,mymodel:1191,name:[845,846,1179,1180,1181,1185,1233],namespac:[43,1234],nan:[40,41,791,792,921,965,975,1017],nativ:[15,17,18,19,40,41,43,847,863,865,874,875,886,893,896,897,902,909,910,1079,1191,1192,1197,1198],native_modul:[1197,1198],native_module_class:[1197,1198],nativearrai:[15,18,19,43,787,788,789,791,792,799,800,802,803,804,806,831,847,865,891,892,897,901,907,912,913,921,922,923,924,926,927,928,929,930,932,934,935,936,937,938,939,941,942,943,944,947,948,949,950,952,953,954,955,956,958,959,963,965,966,967,974,975,976,977,978,980,981,982,983,986,987,988,991,992,993,994,995,1000,1002,1003,1006,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1079,1123,1125,1132],natur:[1057,1070,1237],ncdhw:[1160,1165,1166,1208,1213,1214],nchw:[1160,1163,1164,1167,1208,1211,1212,1215],ncw:[1160,1161,1162,1208,1209,1210],ndarrai:[43,373,375,376,378,379,921,1012],ndhwc:[1160,1165,1166,1208,1213,1214],nearest:[921,993],need:[43,921,936,937,1160,1162,1164,1166,1191,1208,1210,1212,1214,1237],neg:[40,41,791,792,802,803,804,1142,1147,1149,1152,1154],negative_slop:1199,neither:1079,nest:[15,16,17,18,19,40,41,42,847,869,873,879,921,928,1011,1075,1076,1077,1079,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1220,1221,1224,1225,1226,1227,1228,1229],nested_indices_wher:1123,nested_map:[1079,1123],network:[1160,1169,1191,1192,1194,1208,1220,1221,1237],neural:[1160,1191,1194,1208,1233],new_node_percent_mem:1079,new_node_util:1079,new_node_utils_kei:1079,new_std:[1177,1178,1222,1223],newli:[845,846,921,932,933],newlin:[40,41,42],newshap:[921,932,992],next:[787,788,1079,1220,1221,1224,1225,1226,1227,1228,1229],nhwc:[1160,1163,1164,1167,1208,1211,1212,1215],node:[40,41,1123,1124,1131],node_clon:1079,node_dist:1079,node_dist_arrai:1079,node_dist_it:1079,node_in:1079,node_mapp:1079,node_str:1079,node_to_str:1079,node_util:1079,nodedistit:1079,nodedistitem:1079,nodedistnest:1079,nodemanag:[1079,1090],nodemapp:1079,nodemappermultiproc:1079,noinspect:[43,848,898,899,900,1023,1079,1186],non:[40,41,802,803,804,845,846,897,911,1220,1221,1224,1228,1234],none:[40,41,42,43,59,61,64,787,788,789,799,800,802,803,804,845,846,847,856,857,863,864,889,890,891,892,897,904,905,906,921,924,928,945,946,951,953,957,958,959,964,966,968,969,970,971,972,977,978,984,986,987,988,991,994,995,996,997,1002,1003,1004,1005,1014,1015,1020,1021,1022,1025,1027,1029,1030,1031,1037,1038,1042,1045,1048,1051,1075,1076,1077,1078,1079,1123,1124,1127,1131,1132,1135,1136,1137,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1160,1162,1164,1166,1169,1170,1171,1172,1177,1178,1179,1180,1181,1185,1189,1197,1198,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],norm:[40,41,921,936,937,1045,1048,1051,1178,1191,1223,1224,1226],normal:[1135,1138,1177,1178,1222,1223],normalized_idx:[1177,1178],normalized_shap:[1222,1223],notat:[40,41,1142,1143],note:43,noth:[40,41,1234],notimplementederror:1079,now:[40,41,847,892,921,922,1079,1191,1208,1219,1220,1221,1233,1234,1237],np_concat:1191,np_finfo:373,ns_tune_step:1079,num:[921,977,978],num_arrai:[40,41],num_arrays_in_memori:921,num_arrays_on_dev:847,num_band:[921,956],num_channel:[1208,1215],num_chunk:1079,num_chunks_floor:1079,num_class:[1135,1136],num_cpu_cor:847,num_gpu:[107,847,1079],num_head:[1160,1171,1208,1219],num_kei:[1160,1171,1172],num_lay:[1208,1217],num_or_size_split:[40,41,921,1002],num_output:1079,num_queri:[1160,1171,1172],num_sampl:[921,976,1038,1039,1135,1136],num_task:[1075,1076,1077,1078],number:[40,41,42,787,788,789,802,803,804,845,846,847,883,884,885,897,908,912,913,921,924,935,939,952,956,963,966,975,976,977,978,981,985,991,1002,1009,1013,1017,1019,1045,1050,1075,1076,1077,1078,1079,1135,1136,1140,1142,1144,1145,1146,1148,1150,1160,1171,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1234,1237],numer:[43,791,792,806,831,921,961,962,996,997,1004,1005,1057,1067,1199],numhead:[1160,1171],numpi:[40,41,373,375,376,378,379,921,1012,1045,1050,1142,1143,1191,1233,1234,1237],nwc:[1160,1161,1162,1208,1209,1210],obj:[40,41],object:[40,41,42,59,373,787,788,789,847,897,901,921,924,928,1022,1123,1126,1128,1129,1130,1133,1134,1135,1141,1185,1189,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1220,1221],object_in:[921,928],observ:1079,occupi:[787,788,789,921,994,995],off:[921,924],offer:1191,offset:[1177,1178],often:1234,old:[40,41],on_init:[1208,1219,1220,1221],onc:[847,891,1079,1135,1136,1191],one:[40,41,43,847,876,877,878,879,891,897,903,921,966,979,986,994,995,1003,1006,1045,1048,1051,1079,1142,1143,1144,1145,1146,1147,1148,1149,1150,1191,1234,1237],one_hot:[114,404,519,637,921],onearrai:[921,952],ones:[40,41,114,270,404,519,637,921,966,986,988,1191],ones_lik:[114,270,404,519,637,921],ongo:43,onli:[40,41,43,847,1079,1123,1124,1125,1131,1224,1225,1226,1227,1228,1229,1233,1234],onlin:1191,onto:[847,876,877,892,1079,1123,1127,1132],oom:[847,1079],open:[921,924,1135,1139,1191,1237],opencv:1234,oper:[40,41,921,931,947,948,949,977,978,1007,1022,1025,1027,1029,1030,1031,1053,1054,1055,1056,1160,1161,1162,1163,1164,1165,1166,1167,1169,1191,1192],operand:[40,41,1142,1143],oppos:[921,956],optim:[847,1022,1025,1027,1029,1030,1031,1075,1076,1077,1078,1079,1191,1225,1226,1227,1229,1233,1237],optimizer_upd:1022,option:[15,18,19,40,41,42,43,799,800,802,803,804,845,846,847,856,857,865,869,870,871,872,873,876,877,878,879,886,889,890,891,892,896,897,902,907,911,920,921,923,924,926,927,928,936,937,938,943,945,946,953,956,957,958,959,963,965,966,973,976,977,978,979,982,984,986,987,988,991,994,995,998,1000,1002,1003,1004,1005,1006,1014,1016,1017,1020,1021,1022,1025,1027,1028,1029,1030,1031,1033,1038,1042,1045,1048,1051,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1142,1144,1145,1146,1147,1148,1149,1150,1152,1153,1157,1160,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1234],ord:[921,953,1045,1050],order:[40,41,42,43,799,800,1022,1025,1027,1029,1030,1031,1045,1048,1051,1075,1076,1077,1230,1231],ordered_node_util_kei:1079,org:1237,organ:43,origin:[40,41,42,921,988,992,1021,1045,1048,1051],other:[40,41,43,806,808,809,814,816,817,821,823,824,825,826,827,829,831,832,833,834,835,836,838,839,840,842,843,844,845,846,921,923,924,966,1022,1026,1135,1139,1191,1233,1234,1237],other_i:[43,806,831],otherwis:[15,16,17,18,19,40,41,791,792,802,803,804,847,864,897,904,905,906,921,931,1014,1015,1018,1022,1028,1033,1037,1075,1076,1077,1079,1142,1144,1145,1146,1148,1150],our:[1191,1237],out:[921,924,1057,1062,1160,1168,1170,1191,1208,1216],out_feat_dim:[1160,1171],out_featur:[1160,1168,1169],out_i:[791,792],outdat:1237,outer:[1075,1076,1077,1078],outer_batch_fn:[1075,1076,1077],outer_batch_shap:[1160,1169],outer_cost_fn:[1075,1076,1077],outer_v:[1075,1076,1077],outlin:1234,output:[40,41,43,847,856,857,891,921,924,933,957,966,991,1009,1022,1026,1057,1063,1079,1135,1137,1138,1139,1160,1162,1164,1166,1168,1170,1171,1172,1191,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219],output_ax:[847,891,1079],output_axi:1079,output_channel:[1208,1209,1210,1211,1212,1213,1214,1217,1218],output_connected_onli:[1179,1181,1185,1220,1221],output_queu:1079,output_shap:[1160,1162,1164,1166,1208,1210,1212,1214],outsid:[921,935],over:[40,41,802,803,804,921,953,1045,1048,1051,1135,1139,1142,1144,1145,1146,1148,1150,1177,1178,1222,1223],overal:1234,overflow:[921,924],overhead:1234,overrid:[921,986,988,1021],overriden:[1224,1228],overwrit:[40,41,847,891,1079],overwrite_at_key_chain:[40,41],own:[1191,1234,1237],packag:[43,1234],pad:[921,939,956,1019,1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],pad_width:[921,939,1019],page:1191,pair:[1160,1172],parallel:[847,856,857,1079],parallelis:[847,856,857,1079],param:[40,41,42,43,802,804,847,891,921,922,958,959,986,987,1020,1079,1190,1191,1220,1221,1233],paramet:[15,16,17,18,19,40,41,42,787,788,789,791,792,799,800,802,803,806,831,845,846,847,856,857,863,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,886,889,890,891,892,893,896,897,901,902,903,907,908,909,910,911,912,913,920,921,923,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,941,942,943,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,963,965,966,967,969,970,971,973,974,975,976,977,978,979,980,981,982,983,984,987,988,991,992,993,994,995,996,997,998,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1033,1035,1036,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233],parameter:[1135,1138,1139],params_all_empti:1185,pardo:1191,pars:[921,940],part:[1022,1025,1027,1029,1030,1031,1057,1062,1191,1220,1221,1234],partial:[40,41,1220,1221],particl:1237,particular:1237,pass:[40,41,42,847,856,891,897,902,921,933,1022,1036,1075,1076,1077,1079,1197,1198,1220,1221,1224,1228,1230,1231],pattern:[40,41,921,947,948,949],per:[847,1079,1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],percent_used_mem_on_dev:847,percent_used_mem_on_nod:1079,percentag:[847,886,1079],perf_count:1079,perform:[40,41,43,799,800,802,803,804,847,921,926,927,943,947,948,949,969,970,971,976,977,978,1022,1025,1027,1029,1030,1031,1038,1039,1075,1076,1077,1078,1079,1123,1128,1129,1142,1144,1145,1146,1147,1148,1149,1150,1152,1157,1160,1168,1170],permissable_step:1079,permit:43,permut:[921,1008,1014],perpendicular:[921,942],person:1191,physci:1237,pickl:[40,41,1079],pickle_filepath:[40,41],pid:1185,pinv:[334,720,1045],pip:1191,pipelin:1233,pkk:1237,pkkm1:1237,pkm1km1:1237,place:[40,41,43,847,892,921,952,957,969,970,971,1079,1224,1225,1226,1227,1228,1229],placehold:[1123,1132],point:[787,788,897,912,921,924,1057,1067],popul:[40,41,1135,1136],popular:1237,population_s:[1135,1136],portabl:[1191,1192],posit:[15,16,17,787,788,791,792,847,869,873,879,921,922,924,952,956,1079,1135,1140,1197,1198],possibi:[40,41],possibl:[921,979,1011,1038,1043,1237],post:[1177,1178],post_shap:[40,41],power:[43,806,831,837,921,961,996,1005,1199],practic:1191,pre:[847,1079,1191],pre_shap:[40,41],precis:[787,788],pred:[1173,1174,1175,1176],predict:[1173,1174,1175,1176,1237],preprint:1191,present:[40,41],preserv:[40,41,42,921,953,1022,1033],preserve_typ:[40,41,1022,1033],press:1191,prevent:[43,1022,1024,1025,1029,1079,1224,1225,1226],previou:[1022,1025,1029],previous:[921,933],prime:1191,print:[40,41,42,847,887,921,989,1191,1233],print_all_arrays_in_memori:921,print_all_arrays_on_dev:847,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1224,1228],prob:[1135,1136,1160,1168,1208,1216],probabl:[1135,1136,1160,1168,1208,1216],problem:[43,1237],process:[43,847,856,857,886,896,921,984,1079],process_specif:[847,886,896,1079],prod:[40,41,921,948],produc:[847,856,857,1079],product:[40,41,921,942,943,980,1142,1143,1160,1171,1172,1208,1219],profil:[107,264,402,512,629,847,1079],project:[1191,1233,1234,1237],promot:[43,806,831,1057,1067],prompt:1191,properli:43,properti:[40,41,373,847,859,1079,1185,1189,1220,1221,1224,1225,1226,1227,1229],provid:[40,41,43,802,803,804,845,846,847,864,897,904,905,906,911,920,921,946,986,988,995,1021,1022,1025,1027,1029,1030,1031,1037,1079,1191,1208,1217,1224,1225,1226,1227,1228,1229,1234],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1045,1049],ptype:[1185,1189],pure:[40,41,1191,1237],purpos:1237,put:1079,pybroadexcept:1079,pyprotectedmemb:[1079,1186],pyshadowingbuiltin:43,pyshadowingnam:[848,898,899,900,1023,1079],python:[40,41,847,886,896,921,924,1079,1191],pytorch:[1022,1025,1027,1029,1030,1031,1191,1224,1225,1226,1227,1228,1229,1233,1234,1237],pyunresolvedrefer:1079,quadrant:[1057,1063],queri:[40,41,806,820,841,847,880,890,1079,1160,1171,1172,1208,1219],query_dim:[1208,1219],query_kei:[40,41],queue:[40,41,42,847,856,857,921,990,998,1079],queue_class:[847,856,857,1079],queue_load_s:[40,41,42],queue_timeout:[40,41,42,921,1079],quick:1191,quickli:1233,radian:[1057,1058,1060,1063,1065,1071,1073],rai:[1057,1058],rais:[40,41,43,802,803,804,806,831,921,931,961,996,1003,1005,1015,1079,1220,1221,1224,1228],ram:[847,886,893,896,1079],randint:[163,344,577,748,1135],random:[37,40,41,1136,1137,1138,1139,1140,1141,1191],random_crop:1038,random_norm:[163,344,577,748,1135],random_uniform:[163,344,577,748,1135],randomli:[1038,1042,1160,1168,1208,1216],randomness_factor:[1179,1181,1185,1220,1221],rang:[921,924,977,978,1057,1063,1079,1191,1233,1237],rank:[802,803,804,921,939,1016,1019],rate:[1022,1025,1027,1029,1030,1031,1075,1076,1077,1078,1208,1219,1224,1225,1226,1227,1228,1229],rather:[40,41,847,891,921,924,973,1022,1028,1079],ratio:[847,1022,1029,1038,1043,1079,1224,1226],raw:[40,41],raw_delta:1079,reach:[847,869,873,879,1079,1123,1132],read:[40,41],readi:[1079,1233],real:[1057,1058,1062],realiti:1234,rearrang:[40,41,921,947,949],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1075,1077],receiv:[847,856,857,921,925,979,1079,1208,1218],receivess:[847,1079],receiving_fn:1185,receivng:[1075,1078],recev:[1075,1076,1077],recognit:1237,recommend:1191,rectifi:[1152,1154,1155],recurr:[1160,1170],recurrent_bia:[1160,1170],recurrent_kernel:[1160,1170],recurs:[40,41,1123,1124,1125,1131,1132],redefin:43,reduc:[40,41,802,803,804,847,891,921,948,1079,1142,1144,1145,1146,1147,1148,1149,1150],reduce_max:[40,41,170,349,459,582,755,1142],reduce_mean:[40,41,170,349,459,582,755,1142,1191,1233],reduce_min:[40,41,170,349,459,582,755,1142],reduce_prod:[40,41,170,349,459,582,755,1142],reduce_std:[40,41,349,1142],reduce_sum:[40,41,170,349,459,582,755,1079,1142],reduce_var:[40,41,170,349,459,582,755,1142],reduct:[39,40,41,802,803,804,921,948,994,995,1143,1144,1145,1146,1147,1148,1149,1150,1191],refactor:43,refer:[802,803,804,1022,1024,1025,1045,1052,1208,1218,1237],reflected_oper:[0,13,14],regard:[847,1079],regardless:[40,41,845,846],register_paramet:1233,reimplement:1237,rel:[1022,1025,1027,1029,1030,1031],rel_slice_obj:1079,relev:[1224,1225,1226,1227,1228,1229],relu:[764,1152,1153,1154,1191,1233],remain:[43,921,992,1123,1127],remaind:[40,41,921,955,1002],remov:[40,41,921,1003,1075,1076,1077],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,921,953],rep:[921,1009],repeat:[40,41,270,637,921,949,1009,1079,1234],repeated_config_check:[847,1079],repeatedli:[1123,1130],repetit:[40,41,921,991,1009],replac:[40,41,43,921,935,994,995,1135,1136],repo:1191,repres:[43,897,903,908,1160,1169],represent:[40,41,42,43,787,788,789,847,874,875,897,903,909,910,921,1001,1011,1079],reptil:[1075,1078],reptile_step:1075,requir:[43,845,846,897,901,921,924,928,1197,1198],resampl:[921,976],reshap:[40,41,43,637,921],reshape_lik:[40,41],respect:[921,950,1022,1024,1025,1026,1027,1029,1030,1031,1057,1067,1075,1076,1077,1078],respons:1079,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,791,792,802,803,804,806,831,847,856,921,924,950,994,995,1006,1045,1048,1051,1053,1054,1055,1056,1057,1067,1079,1142,1144,1145,1146,1147,1148,1149,1150,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1191],ret:1079,ret_dict:1079,ret_fn:[847,856,857,1079],retain:[1022,1026],retain_grad:[1022,1026],retreiv:1079,retrn:[921,1001],return_cont:[40,41],return_dict:[40,41],return_graph:[1179,1180,1181],return_inner_v:[1075,1076,1077,1078],return_sequ:[1208,1217],return_st:[1208,1217],rev:[921,946],revers:[40,41,921,946,953,1014],right:[40,41],rk_e:1237,robot:1191,ronald:1191,round:[270,637,921,924,1079],row:[921,966,1135,1136],rule:[43,806,831,921,924,1057,1067],run:[847,856,1022,1024,1025,1029,1075,1076,1077,1078,1079,1191,1192,1208,1219,1220,1221],safe:[847,856,1079],safety_factor:[847,1079],same:[15,16,17,40,41,43,847,856,857,891,892,897,901,921,922,934,938,954,955,958,959,986,988,993,994,995,1006,1021,1022,1028,1033,1045,1050,1057,1062,1075,1076,1077,1079,1142,1143,1160,1161,1162,1163,1164,1165,1166,1167,1191,1208,1209,1210,1211,1212,1213,1214,1215,1233,1237],same_arrai:[40,41],sampl:[921,976,1038,1039,1135,1136,1138,1139,1160,1168,1191,1208,1216],satisfi:[921,928,1045,1047,1052],save:[40,41,921,999,1010,1038,1040,1220,1221],save_debug_info:1185,save_dir:[847,862,1079],save_to_disk:[1179,1181,1185,1220,1221],save_weight:[1220,1221],scalar:[921,935,986,1013,1017],scale:[847,889,890,1022,1030,1079,1160,1168,1171,1172,1177,1178,1208,1216,1219,1224,1227],scaled_dot_product_attent:1160,scatter:[921,986,994,995],scatter_flat:[114,270,404,519,637,921],scatter_nd:[114,270,404,519,637,921],scene:[1022,1025,1027,1029,1030,1031],schemat:1191,screen:[40,41],search:[15,18,19,40,41],second:[40,41,847,878,921,929,942,950,990,998,1008,1022,1024,1025,1029,1075,1077,1079,1224,1225,1226],secondli:1237,see:[43,59,373,802,803,804,806,831,847,859,860,861,862,897,921,924,977,978,1022,1057,1067,1185,1189,1191,1199,1201,1202,1204,1205,1207],seed:[40,41,163,748,1135],seed_valu:[40,41,1135,1140],seem:1191,seen_set:[921,964],select:[921,928,1003,1234,1237],self:[40,41,43,59,373,806,831,847,859,860,861,862,897,1022,1079,1185,1189,1191,1199,1201,1202,1204,1205,1207,1224,1228,1233,1237],sent:1079,seper:[921,956],seq:[40,41,42,1142,1143,1220,1221],sequenc:[15,16,17,40,41,42,43,845,846,847,856,857,866,867,868,869,870,871,872,873,876,877,891,897,901,921,924,928,930,932,938,939,953,966,979,982,987,991,992,995,1002,1006,1009,1014,1019,1020,1022,1026,1038,1042,1043,1045,1048,1051,1079,1123,1134,1135,1137,1139,1142,1144,1145,1146,1147,1148,1149,1150,1160,1161,1162,1163,1164,1165,1166,1167,1177,1178,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1217,1220,1221,1222,1223,1224,1228,1230,1231],sequenti:1191,set:[15,18,19,40,41,847,876,877,889,890,891,921,923,945,966,996,997,998,999,1022,1025,1027,1028,1029,1030,1031,1045,1048,1051,1079,1123,1124,1131,1133,1134,1135,1136,1140,1142,1144,1145,1146,1147,1148,1149,1150,1189,1191,1208,1217,1224,1225,1226,1227,1228,1229,1234,1237],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1189,set_debug_mod:44,set_default_devic:847,set_default_dtyp:897,set_default_float_dtyp:897,set_default_int_dtyp:897,set_default_nod:1079,set_exception_debug_mod:44,set_framework:[40,41,59,1079,1191,1233,1234,1237],set_ivy_backend:[40,41],set_min_bas:921,set_min_denomin:921,set_nest_at_index:1123,set_nest_at_indic:1123,set_param:1185,set_queue_timeout:921,set_split_factor:[847,1079],set_stat:[1224,1225,1226,1227,1228,1229],set_tmp_dir:921,set_with_grad:1022,setter:1079,sever:1237,sgd:[1191,1224],shape0:1079,shape:[40,41,43,637,847,859,897,901,921,922,932,934,938,939,952,953,954,955,957,959,963,966,986,987,988,991,992,993,994,995,1001,1003,1006,1019,1020,1021,1038,1042,1045,1047,1057,1062,1063,1079,1135,1137,1138,1139,1142,1143,1160,1162,1164,1166,1185,1189,1208,1210,1211,1212,1213,1214,1215,1222,1223],shape_slic:[40,41],shape_to_tupl:921,share:[40,41,1191,1234],shift:1079,should:[40,41,42,43,791,792,806,831,845,846,847,921,932,933,940,986,992,1022,1025,1027,1029,1030,1031,1057,1067,1079,1142,1143,1191],show:[40,41,1185,1191,1237],show_debug_info:1185,show_graph:[1179,1191,1220,1221,1224,1228],show_mod_in_top_mod:[1220,1221],show_structur:[1220,1221],show_sub_contain:[40,41],show_v:[1220,1221],show_v_in_top_v:[1220,1221],shown:[40,41],shp:1079,shuffl:[40,41,163,748,1135],shuffle_h5_fil:[40,41],sigmoid:[764,1152,1191,1233],signatur:[43,59,373,847,859,860,861,862,897,1022,1185,1189,1199,1201,1202,1204,1205,1207],signific:1237,similar:[43,1160,1171,1208,1219],simpl:[43,921,951,1191,1234,1237],simplest:1234,simpli:[40,41,43,1191,1234,1237],simultan:1191,sin:[731,921,956,1057,1073,1234],sinco:1234,sine:[1057,1060,1061,1071,1072],singl:[40,41,845,846,847,856,857,876,877,878,879,921,1003,1013,1017,1038,1043,1079,1135,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1191,1234,1237],singleton:[802,803,804],singular:[1045,1050],sinh:[731,1057],siren:[1191,1199],size:[40,41,42,847,870,871,872,873,889,890,891,921,924,932,977,978,994,1002,1038,1042,1045,1048,1050,1051,1079,1135,1136,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1208,1209,1210],size_ordered_arrai:[40,41],skew:[1045,1052],skinv:1237,skip:[40,41],slice:[40,41,799,800,921,958,959,1079,1123,1130],slice_kei:[40,41],slice_obj:[40,41,1079],slice_via_kei:[40,41],slide:[1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],slope:[1152,1154],small:[1173,1174,1175,1176,1177,1178,1191,1222,1223,1234],smaller:[921,935],smallest:[40,41,787,788,789,921,927,934],smallest_norm:[373,787,788],softmax:[179,468,764,1152,1160,1171,1172],softplu:[764,1152],solv:1237,some:[40,41,43,921,924,1022,1024,1025,1027,1029,1030,1031,1036,1160,1168,1191,1208,1216,1234,1237],some_backend:43,some_namespac:43,someth:[43,1237],something_cool:43,somewher:[40,41],sort:[40,41,42,800,1045,1050,1079],sort_by_kei:[40,41],sorting_funct:[799,800],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,373,375,376,378,379,787,788,789,791,792,799,800,802,803,804,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1189,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1235,1236,1237],space:[921,924,956,977,978],spars:[1173,1176],sparse_cross_entropi:1173,spawn:[921,984],specif:[40,41,43,847,889,921,940,947,948,949,984,1075,1076,1077,1078,1079,1135,1141,1191,1220,1221,1233,1234],specifc:[1135,1136],specifi:[40,41,43,802,803,804,847,866,867,868,869,870,871,872,873,876,877,881,883,887,890,891,892,897,901,903,921,924,926,927,928,935,938,939,957,958,959,965,977,978,1006,1016,1019,1045,1048,1051,1079,1123,1128,1129,1133,1134,1142,1143,1144,1145,1146,1147,1148,1149,1150],split:[40,41,114,270,404,519,637,847,856,870,871,872,873,889,890,891,921,979,1079],split_arg:1079,split_factor:[847,856,1079],split_func_cal:[847,1079],split_siz:1079,spread:[847,879,1079],squar:[921,966,1045,1047],squeez:[114,270,404,519,637,921],stabil:[799,800,921,1004,1005],stabl:[799,800,921,961,962,996,997,1004,1005],stable_divid:921,stable_pow:921,stack:[40,41,270,637,921,1038,1043,1123,1124,1131,1208,1217],stack_imag:[154,330,447,567,716,1038],stacked_dim_s:1079,stage:43,standard:[40,41,43,787,788,1135,1138,1142,1148,1177,1178,1222,1223],start:[40,41,847,862,921,924,977,978,1079,1191,1234],starting_index:[40,41],starting_split_factor:[847,1079],state:[1079,1160,1170,1179,1180,1181,1185,1191,1194,1195,1196,1197,1198,1199,1201,1202,1204,1205,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233],statement:1234,static_argnam:[845,846],static_argnum:[845,846],std:[1135,1138],step:[40,41,847,921,924,977,978,1022,1024,1025,1027,1029,1030,1031,1075,1076,1077,1078,1079,1191,1224,1225,1226,1227,1228,1229,1233,1237],stephen:1191,stick:1191,still:[40,41],stochast:[1224,1229],stop:[40,41,847,862,891,921,924,977,978,1022,1025,1027,1029,1030,1031,1033,1075,1076,1077,1078,1079,1224,1225,1226,1227,1228,1229],stop_gradi:[40,41,325,442,562,710,847,891,1022,1025,1027,1029,1030,1031,1075,1076,1077,1078,1079,1224,1225,1226,1227,1228,1229],stopiter:1079,store:[40,41,921,956,1002,1022,1036,1220,1221],store_var:[1220,1221],str:[15,16,17,40,41,42,43,373,375,376,787,788,789,845,846,847,856,857,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,891,897,902,903,908,909,910,911,912,913,920,921,928,945,947,948,949,982,984,987,994,995,1045,1048,1051,1075,1076,1077,1078,1079,1123,1127,1142,1143,1197,1198,1208,1219,1220,1221],str_to_nod:1079,straight:1234,strength:[1191,1237],stride:[1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],string:[40,41,43,847,863,865,874,875,880,886,892,893,896,897,901,907,909,910,911,920,921,924,928,945,966,987,988,1020,1021,1079,1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215,1220,1221],structur:[40,41,42,43,921,940],structural_diff:[40,41],sub:[40,41,847,870,871,876,877,878,879,921,1002,1075,1076,1077,1078,1079],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1079,sub_mod:[1220,1221],sub_modul:[1230,1231],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1191,1192,1222,1223,1230,1231],subsequ:43,subset:43,substr:[40,41],suggest:1191,suitabl:[1038,1043],sum:[40,41,847,876,877,878,879,891,921,944,948,994,995,1079,1142,1143,1149],summat:[40,41,1142,1143],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,92,95,96,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,153,155,156,157,159,160,164,165,166,167,168,169,171,172,173,174,175,176,177,180,182,183,185,186,187,188,189,190,191,197,198,199,202,210,213,214,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,265,266,267,268,269,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,326,327,328,329,331,332,333,335,336,337,338,340,341,342,345,346,347,348,350,351,352,353,354,355,356,357,360,362,363,364,365,366,367,368,374,375,376,379,387,390,391,403,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,443,444,445,446,448,449,450,452,453,456,458,460,461,462,463,464,465,466,469,470,472,473,474,475,476,477,478,484,485,486,489,497,500,501,513,514,515,516,517,518,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,563,564,565,566,568,569,570,572,573,574,578,579,580,581,583,584,585,586,587,588,589,593,594,595,601,602,603,606,614,617,618,630,631,632,633,634,635,636,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,711,712,713,714,715,717,718,719,721,722,723,724,725,726,728,729,730,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,749,750,751,752,753,754,756,757,758,759,760,761,762,765,766,767,768,769,770,771,773,774,776,777,778,779,780,781,782,788,789,792,800,803,804,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,846,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1050,1051,1052,1054,1055,1056,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1076,1077,1078,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1143,1144,1145,1146,1147,1148,1149,1150,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1174,1175,1176,1178,1180,1181,1183,1184,1186,1190,1191,1195,1196,1198,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1236,1237],supports_inplac:921,suppos:1237,svd:[334,571,720,1045],swap:[40,41,921,1008],swapax:[40,41,519,637,921,1237],symmetr:[1045,1052],tab:1191,take:[921,976],taken:[1142,1144,1145,1146,1148,1150],tan:[731,1057,1062],tangent:[1057,1062,1063,1064,1073,1074,1152,1159],tanh:[731,764,1057,1152],target:[40,41,847,863,866,867,868,869,870,871,872,873,876,877,878,879,892,1079,1191],target_dict:[40,41],task:[1075,1076,1077,1078],team:1237,templat:1191,temporari:[921,999,1010],tensor:[40,41,43,799,800,847,865,897,907,921,924,926,927,932,977,978,981,983,986,987,988,992,994,995,1002,1020,1021,1079,1135,1136,1137,1160,1168,1170,1191,1208,1216,1218,1224,1225,1226,1227,1228,1229,1233,1234],tensorflow:[1160,1162,1164,1166,1191,1208,1210,1212,1214,1234,1237],term:[40,41,1160,1170,1191,1208,1218],termcolor:[40,41,42],termin:[40,41,42,1079],test:[791,792,802,803,804,897,912,913],tf_concat:1191,than:[40,41,787,788,847,891,921,924,934,935,954,973,981,1003,1006,1022,1028,1079,1135,1139,1191,1234],thei:[40,41,43,1057,1063,1075,1076,1077,1135,1136,1191,1230,1231,1234],them:[1191,1237],themselv:[1123,1124],therefor:43,thi:[40,41,42,43,847,869,873,879,886,891,896,921,924,956,990,992,998,1022,1025,1027,1028,1029,1030,1031,1036,1045,1048,1051,1079,1123,1127,1132,1142,1144,1145,1146,1147,1148,1149,1150,1160,1169,1191,1220,1221,1224,1225,1226,1227,1228,1229,1233,1234,1237],thing:[43,1191],those:[40,41,921,935,1022,1036,1045,1050,1079],though:43,threshold:[921,981,983],through:[40,41],tile:[270,519,637,921],time:[921,1009,1022,1025,1029,1075,1076,1077,1078,1079,1135,1136,1160,1170,1208,1219,1220,1221,1237],time_chronolog:[1179,1180,1185],time_infer:[1179,1180],timeout:[40,41,42,847,856,857,921,990,998,1079],timestep:[1160,1170,1208,1217],timing_fnam:[1179,1180],titl:1191,tmp_dir:921,tmp_dr:[921,999],to_appli:[40,41],to_clon:[847,1079],to_dev:[40,41,107,264,512,629,847],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[847,1079],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1191],to_ivy_modul:[181,772,1191,1197],to_json:[40,41],to_kv_fn:[1160,1171],to_kv_v:[1160,1171],to_list:[40,41,637,921],to_multi_dev:[40,41],to_mut:[1123,1125,1132],to_n:[15,40,41,1191],to_nod:1079,to_numpi:[40,41,637,921,1191,1233],to_out_fn:[1160,1171],to_out_v:[1160,1171],to_q_fn:[1160,1171],to_q_v:[1160,1171],to_raw:[40,41],to_scalar:[637,921],todo:1079,togeth:[40,41,1230,1231],tool:[1191,1234],top_mod:[1220,1221],topic:1237,torch:[43,845,846,1191,1233,1234,1237],torch_concat:1191,torchfcmodel:1233,total:[40,41,42,847,893,1079],total_mem_on_dev:847,total_mem_on_nod:1079,tpu:[847,894,1079],tpu_is_avail:[512,629,847,1079],tpye:[897,908],trace:[40,41,921,973],track:[847,1079,1123,1132,1220,1221],track_submod_call_ord:[1220,1221],track_submod_ret:[1220,1221],trail:[1222,1223],train:[1022,1024,1025,1029,1191,1192],trainabl:[1022,1028,1191,1192,1197,1198,1220,1221,1230],trainer:1191,tran:1237,transform:[1160,1168,1169],transpos:[40,41,114,270,404,637,847,878,921,1079,1160,1162,1164,1166,1208,1210,1212,1214],travers:[15,18,19,40,41,1123,1132],treat:[40,41,845,846],tree_depth:1189,tree_height:1185,tri:[40,41],trigonometr:[1057,1058,1062,1065,1071],trim_kei:[40,41],trust:[1022,1029,1224,1226],truth:[921,950,1053,1054,1055,1056],try_else_non:921,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[847,1079],tune_dev_alloc:847,tune_dev_split:847,tune_node_alloc:1079,tune_node_split:1079,tune_step:[847,1079],tupl:[15,16,17,18,19,40,41,43,802,803,804,845,846,921,939,956,957,1001,1019,1079,1123,1124,1125,1126,1128,1129,1130,1131,1132,1133,1134,1135,1137,1142,1144,1145,1146,1147,1148,1149,1150],two:[40,41,921,924,929,942,980,1008,1045,1048,1050],type:[15,18,40,41,42,43,59,375,376,788,789,791,792,802,803,804,806,831,847,859,860,861,862,874,875,879,891,897,901,902,903,907,908,909,910,911,912,913,920,921,922,924,928,934,938,940,950,954,955,957,966,973,986,987,988,993,1007,1017,1020,1021,1022,1028,1033,1057,1067,1079,1185,1189,1191,1199,1201,1202,1204,1205,1207,1220,1221,1234],types_to_iteratively_nest:[40,41,42],uint8:[1038,1040,1044],uint8_img_to_float_img:1038,unchang:[15,16,17,18,19],unif:1079,unifi:[40,41,847,876,877,878,879,891,1079,1191],uniform:[40,41,1135,1136,1138,1139,1199,1201,1202,1205,1206],uniformli:[1135,1137,1139],unify_arrai:1079,unify_it:1079,unify_nest:1079,union:[15,18,19,40,41,43,373,375,376,787,788,789,791,792,799,800,802,803,804,806,831,845,846,847,865,870,871,872,873,891,892,897,901,902,903,907,908,909,910,911,912,913,920,921,922,923,924,926,927,928,929,930,932,934,935,936,937,938,939,941,942,943,944,947,948,949,950,952,953,954,955,956,957,958,959,963,965,966,967,974,975,976,977,978,980,981,982,983,986,987,988,991,992,993,994,995,1000,1001,1002,1003,1006,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1021,1079,1123,1124,1125,1131,1132],uniqu:[847,856,857,1075,1076,1077,1078,1079,1123,1127],unique_kwarg:1079,unit:[847,1057,1058,1060,1079,1152,1153,1154,1155],unitari:[1045,1050],unless:[921,986,988,1021],unlik:[847,1079],unnorm:[1135,1136],unpack:[921,1016],unrol:[1160,1170],unset:1234,unset_debug_mod:44,unset_default_devic:847,unset_default_dtyp:897,unset_default_float_dtyp:897,unset_default_int_dtyp:897,unset_framework:[59,1234],unset_with_grad:1022,unstack:[40,41,114,270,404,519,637,921],unus:[845,846],updat:[40,41,847,856,921,971,994,995,1022,1024,1025,1027,1029,1030,1031,1075,1076,1077,1079,1123,1128,1129,1133,1134,1160,1170,1197,1198,1224,1225,1226,1227,1228,1229,1234,1237],update_backend:[40,41],update_config:[40,41],update_inference_tim:1185,upper:[40,41,1135,1139],upper_depth:[1220,1221],usabl:[1191,1237],usag:[847,891,1079],use:[40,41,42,43,847,856,857,882,894,921,991,1004,1005,1079,1160,1171,1177,1178,1191,1222,1223,1234,1237],used:[40,41,43,847,856,886,889,890,896,897,908,921,961,962,979,988,994,995,996,997,1021,1022,1029,1030,1045,1048,1075,1076,1077,1078,1079,1123,1132,1208,1219,1224,1226,1227,1233,1234],used_dev:[847,856],used_mem_on_dev:847,used_mem_on_nod:1079,used_node_str:1079,used_node_strs_dict:1079,useful:[40,41,847,891,1079,1160,1169,1191,1234],user:[1191,1208,1219,1220,1221,1234,1237],uses:1191,using:[40,41,1022,1024,1025,1123,1126,1130,1142,1143,1160,1168,1172,1191,1208,1216,1233,1234,1237],util:[847,880,1079],utility_funct:[802,803,804],v_with_top_v_key_chain:[1220,1221],val:[40,41,806,841,921,969,970,971,996,997,1189],valid:[802,803,804,897,902,921,1004,1005,1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],valid_dtyp:897,valu:[40,41,799,800,847,859,890,891,921,922,924,926,927,935,936,937,939,940,946,950,956,957,958,959,974,975,977,978,981,983,990,991,992,993,994,995,996,997,998,1014,1017,1018,1019,1022,1026,1029,1038,1044,1045,1050,1053,1054,1055,1056,1057,1068,1069,1070,1075,1076,1077,1079,1123,1127,1128,1129,1133,1134,1135,1138,1139,1142,1144,1146,1160,1171,1172,1177,1178,1185,1208,1219,1222,1223,1224,1226],value_is_nan:921,vanilla:[1075,1077],var_shap:1199,variabl:[15,16,17,18,19,40,41,325,442,562,710,921,931,969,970,971,972,973,1007,1022,1025,1026,1027,1028,1029,1030,1031,1033,1036,1075,1076,1077,1078,1160,1171,1177,1178,1197,1198,1199,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231],variable_data:[710,1022],varianc:[40,41,1142,1150,1237],varieti:1234,variou:[43,1191],vector:[40,41,921,937,942,1045,1050,1051,1052,1160,1169,1208,1218],vector_norm:[40,41,1045],vector_to_skew_symmetric_matrix:[158,334,451,571,720,1045],verbos:1236,veri:[43,1191],version:43,via:[1123,1124,1131,1234],view:[1038,1043],vision:1191,visual:1234,volum:[1160,1165],vw_tm1:[1022,1025,1029],wai:[1234,1237],wait:[40,41,42],want:[1191,1234,1237],warn:[59,66,67,68,69,70],warp:[1038,1039],watch:1233,weight:[1022,1024,1025,1027,1029,1030,1031,1160,1169,1170,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1220,1221,1224,1226,1227],weight_initi:[1208,1209,1210,1211,1212,1213,1214,1215,1217,1218],weights_path:[1220,1221],well:[40,41,921,965],were:[40,41,1079],what:1191,when:[40,41,42,43,847,921,933,1005,1018,1045,1050,1079,1191,1220,1221,1234,1237],where:[40,41,43,270,637,802,803,804,806,831,921,924,932,935,939,952,967,974,975,986,1019,1045,1050,1123,1124,1131,1135,1136],wherea:43,wherebi:[1123,1132],whether:[15,18,19,40,41,42,802,803,804,845,846,847,865,878,882,886,891,894,896,897,907,911,912,913,920,921,923,929,930,943,946,951,956,963,965,968,972,973,979,1000,1007,1016,1017,1022,1025,1026,1027,1028,1029,1030,1031,1033,1075,1076,1077,1078,1079,1123,1124,1125,1127,1131,1132,1135,1136,1152,1153,1160,1168,1191,1197,1198,1208,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229],which:[40,41,42,43,787,788,789,802,803,804,845,846,847,856,857,865,870,871,872,873,876,877,878,879,881,883,887,889,890,891,897,902,907,911,920,921,924,928,938,940,942,943,944,946,953,957,958,959,960,966,967,976,977,978,985,986,987,988,989,991,994,995,1002,1006,1016,1018,1020,1021,1022,1025,1026,1027,1029,1030,1031,1033,1035,1036,1038,1040,1045,1048,1051,1057,1063,1079,1123,1127,1128,1129,1133,1134,1135,1136,1137,1138,1139,1142,1144,1145,1146,1147,1148,1149,1150,1152,1157,1160,1171,1172,1191,1197,1198,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1230,1231,1233,1234],whitespac:[40,41,42],whose:[43,806,831,921,928,933,1142,1143,1144,1145,1146,1148,1150],why:[1191,1192],width:[1038,1043],wiki:1237,wikipedia:1237,window:[1038,1043,1160,1161,1162,1163,1164,1165,1166,1167,1208,1209,1210,1211,1212,1213,1214,1215],wise:[40,41,43,806,831,921,934,935,950,954,955,981,983,993,1022,1025,1027,1029,1031,1053,1054,1055,1056,1057,1058,1060,1062,1063,1065,1067,1068,1069,1070,1071,1073,1152,1153,1154,1155,1156,1157,1158,1159],wish:1234,with_arg_label:[1179,1181,1185,1220,1221],with_array_cach:[1179,1180,1181,1185],with_bia:[1208,1218],with_cal:[921,946],with_default_key_color:[40,41],with_edge_label:[1179,1181,1185,1220,1221],with_entries_as_list:[40,41],with_grad:[1022,1032,1220,1221],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1079,with_output_label:[1179,1181,1185,1220,1221],with_partial_v:[1220,1221],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,921,1002,1079],with_to_kv_fn:[1208,1219],with_to_out_fn:[1208,1219],with_to_q_fn:[1208,1219],within:[15,18,19,921,924,1045,1050,1135,1139],without:[40,41,43,921,990,992,998,1123,1125,1234],wonder:1191,word:[15,16,17,921,924,1135,1139,1197,1198],work:[43,1233],worker:[847,856,857,1079],worker_class:[847,856,857,1079],worker_kwarg:1079,would:[43,799,800,1152,1157,1191,1234,1237],wrap:[15,40,41,42,43,921,933,1022,1036,1191],wrapper:43,write:[40,41,43,1191,1192,1237],written:[43,1191,1237],ws_new:[1022,1025,1027,1029,1030,1031],x1_i:[921,950,1057,1067],x2_i:[921,950,1057,1067],x_feat_dim:[1160,1171],x_i:[791,792],x_in:[1191,1233],x_inv:[1045,1047],x_max:[921,935],x_min:[921,935],x_sub:1079,xkk:1237,xkkm1:1237,xkm1km1:1237,xs0:1079,xs_t:1079,year:[1191,1237],yet:[1123,1132,1237],yield:[921,1018],you:[1191,1233,1234,1237],your:[1191,1233,1234,1237],your_awesome_project:1234,yourself:1191,zero:[40,41,114,270,404,519,637,802,803,804,921,939,986,988,994,995,1019,1021,1022,1024,1025,1029,1030,1160,1168,1191,1199,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1224,1225,1226,1227],zero_pad:[270,519,637,921],zeros_lik:[114,270,404,519,637,921],zip:1079,zk_e:1237},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","asarray","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","asarray","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","asarray","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","asarray","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","asarray","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":946,"function":[77,78,83,85,87,88,89,90,91,93,94,195,196,201,203,205,206,207,208,209,211,212,372,373,378,380,382,383,384,385,386,388,389,482,483,488,490,492,493,494,495,496,498,499,599,600,605,607,609,610,611,612,613,615,616,786,787,791,793,795,796,797,798,799,801,802],Ones:1204,Using:1234,abs:[271,520,638,922],aco:[732,1058],acosh:[733,1059],activ:[179,359,468,591,764,1152,1194],adam:1225,adam_step:1024,adam_upd:1025,algebra:[86,87,204,205,381,382,491,492,608,609,794,795],all:[95,213,390,500,617,803],all_equ:923,all_nested_indic:1124,ani:[96,214,391,501,618,804],api:[0,43,75,98,193,216,370,393,480,503,597,620,784],arang:[115,272,405,521,639,924],arg_nam:925,argmax:[116,406,522,640,926],argmin:[117,407,523,641,927],args_to_ivi:16,args_to_n:17,argsort:[92,210,387,497,614,800],arithmet:[1,99,217,394,504,621],arrai:[0,3,43,75,97,98,100,118,193,215,216,218,225,273,370,392,393,395,408,480,502,503,505,524,597,619,620,622,642,784,806,928],array_equ:[274,643,929],arrays_equ:930,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asarrai:[119,275,409,525,644],asin:[734,1060],asinh:[735,1061],assert_supports_inplac:931,atan2:[737,1063],atan:[736,1062],atanh:[738,1064],attribut:[5,101,219,396,506,623],backend:[43,73],bilinear_resampl:[155,331,448,568,717,1039],binary_cross_entropi:1174,bitwis:[7,102,220,397,507,624],broadcast_to:[276,645,932],builder:51,builtin:[97,215,225,392,502,619,806],builtin_ab:[226,807],builtin_add:[227,808],builtin_and:[228,809],builtin_bool:[229,810],builtin_contain:[230,811],builtin_deepcopi:[231,812],builtin_dir:[232,813],builtin_eq:[233,814],builtin_float:[234,815],builtin_floordiv:[235,816],builtin_g:[236,817],builtin_getattr:[237,818],builtin_getattribut:[238,819],builtin_getitem:[239,820],builtin_gt:[240,821],builtin_int:[241,822],builtin_invert:[242,823],builtin_l:[243,824],builtin_lt:[244,825],builtin_mul:[245,826],builtin_n:[246,827],builtin_neg:[247,828],builtin_or:[248,829],builtin_po:[249,830],builtin_pow:[250,831],builtin_radd:[251,832],builtin_rand:[252,833],builtin_rfloordiv:[253,834],builtin_rmul:[254,835],builtin_ror:[255,836],builtin_rpow:[256,837],builtin_rsub:[257,838],builtin_rtruediv:[258,839],builtin_rxor:[259,840],builtin_setitem:[260,841],builtin_sub:[261,842],builtin_truediv:[262,843],builtin_xor:[263,844],cache_fn:933,cast:[120,277,410,526,646,901],ceil:[278,647,934],choleski:[721,1046],choose_random_framework:61,citat:1191,clear_framework_stack:62,clear_mem_on_dev:[631,863],clip:[279,648,935],clip_matrix_norm:936,clip_vector_norm:937,clone:1094,clone_arrai:1095,clone_it:1096,clone_nest:1097,clonedit:1081,cloneditem:1080,clonednest:1082,closest_valid_dtyp:902,code:1237,comparison:[9,103,221,398,508,625],compil:[280,411,649,845,846,1179],compile_graph:1180,concaten:[121,281,412,527,650,938],constant:[76,194,371,481,598,785],constant_pad:[282,528,651,939],contain:[40,41],container_typ:[652,940],content:1191,contribut:43,conv1d:[185,362,472,776,1161,1209],conv1d_transpos:[186,363,473,777,1162],conv1dtranspos:1210,conv2d:[187,364,474,593,778,1163,1211],conv2d_transpos:[188,365,475,779,1164],conv2dtranspos:1212,conv3d:[189,366,476,594,780,1165,1213],conv3d_transpos:[190,367,477,781,1166],conv3dtranspos:1214,convers:15,convert:[181,772,1197],convert_dtyp:903,copy_arrai:[653,941],copy_nest:1125,core:[106,224,401,511,628,805],cos:[739,1065],cosh:[740,1066],cprint:1236,creation:[77,195,372,482,599,786],cross:[283,654,942],cross_entropi:1175,cumprod:[122,284,413,655,943],cumsum:[656,944],current_framework:63,current_framework_str:[657,945],data:[78,82,196,200,373,377,483,487,600,604,787,790],debug_mod:45,debugg:44,default_devic:864,default_dtyp:904,default_float_dtyp:905,default_int_dtyp:906,default_nod:1098,depthwise_conv2d:[191,368,478,595,782,1167],depthwiseconv2d:1215,design:43,dev:[109,266,514,632,865],dev_clon:866,dev_clone_arrai:867,dev_clone_it:868,dev_clone_nest:869,dev_dist:870,dev_dist_arrai:871,dev_dist_it:872,dev_dist_nest:873,dev_from_str:[110,267,515,633,874],dev_to_str:[111,268,516,634,875],dev_unifi:876,dev_unify_arrai:877,dev_unify_it:878,dev_unify_nest:879,dev_util:880,devclonedit:850,devcloneditem:849,devclonednest:851,devdistit:853,devdistitem:852,devdistnest:854,devic:[20,107,264,402,512,629,847],devmapp:856,devmappermultiproc:857,distribute_nest:1099,divid:1067,document:1191,dropout:[1168,1216],dtype:[123,285,414,529,658,897,907],dtype_bit:[124,286,415,530,659,908],dtype_from_str:[125,287,416,531,660,909],dtype_to_str:[126,288,417,532,661,910],ecosystem:52,einops_rearrang:947,einops_reduc:948,einops_repeat:949,einsum:[171,350,460,583,756,1143],elementwis:[83,201,378,488,605,791],equal:[533,662,950],erf:[456,741,1068],execute_with_gradi:[152,326,443,563,711,1026],exist:951,exp:[742,1069],expand_dim:[289,663,952],extens:[86,204,381,491,608,794],finfo:[80,198,375,485,602,788],firstlayersiren:1201,flip:[127,290,418,534,664,953],float_img_to_uint8_img:1040,floor:[291,665,954],floormod:[292,666,955],fomaml_step:1076,fourier_encod:956,framework:59,full:[128,293,419,535,667,957],func:72,gather:[129,294,420,536,668,958],gather_nd:[130,295,421,537,669,959],geglu:1195,gelu:[360,469,765,1153,1196],gener:[22,114,270,404,519,637,921],get_all_arrays_in_memori:960,get_all_arrays_on_dev:881,get_framework:64,get_min_bas:961,get_min_denomin:962,get_num_dim:[670,963],get_referrers_recurs:964,global:1182,glorotuniform:1202,gpu_is_avail:[882,1100],gradient:[24,151,325,442,562,710,1022],gradient_descent_upd:1027,gradient_imag:[156,332,449,569,718,1041],graph:1185,gym:53,handler:59,has_nan:965,helper:1187,ident:[131,296,422,538,671,966],iinfo:[81,199,376,486,603,789],imag:[26,154,330,447,567,716,1038],index_nest:1126,indices_wher:[132,297,423,672,967],initi:1199,inplac:[11,104,222,399,509,626],inplace_arrays_support:968,inplace_decr:[133,298,424,539,673,969],inplace_incr:[134,299,425,540,674,970],inplace_upd:[135,300,426,541,675,971],inplace_variables_support:972,inv:[722,1047],invalid_dtyp:911,is_arrai:[136,301,427,542,676,973],is_float_dtyp:912,is_int_dtyp:913,is_vari:[153,327,444,564,712,1028],isfinit:[84,202,379,489,606,792],isinf:[302,543,677,974],isnan:[303,544,678,975],ivi:[43,50,51,52,53,54,55,56,57,58,783,1233,1234,1237],ivymodul:[182,773],jax:74,lamb:1226,lamb_upd:1029,lar:1227,lars_upd:1030,layer:[184,361,471,592,775,1160,1208],layer_norm:1178,layernorm:1223,leaky_relu:[766,1154],linalg:[28,158,334,451,571,720,1045],linear:[86,87,204,205,381,382,491,492,608,609,794,795,1169,1218],linear_resampl:[137,304,428,545,679,976],linspac:[138,305,429,546,680,977],log:[743,1070,1188],log_global_inference_abs_tim:1183,log_global_inference_rel_tim:1184,logic:[30,161,339,454,575,727,1053],logical_and:[340,728,1054],logical_not:[341,729,1055],logical_or:[342,730,1056],logspac:[139,306,430,547,681,978],loss:1173,lstm:1217,lstm_updat:1170,maml_step:1077,manipul:[88,206,383,493,610,796],map:1127,map_nest_at_index:1128,map_nest_at_indic:1129,match_kwarg:979,math:[32,162,343,455,576,731,1057],matmul:[307,548,682,980],matrix_norm:[159,335,452,572,723,1048],maximum:[683,981],mech:54,memori:55,meshgrid:[308,684,982],meta:[34,1075],method:[85,203,380,490,607,793],minimum:[685,983],model:56,modul:[1220,1221,1233],multi:1079,multi_head_attent:1171,multi_index_nest:1130,multidevcontain:42,multidevit:860,multidevitem:859,multidevnest:861,multiheadattent:1219,multinodeit:1085,multinodeitem:1084,multinodenest:1086,multinomi:[164,345,458,578,749,1136],multiprocess:[686,984],mxnet:192,nativ:1233,nest:1123,nested_indices_wher:1131,nested_map:1132,network:1233,next:1191,node:[1079,1101],node_dist:1102,node_dist_arrai:1103,node_dist_it:1104,node_str:1105,node_to_str:1106,node_util:1107,nodedistit:1088,nodedistitem:1087,nodedistnest:1089,nodemapp:1091,nodemappermultiproc:1092,norm:[1177,1222],num_arrays_in_memori:985,num_arrays_on_dev:883,num_cpu_cor:884,num_gpu:[112,885,1108],numpi:369,nutshel:1191,one_hot:[140,431,549,687,986],ones:[141,309,432,550,688,987],ones_lik:[142,310,433,551,689,988],oper:[1,3,7,9,11,13,43,99,100,102,103,104,105,217,218,220,221,222,223,394,395,397,398,399,400,504,505,507,508,509,510,621,622,624,625,626,627],optim:[1224,1228],optimizer_upd:1031,overview:1191,param:1189,percent_used_mem_on_dev:886,percent_used_mem_on_nod:1109,pinv:[336,724,1049],portabl:1237,print_all_arrays_in_memori:989,print_all_arrays_on_dev:887,profil:[108,265,403,513,630,862,1093],queue_timeout:990,randint:[165,346,579,750,1137],random:[36,163,344,457,577,748,1135],random_crop:1042,random_norm:[166,347,580,751,1138],random_uniform:[167,348,581,752,1139],reduce_max:[172,351,461,584,757,1144],reduce_mean:[173,352,462,585,758,1145],reduce_min:[174,353,463,586,759,1146],reduce_prod:[175,354,464,587,760,1147],reduce_std:[355,1148],reduce_sum:[176,356,465,588,761,1149],reduce_var:[177,357,466,589,762,1150],reduct:[38,170,349,459,582,755,1142],reflect:[13,105,223,400,510,627],relu:[767,1155],repeat:[311,690,991],reptile_step:1078,reshap:[691,992],robot:57,round:[312,692,993],run:1234,scaled_dot_product_attent:1172,scatter_flat:[143,313,434,552,693,994],scatter_nd:[144,314,435,553,694,995],search:[89,207,384,494,611,797],seed:[168,753,1140],sequenti:[1230,1231],set:[90,208,385,495,612,798],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:888,set_default_dtyp:914,set_default_float_dtyp:915,set_default_int_dtyp:916,set_default_nod:1110,set_exception_debug_mod:48,set_framework:65,set_min_bas:996,set_min_denomin:997,set_nest_at_index:1133,set_nest_at_indic:1134,set_queue_timeout:998,set_split_factor:[889,1111],set_tmp_dir:999,set_with_grad:1032,sgd:1229,shape:[695,1000],shape_to_tupl:1001,show_graph:1181,shuffl:[169,754,1141],sigmoid:[768,1156],signatur:[85,203,380,490,607,793],sin:[744,1071],sinh:[745,1072],siren:1205,softmax:[180,470,769,1157],softplu:[770,1158],sort:[91,209,386,496,613,799],sparse_cross_entropi:1176,split:[145,315,436,554,696,1002],split_factor:[890,1112],split_func_cal:[891,1113],squeez:[146,316,437,555,697,1003],stable_divid:1004,stable_pow:1005,stack:[317,698,1006],stack_imag:[157,333,450,570,719,1043],statist:[93,211,388,498,615,801],stop_gradi:[328,445,565,713,1033],str_to_nod:1114,submodul:43,supports_inplac:1007,svd:[337,573,725,1050],swapax:[556,699,1008],tan:[746,1073],tanh:[747,771,1074,1159],tensorflow:479,tile:[318,557,700,1009],tmp_dir:1010,to_dev:[113,269,517,635,892],to_ivi:18,to_ivy_modul:[183,774,1198],to_list:[701,1011],to_n:19,to_nod:1115,to_numpi:[702,1012],to_scalar:[703,1013],torch:596,total_mem_on_dev:893,total_mem_on_nod:1116,tpu_is_avail:[518,636,894,1117],train:1233,trainabl:1233,transpos:[147,319,438,704,1014],tree:1191,try_else_non:1015,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,196,200,373,377,483,487,600,604,787,790],uint8_img_to_float_img:1044,unifi:1118,unify_arrai:1119,unify_it:1120,unify_nest:1121,unset_debug_mod:49,unset_default_devic:895,unset_default_dtyp:917,unset_default_float_dtyp:918,unset_default_int_dtyp:919,unset_framework:71,unset_with_grad:1034,unstack:[148,320,439,558,705,1016],used_mem_on_dev:896,used_mem_on_nod:1122,util:[94,212,389,499,616,802],valid_dtyp:920,value_is_nan:1017,variabl:[329,446,566,714,1035],variable_data:[715,1036],vector_norm:1051,vector_to_skew_symmetric_matrix:[160,338,453,574,726,1052],verbos:1235,vision:58,where:[321,706,1018,1191],why:1237,with_grad:1037,wrapper:72,write:1234,zero:[149,323,440,560,708,1020,1207],zero_pad:[322,559,707,1019],zeros_lik:[150,324,441,561,709,1021]}})