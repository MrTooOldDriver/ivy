Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/asarray","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/isfinite","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/all","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/asarray","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isfinite","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/all","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/asarray","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/isfinite","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/all","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/asarray","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isfinite","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/all","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/asarray","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isfinite","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/all","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/finfo","functional/ivy/core/dtype/iinfo","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isfinite","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/all","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/asarray.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/isfinite.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/all.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/asarray.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isfinite.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/all.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/asarray.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/isfinite.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/all.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/asarray.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isfinite.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/all.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/asarray.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isfinite.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/all.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/finfo.rst","functional/ivy/core/dtype/iinfo.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isfinite.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/all.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[759,0,0,"-"]},"ivy.functional.backends.numpy":{array_api:[360,0,0,"-"],array_builtins:[375,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[361,0,0,"-"],creation_functions:[362,0,0,"-"],data_type_functions:[363,0,0,"-"],data_types:[364,0,0,"-"],elementwise_functions:[365,0,0,"-"],function_and_method_signatures:[366,0,0,"-"],linear_algebra_extension:[367,0,0,"-"],linear_algebra_functions:[368,0,0,"-"],manipulation_functions:[369,0,0,"-"],searching_functions:[370,0,0,"-"],set_functions:[371,0,0,"-"],sorting_functions:[372,0,0,"-"],statistical_functions:[373,0,0,"-"],utility_functions:[374,0,0,"-"]},"ivy.functional.backends.numpy.array_builtins":{array_api:[376,0,0,"-"]},"ivy.functional.backends.numpy.array_builtins.array_api":{arithmetic_operators:[377,0,0,"-"],array_operators:[378,0,0,"-"],attributes:[379,0,0,"-"],bitwise_operators:[380,0,0,"-"],comparison_operators:[381,0,0,"-"],inplace_operators:[382,0,0,"-"],reflected_operators:[383,0,0,"-"]},"ivy.functional.backends.numpy.core":{device:[385,0,0,"-"],general:[387,0,0,"-"],gradients:[426,0,0,"-"],image:[431,0,0,"-"],linalg:[435,0,0,"-"],logic:[438,0,0,"-"],math:[439,0,0,"-"],random:[441,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[386,1,1,""],clear_mem_on_dev:[385,2,1,""],dev:[385,2,1,""],dev_from_str:[385,2,1,""],dev_to_str:[385,2,1,""],gpu_is_available:[385,2,1,""],num_gpus:[385,2,1,""],to_dev:[385,2,1,""],tpu_is_available:[385,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[386,3,1,""],start:[386,3,1,""],stop:[386,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[387,2,1,""],arange:[388,2,1,""],argmax:[389,2,1,""],argmin:[390,2,1,""],argsort:[387,2,1,""],array:[391,2,1,""],asarray:[392,2,1,""],astype:[387,2,1,""],cast:[393,2,1,""],ceil:[387,2,1,""],clip:[387,2,1,""],compile:[394,2,1,""],concatenate:[395,2,1,""],constant_pad:[387,2,1,""],container_types:[387,2,1,""],copy_array:[387,2,1,""],cumprod:[396,2,1,""],current_framework_str:[387,2,1,""],dtype:[397,2,1,""],dtype_bits:[398,2,1,""],dtype_from_str:[399,2,1,""],dtype_to_str:[400,2,1,""],equal:[387,2,1,""],flip:[401,2,1,""],floor:[387,2,1,""],floormod:[387,2,1,""],full:[402,2,1,""],gather:[403,2,1,""],gather_nd:[404,2,1,""],get_num_dims:[387,2,1,""],identity:[405,2,1,""],indices_where:[406,2,1,""],inplace_arrays_supported:[387,2,1,""],inplace_decrement:[407,2,1,""],inplace_increment:[408,2,1,""],inplace_update:[409,2,1,""],inplace_variables_supported:[387,2,1,""],is_array:[410,2,1,""],isfinite:[411,2,1,""],linear_resample:[412,2,1,""],linspace:[413,2,1,""],logspace:[414,2,1,""],matmul:[387,2,1,""],meshgrid:[387,2,1,""],multiprocessing:[387,2,1,""],one_hot:[415,2,1,""],ones:[416,2,1,""],ones_like:[417,2,1,""],round:[387,2,1,""],scatter_flat:[418,2,1,""],scatter_nd:[419,2,1,""],shape:[387,2,1,""],split:[420,2,1,""],squeeze:[421,2,1,""],to_list:[387,2,1,""],to_numpy:[387,2,1,""],to_scalar:[387,2,1,""],transpose:[422,2,1,""],unstack:[423,2,1,""],where:[387,2,1,""],zero_pad:[387,2,1,""],zeros:[424,2,1,""],zeros_like:[425,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[427,2,1,""],is_variable:[428,2,1,""],stop_gradient:[429,2,1,""],variable:[430,2,1,""],variable_data:[426,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[432,2,1,""],gradient_image:[433,2,1,""],stack_images:[434,2,1,""]},"ivy.functional.backends.numpy.core.linalg":{matrix_norm:[436,2,1,""],vector_to_skew_symmetric_matrix:[437,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[440,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[442,2,1,""],randint:[441,2,1,""],random_normal:[441,2,1,""],random_uniform:[441,2,1,""],seed:[441,2,1,""],shuffle:[441,2,1,""]},"ivy.functional.ivy":{array_api:[760,0,0,"-"],core:[775,0,0,"-"],nn:[1126,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[761,0,0,"-"],creation_functions:[762,0,0,"-"],data_type_functions:[763,0,0,"-"],data_types:[764,0,0,"-"],elementwise_functions:[765,0,0,"-"],function_and_method_signatures:[766,0,0,"-"],linear_algebra_extension:[767,0,0,"-"],linear_algebra_functions:[768,0,0,"-"],manipulation_functions:[769,0,0,"-"],searching_functions:[770,0,0,"-"],set_functions:[771,0,0,"-"],sorting_functions:[772,0,0,"-"],statistical_functions:[773,0,0,"-"],utility_functions:[774,0,0,"-"]},"ivy.functional.ivy.core":{array_builtins:[776,0,0,"-"],compilation:[815,0,0,"-"],device:[817,0,0,"-"],dtype:[867,0,0,"-"],general:[893,0,0,"-"],gradients:[996,0,0,"-"],image:[1012,0,0,"-"],linalg:[1019,0,0,"-"],logic:[1027,0,0,"-"],math:[1031,0,0,"-"],meta:[1049,0,0,"-"],multi_node:[1053,0,0,"-"],nest:[1097,0,0,"-"],random:[1109,0,0,"-"],reductions:[1116,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[777,2,1,""],builtin_add:[778,2,1,""],builtin_and:[779,2,1,""],builtin_bool:[780,2,1,""],builtin_contains:[781,2,1,""],builtin_deepcopy:[782,2,1,""],builtin_dir:[783,2,1,""],builtin_eq:[784,2,1,""],builtin_float:[785,2,1,""],builtin_floordiv:[786,2,1,""],builtin_ge:[787,2,1,""],builtin_getattr:[788,2,1,""],builtin_getattribute:[789,2,1,""],builtin_getitem:[790,2,1,""],builtin_gt:[791,2,1,""],builtin_int:[792,2,1,""],builtin_invert:[793,2,1,""],builtin_le:[794,2,1,""],builtin_lt:[795,2,1,""],builtin_mul:[796,2,1,""],builtin_ne:[797,2,1,""],builtin_neg:[798,2,1,""],builtin_or:[799,2,1,""],builtin_pos:[800,2,1,""],builtin_pow:[801,2,1,""],builtin_radd:[802,2,1,""],builtin_rand:[803,2,1,""],builtin_rfloordiv:[804,2,1,""],builtin_rmul:[805,2,1,""],builtin_ror:[806,2,1,""],builtin_rpow:[807,2,1,""],builtin_rsub:[808,2,1,""],builtin_rtruediv:[809,2,1,""],builtin_rxor:[810,2,1,""],builtin_setitem:[811,2,1,""],builtin_sub:[812,2,1,""],builtin_truediv:[813,2,1,""],builtin_xor:[814,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[816,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[817,1,1,""],DevClonedItem:[819,1,1,""],DevClonedIter:[820,1,1,""],DevClonedNest:[821,1,1,""],DevDistItem:[822,1,1,""],DevDistIter:[823,1,1,""],DevDistNest:[824,1,1,""],DevManager:[817,1,1,""],DevMapper:[826,1,1,""],DevMapperMultiProc:[827,1,1,""],MultiDev:[817,1,1,""],MultiDevItem:[829,1,1,""],MultiDevIter:[830,1,1,""],MultiDevNest:[831,1,1,""],Profiler:[832,1,1,""],clear_mem_on_dev:[833,2,1,""],default_device:[834,2,1,""],dev:[835,2,1,""],dev_clone:[836,2,1,""],dev_clone_array:[837,2,1,""],dev_clone_iter:[838,2,1,""],dev_clone_nest:[839,2,1,""],dev_dist:[840,2,1,""],dev_dist_array:[841,2,1,""],dev_dist_iter:[842,2,1,""],dev_dist_nest:[843,2,1,""],dev_from_str:[844,2,1,""],dev_to_str:[845,2,1,""],dev_unify:[846,2,1,""],dev_unify_array:[847,2,1,""],dev_unify_iter:[848,2,1,""],dev_unify_nest:[849,2,1,""],dev_util:[850,2,1,""],get_all_arrays_on_dev:[851,2,1,""],gpu_is_available:[852,2,1,""],num_arrays_on_dev:[853,2,1,""],num_cpu_cores:[854,2,1,""],num_gpus:[855,2,1,""],percent_used_mem_on_dev:[856,2,1,""],print_all_arrays_on_dev:[857,2,1,""],set_default_device:[858,2,1,""],set_split_factor:[859,2,1,""],split_factor:[860,2,1,""],split_func_call:[861,2,1,""],to_dev:[862,2,1,""],total_mem_on_dev:[863,2,1,""],tpu_is_available:[864,2,1,""],unset_default_device:[865,2,1,""],used_mem_on_dev:[866,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[817,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[817,3,1,""],da_tune_step:[817,3,1,""],dim_size:[817,3,1,""],ds_tune_step:[817,3,1,""],map:[817,3,1,""],repeated_config_check:[817,3,1,""],tune_step:[817,3,1,""],tuned:[817,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[826,3,1,""],map:[826,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[827,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[817,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[829,3,1,""],items:[829,3,1,""],keys:[829,3,1,""],shape:[829,3,1,""],values:[829,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[830,3,1,""],at_dev:[830,3,1,""],at_devs:[830,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[831,3,1,""],at_dev:[831,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[832,3,1,""],start:[832,3,1,""],stop:[832,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[867,1,1,""],DefaultFloatDtype:[867,1,1,""],DefaultIntDtype:[867,1,1,""],astype:[867,2,1,""],cast:[871,2,1,""],closest_valid_dtype:[872,2,1,""],convert_dtype:[873,2,1,""],default_dtype:[874,2,1,""],default_float_dtype:[875,2,1,""],default_int_dtype:[876,2,1,""],dtype:[877,2,1,""],dtype_bits:[878,2,1,""],dtype_from_str:[879,2,1,""],dtype_to_str:[880,2,1,""],finfo:[881,2,1,""],iinfo:[882,2,1,""],invalid_dtype:[883,2,1,""],is_float_dtype:[884,2,1,""],is_int_dtype:[885,2,1,""],set_default_dtype:[886,2,1,""],set_default_float_dtype:[887,2,1,""],set_default_int_dtype:[888,2,1,""],unset_default_dtype:[889,2,1,""],unset_default_float_dtype:[890,2,1,""],unset_default_int_dtype:[891,2,1,""],valid_dtype:[892,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[867,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[867,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[867,3,1,""]},"ivy.functional.ivy.core.general":{"default":[919,2,1,""],abs:[894,2,1,""],all_equal:[895,2,1,""],arange:[896,2,1,""],arg_names:[897,2,1,""],argmax:[898,2,1,""],argmin:[899,2,1,""],argsort:[900,2,1,""],array:[901,2,1,""],array_equal:[902,2,1,""],arrays_equal:[903,2,1,""],asarray:[893,2,1,""],assert_supports_inplace:[904,2,1,""],broadcast_to:[905,2,1,""],cache_fn:[906,2,1,""],ceil:[907,2,1,""],clip:[908,2,1,""],clip_matrix_norm:[909,2,1,""],clip_vector_norm:[910,2,1,""],concatenate:[911,2,1,""],constant_pad:[912,2,1,""],container_types:[913,2,1,""],copy_array:[914,2,1,""],cross:[915,2,1,""],cumprod:[916,2,1,""],cumsum:[917,2,1,""],current_framework_str:[918,2,1,""],einops_rearrange:[920,2,1,""],einops_reduce:[921,2,1,""],einops_repeat:[922,2,1,""],equal:[923,2,1,""],exists:[924,2,1,""],expand_dims:[925,2,1,""],flip:[926,2,1,""],floor:[927,2,1,""],floormod:[928,2,1,""],fourier_encode:[929,2,1,""],full:[930,2,1,""],gather:[931,2,1,""],gather_nd:[932,2,1,""],get_all_arrays_in_memory:[933,2,1,""],get_min_base:[934,2,1,""],get_min_denominator:[935,2,1,""],get_num_dims:[936,2,1,""],get_referrers_recursive:[937,2,1,""],has_nans:[938,2,1,""],identity:[939,2,1,""],indices_where:[940,2,1,""],inplace_arrays_supported:[941,2,1,""],inplace_decrement:[942,2,1,""],inplace_increment:[943,2,1,""],inplace_update:[944,2,1,""],inplace_variables_supported:[945,2,1,""],is_array:[946,2,1,""],isfinite:[947,2,1,""],isinf:[948,2,1,""],isnan:[949,2,1,""],linear_resample:[950,2,1,""],linspace:[951,2,1,""],logspace:[952,2,1,""],match_kwargs:[953,2,1,""],matmul:[954,2,1,""],maximum:[955,2,1,""],meshgrid:[956,2,1,""],minimum:[957,2,1,""],multiprocessing:[958,2,1,""],num_arrays_in_memory:[959,2,1,""],one_hot:[960,2,1,""],ones:[961,2,1,""],ones_like:[962,2,1,""],print_all_arrays_in_memory:[963,2,1,""],queue_timeout:[964,2,1,""],repeat:[965,2,1,""],reshape:[966,2,1,""],round:[967,2,1,""],scatter_flat:[968,2,1,""],scatter_nd:[969,2,1,""],set_min_base:[970,2,1,""],set_min_denominator:[971,2,1,""],set_queue_timeout:[972,2,1,""],set_tmp_dir:[973,2,1,""],shape:[974,2,1,""],shape_to_tuple:[975,2,1,""],split:[976,2,1,""],squeeze:[977,2,1,""],stable_divide:[978,2,1,""],stable_pow:[979,2,1,""],stack:[980,2,1,""],supports_inplace:[981,2,1,""],swapaxes:[982,2,1,""],tile:[983,2,1,""],tmp_dir:[984,2,1,""],to_list:[985,2,1,""],to_numpy:[986,2,1,""],to_scalar:[987,2,1,""],transpose:[988,2,1,""],try_else_none:[989,2,1,""],unstack:[990,2,1,""],value_is_nan:[991,2,1,""],where:[992,2,1,""],zero_pad:[993,2,1,""],zeros:[994,2,1,""],zeros_like:[995,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[996,1,1,""],adam_step:[998,2,1,""],adam_update:[999,2,1,""],execute_with_gradients:[1000,2,1,""],gradient_descent_update:[1001,2,1,""],is_variable:[1002,2,1,""],lamb_update:[1003,2,1,""],lars_update:[1004,2,1,""],optimizer_update:[1005,2,1,""],set_with_grads:[1006,2,1,""],stop_gradient:[1007,2,1,""],unset_with_grads:[1008,2,1,""],variable:[1009,2,1,""],variable_data:[1010,2,1,""],with_grads:[1011,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[996,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1013,2,1,""],float_img_to_uint8_img:[1014,2,1,""],gradient_image:[1015,2,1,""],random_crop:[1016,2,1,""],stack_images:[1017,2,1,""],uint8_img_to_float_img:[1018,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1020,2,1,""],inv:[1021,2,1,""],matrix_norm:[1022,2,1,""],pinv:[1023,2,1,""],svd:[1024,2,1,""],vector_norm:[1025,2,1,""],vector_to_skew_symmetric_matrix:[1026,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1028,2,1,""],logical_not:[1029,2,1,""],logical_or:[1030,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1032,2,1,""],acosh:[1033,2,1,""],asin:[1034,2,1,""],asinh:[1035,2,1,""],atan2:[1037,2,1,""],atan:[1036,2,1,""],atanh:[1038,2,1,""],cos:[1039,2,1,""],cosh:[1040,2,1,""],divide:[1041,2,1,""],erf:[1042,2,1,""],exp:[1043,2,1,""],log:[1044,2,1,""],sin:[1045,2,1,""],sinh:[1046,2,1,""],tan:[1047,2,1,""],tanh:[1048,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1050,2,1,""],maml_step:[1051,2,1,""],reptile_step:[1052,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1053,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1098,2,1,""],copy_nest:[1099,2,1,""],index_nest:[1100,2,1,""],map:[1101,2,1,""],map_nest_at_index:[1102,2,1,""],map_nest_at_indices:[1103,2,1,""],multi_index_nest:[1104,2,1,""],nested_indices_where:[1105,2,1,""],nested_map:[1106,2,1,""],set_nest_at_index:[1107,2,1,""],set_nest_at_indices:[1108,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1110,2,1,""],randint:[1111,2,1,""],random_normal:[1112,2,1,""],random_uniform:[1113,2,1,""],seed:[1114,2,1,""],shuffle:[1115,2,1,""]},"ivy.functional.ivy.core.reductions":{all:[1117,2,1,""],einsum:[1118,2,1,""],reduce_max:[1119,2,1,""],reduce_mean:[1120,2,1,""],reduce_min:[1121,2,1,""],reduce_prod:[1122,2,1,""],reduce_std:[1123,2,1,""],reduce_sum:[1124,2,1,""],reduce_var:[1125,2,1,""]},"ivy.functional.ivy.nn":{activations:[1127,0,0,"-"],layers:[1135,0,0,"-"],losses:[1148,0,0,"-"],norms:[1152,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1128,2,1,""],leaky_relu:[1129,2,1,""],relu:[1130,2,1,""],sigmoid:[1131,2,1,""],softmax:[1132,2,1,""],softplus:[1133,2,1,""],tanh:[1134,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1136,2,1,""],conv1d_transpose:[1137,2,1,""],conv2d:[1138,2,1,""],conv2d_transpose:[1139,2,1,""],conv3d:[1140,2,1,""],conv3d_transpose:[1141,2,1,""],depthwise_conv2d:[1142,2,1,""],dropout:[1143,2,1,""],linear:[1144,2,1,""],lstm_update:[1145,2,1,""],multi_head_attention:[1146,2,1,""],scaled_dot_product_attention:[1147,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1149,2,1,""],cross_entropy:[1150,2,1,""],sparse_cross_entropy:[1151,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1153,2,1,""]},"ivy.graph_compiler":{compiler:[1154,0,0,"-"],globals:[1157,0,0,"-"],graph:[1160,0,0,"-"],helpers:[1162,0,0,"-"],op_logging:[1163,0,0,"-"],param:[1164,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1155,2,1,""],show_graph:[1156,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1158,2,1,""],log_global_inference_rel_times:[1159,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1160,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1160,3,1,""],add_fn_to_dict:[1160,3,1,""],add_param:[1160,3,1,""],compiled:[1160,3,1,""],connect:[1160,3,1,""],debug_info:[1160,3,1,""],get_param:[1160,3,1,""],get_param_recursive:[1160,3,1,""],include_generators:[1160,3,1,""],increment_param_count:[1160,3,1,""],log_all_ops:[1160,3,1,""],params_all_empty:[1160,3,1,""],save_debug_info:[1160,3,1,""],set_param:[1160,3,1,""],show:[1160,3,1,""],show_debug_info:[1160,3,1,""],update_inference_times:[1160,3,1,""],with_array_caching:[1160,3,1,""]},"ivy.graph_compiler.param":{Param:[1164,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1164,3,1,""],count:[1164,3,1,""],depth:[1164,3,1,""],get:[1164,3,1,""],is_var:[1164,3,1,""],ptype:[1164,3,1,""],set:[1164,3,1,""],set_count:[1164,3,1,""],shape:[1164,3,1,""]},"ivy.stateful":{activations:[1169,0,0,"-"],converters:[1172,0,0,"-"],initializers:[1174,0,0,"-"],layers:[1183,0,0,"-"],module:[1195,0,0,"-"],norms:[1197,0,0,"-"],optimizers:[1199,0,0,"-"],sequential:[1205,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1170,1,1,""],GELU:[1171,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1170,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1171,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1173,2,1,""]},"ivy.stateful.initializers":{Constant:[1174,1,1,""],FirstLayerSiren:[1176,1,1,""],GlorotUniform:[1177,1,1,""],KaimingNormal:[1174,1,1,""],Ones:[1179,1,1,""],Siren:[1180,1,1,""],Uniform:[1174,1,1,""],Zeros:[1182,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1174,3,1,""],create_variables:[1174,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1176,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1177,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1174,3,1,""],create_variables:[1174,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1179,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1180,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1174,3,1,""],create_variables:[1174,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1182,3,1,""]},"ivy.stateful.layers":{Conv1D:[1184,1,1,""],Conv1DTranspose:[1185,1,1,""],Conv2D:[1186,1,1,""],Conv2DTranspose:[1187,1,1,""],Conv3D:[1188,1,1,""],Conv3DTranspose:[1189,1,1,""],DepthwiseConv2D:[1190,1,1,""],Dropout:[1191,1,1,""],LSTM:[1192,1,1,""],Linear:[1193,1,1,""],MultiHeadAttention:[1194,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1184,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1185,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1186,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1187,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1188,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1189,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1190,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1191,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1192,3,1,""],get_initial_state:[1192,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1193,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1194,3,1,""]},"ivy.stateful.module":{Module:[1196,1,1,""]},"ivy.stateful.module.Module":{__init__:[1196,3,1,""],build:[1196,3,1,""],build_mode:[1196,3,1,""],built:[1196,3,1,""],check_submod_rets:[1196,3,1,""],compile_graph:[1196,3,1,""],compile_on_next_step:[1196,3,1,""],get_mod_key:[1196,3,1,""],mod_depth:[1196,3,1,""],mod_height:[1196,3,1,""],mod_with_top_mod_key_chain:[1196,3,1,""],save_weights:[1196,3,1,""],show_graph:[1196,3,1,""],show_mod_in_top_mod:[1196,3,1,""],show_structure:[1196,3,1,""],show_v_in_top_v:[1196,3,1,""],sub_mods:[1196,3,1,""],track_submod_call_order:[1196,3,1,""],track_submod_rets:[1196,3,1,""],v_with_top_v_key_chains:[1196,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1198,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1198,3,1,""]},"ivy.stateful.optimizers":{Adam:[1200,1,1,""],LAMB:[1201,1,1,""],LARS:[1202,1,1,""],Optimizer:[1203,1,1,""],SGD:[1204,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1200,3,1,""],set_state:[1200,3,1,""],state:[1200,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1201,3,1,""],set_state:[1201,3,1,""],state:[1201,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1202,3,1,""],set_state:[1202,3,1,""],state:[1202,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1203,3,1,""],compile_graph:[1203,3,1,""],compile_on_next_step:[1203,3,1,""],set_state:[1203,3,1,""],show_graph:[1203,3,1,""],step:[1203,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1204,3,1,""],set_state:[1204,3,1,""],state:[1204,3,1,""]},"ivy.stateful.sequential":{Sequential:[1206,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1206,3,1,""]},"ivy.verbosity":{cprint:[1211,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1210,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1199,1200,1201],"02886":1166,"100":[1053,1166,1208],"2021":1166,"2102":1166,"360":[1031,1039,1045,1047],"999":[996,998,999,1003,1199,1200,1201],"abstract":[817,832,1166,1199,1203],"boolean":[40,41,817,852,864,867,883,892,893,895,902,903,938,940,941,945,946,948,949,981,991,996,1002,1027,1028,1029,1030,1049,1050,1051,1053],"break":43,"case":[15,18,19,40,41,42,43,817,856,863,866,893,896,966,968,969,1019,1022,1025,1053,1097,1100,1104,1166,1183,1194,1195,1196,1199,1203,1212],"catch":[893,919],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,385,386,817,819,820,821,822,823,824,826,827,829,830,831,832,844,845,867,893,897,953,961,996,1010,1053,1097,1099,1106,1148,1150,1151,1160,1164,1166,1169,1170,1171,1172,1173,1174,1176,1177,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1212],"default":[15,18,19,40,41,42,43,815,816,817,826,827,834,835,839,840,841,842,843,846,847,848,849,856,859,860,861,866,867,874,875,876,877,893,895,896,898,899,900,909,910,911,912,915,916,917,926,929,930,931,936,938,939,950,952,953,956,958,961,964,965,968,969,972,974,976,978,979,988,990,991,994,996,999,1001,1002,1003,1004,1005,1007,1011,1019,1022,1025,1049,1050,1051,1052,1053,1097,1098,1099,1101,1105,1106,1109,1110,1112,1113,1116,1117,1119,1120,1121,1122,1123,1124,1125,1127,1128,1132,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206],"final":[40,41,893,929,951,952,1053,1183,1194,1209],"float":[40,41,42,43,776,801,817,826,827,850,856,859,863,866,867,875,881,884,893,896,909,910,912,929,930,934,935,952,970,971,972,978,979,996,998,999,1001,1003,1004,1005,1012,1014,1018,1031,1041,1049,1050,1051,1052,1053,1109,1112,1113,1127,1129,1135,1143,1146,1147,1148,1149,1150,1151,1152,1153,1183,1191,1194,1197,1198,1199,1200,1201,1202,1203,1204],"function":[15,40,41,43,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,824,826,827,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1166,1169,1170,1171,1199,1202,1203,1204,1208,1209,1212],"import":[43,1166,1209,1212],"int":[40,41,42,43,441,776,801,815,816,817,839,840,841,842,843,846,847,848,849,854,855,861,867,876,878,885,893,898,899,900,905,911,912,916,917,920,921,922,925,926,929,930,931,936,939,950,951,952,960,961,965,966,968,969,974,975,976,977,980,982,983,988,990,993,994,996,998,999,1003,1012,1016,1017,1019,1022,1025,1049,1050,1051,1052,1053,1097,1106,1109,1110,1111,1113,1114,1116,1119,1120,1121,1122,1123,1124,1125,1127,1132,1135,1136,1137,1138,1139,1140,1141,1142,1146,1148,1150,1151,1152,1153,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1197,1198],"long":[1135,1145],"new":[40,41,43,441,867,871,893,894,905,920,921,922,925,929,930,931,932,961,966,968,969,970,971,978,979,980,994,996,999,1001,1003,1004,1005,1012,1014,1016,1018,1031,1033,1035,1038,1040,1046,1048,1053,1097,1107,1108,1109,1110,1152,1153,1166,1172,1173,1183,1193,1197,1198,1199,1200,1201,1202,1203,1204,1209,1212],"public":[893,913],"return":[15,16,17,18,19,40,41,42,43,441,776,801,815,816,817,826,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,852,853,855,856,860,861,862,863,864,866,867,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,892,893,894,895,896,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,936,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,965,966,967,968,969,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1007,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1097,1098,1099,1101,1105,1106,1109,1110,1111,1112,1113,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1166,1172,1173,1183,1192,1193,1199,1203,1208,1209,1212],"short":[1135,1145,1166,1212],"static":[40,41,815,816],"super":1053,"true":[40,41,42,387,394,426,429,441,442,815,816,817,893,895,904,906,924,929,938,940,947,991,992,996,999,1001,1002,1003,1004,1005,1007,1019,1022,1025,1049,1050,1051,1052,1053,1097,1098,1105,1109,1110,1116,1117,1119,1120,1121,1122,1123,1124,1125,1127,1128,1135,1143,1148,1149,1150,1151,1154,1155,1156,1160,1183,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204],"try":[40,41,893,989,1053],"var":[40,41,1049,1050,1051,1212],"while":[40,41,42,1053],AND:[1027,1028,1116,1117],But:1212,For:[43,893,896,908,980,996,1002,1010,1031,1032,1166,1172,1173,1209,1212],Its:[1031,1036],NOT:[1027,1029],One:[40,41,893,921,966,1109,1111,1212],Ones:[1166,1174],Such:[893,913],That:1209,The:[15,16,17,18,19,40,41,42,43,776,801,815,816,817,826,827,833,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,859,860,861,862,863,866,867,871,872,873,878,879,880,883,892,893,896,900,901,902,905,906,909,910,911,912,914,915,918,919,923,926,929,931,932,939,942,943,944,946,947,950,952,954,956,958,961,962,965,966,968,969,970,971,972,975,976,977,978,979,980,983,991,994,995,996,998,999,1001,1003,1004,1005,1007,1010,1012,1014,1016,1018,1019,1022,1024,1031,1032,1034,1036,1039,1041,1042,1043,1044,1045,1047,1049,1050,1051,1052,1053,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1116,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1166,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1199,1201,1202,1203,1209,1212],There:[43,1166,1209],These:[43,1166],Used:[1097,1098,1105,1195,1196],Using:[1166,1167,1212],With:[40,41,1019,1022,1025,1116,1119,1120,1121,1122,1123,1124,1125,1166,1208,1212],__array__:[893,901],__call__:[1183,1194,1195,1196],__del__:1053,__dict__:[1053,1209],__enter__:1053,__exit__:1053,__getitem__:1053,__getstate__:1053,__init__:[40,41,42,43,59,60,385,386,817,818,825,826,827,828,829,830,831,832,867,868,869,870,996,997,1053,1057,1064,1160,1161,1164,1165,1166,1169,1170,1171,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1212],__iter__:1053,__len__:1053,__next__:1053,__pow__:43,__repr__:1053,_assign_vari:1208,_axi:1053,_base:[1097,1098,1105],_compute_node_da_ratio:1053,_compute_node_strs_da:1053,_concat_unify_arrai:1053,_counter:1053,_cur_framework:[43,1053],_da_direct:1053,_da_directions_flip:1053,_da_step_tim:1053,_da_tim:1053,_da_tune_count:1053,_data:[43,1053],_delta_da_dim_s:1053,_delta_sf:1053,_dict:1053,_dim_siz:1053,_first_da_tune_step:1053,_first_ns_tune_step:1053,_fn:1053,_forward:[1166,1208],_get_kalman_param:1212,_get_prior:1212,_get_some_model:1212,_handle_flat_arrays_in_out:43,_index:[1097,1098,1105],_input_queu:1053,_length:1053,_max_depth:1053,_max_node_dim_step_ratio:1053,_max_node_dim_step_s:1053,_max_split_factor_step_s:1053,_mean_unify_arrai:1053,_min_bas:[893,979,1152,1153,1197,1198],_min_denomin:[893,978],_min_node_dim_s:1053,_min_sf_tune_step:1053,_min_unit_node_tune_step:1053,_model:1212,_native_wrapp:43,_node_mapp:1053,_node_percent_mem:1053,_node_str:1053,_node_str_da_ratio:1053,_node_strs_da:1053,_node_strs_kei:1053,_node_strs_n:1053,_node_util:1053,_ns_step_tim:1053,_ns_time:1053,_ns_tune_count:1053,_num_nod:1053,_num_work:1053,_observed_config:1053,_output_queu:1053,_paramet:1208,_percent_mem_inc_per_sf:1053,_percent_mem_inc_per_unit_da_dim:1053,_percent_util_inc_per_unit_da_dim:1053,_ret_fn:1053,_safety_factor:1053,_save_dir:1053,_shift_da_split:1053,_shift_n:1053,_slice:1053,_step:[1199,1203],_sum_unify_arrai:1053,_timeout:1053,_tune:1053,_tune_da:1053,_tune_n:1053,_tune_step:1053,_unit_da_tune_count:1053,_unroll_step:1212,_with_node_mappig:1053,_worker:1053,_worker_class:1053,_worker_fn:1053,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,817,826,832,1053,1195,1196,1199,1203],abil:1166,abl:[40,41],about:[867,881,882],abov:[1109,1111],above_height:[40,41],abs:[258,387,497,610,893,1053],absolut:[40,41,893,894],abstractmethod:1053,accept:[15,1166],access:[40,41,1209],accord:[40,41,893,912,931,968,969,988,993],accordingli:[1116,1117],accur:[59,385,386,817,829,830,831,832,867,996,1160,1164,1174,1176,1177,1179,1180,1182],aco:[706,1031],acosh:[706,1031],across:[40,41,817,826,827,836,837,839,840,841,842,843,849,859,860,893,898,899,902,903,1053,1097,1101],activ:[1128,1129,1130,1131,1132,1133,1134,1166,1170,1171],actual:1209,adam:[996,998,999,1003,1166,1199,1201,1208],adam_step:996,adam_upd:996,adapt:[996,1004,1199,1202],add:[40,41,43,1053,1148,1149,1150,1151,1152,1153,1166,1197,1198,1209],add_fn_to_dict:1160,add_param:1160,added:[893,978,979,1205,1206],adding:[893,905],addit:[40,41,43,893,920,921,922,1152,1153,1183,1193],adher:43,adjac:[893,896],adopt:[893,913],affect:[893,896],affin:[1197,1198],after:[893,950,996,999,1000,1001,1003,1004,1005,1012,1013,1152,1153,1199,1200,1201,1202,1203,1204,1212],after_1:[893,912,993],after_n:[893,912,993],again:43,against:[40,41,1019,1022,1025,1116,1119,1120,1121,1122,1123,1124,1125],agnost:[1166,1208,1209],aim:1212,algebra:[435,1019],algorithm:[1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190,1212],align:[40,41,43,893,905],aliv:[817,851,853,857,893,933,959,963],all:[15,16,17,18,19,40,41,43,164,338,443,561,730,815,816,817,826,851,857,893,894,895,902,903,913,926,933,939,963,977,1049,1050,1051,1052,1053,1097,1098,1099,1105,1106,1109,1110,1113,1116,1119,1120,1121,1122,1123,1124,1125,1135,1145,1166,1209,1212],all_depth:[40,41],all_equ:893,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1097,all_tru:[40,41],alloc:[817,1053],allow:[893,951,952,953,1195,1196],allow_dupl:[893,953],alon:[817,856,866,1053,1166],along:[40,41,441,817,840,841,842,843,846,847,848,849,861,893,900,911,916,917,926,931,950,951,952,965,976,980,983,990,1019,1022,1025,1049,1050,1051,1052,1053,1109,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125],alongsid:[1208,1209],alpha:[1127,1129],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,817,1053],also:[40,41,43,893,896,996,999,1049,1050,1051,1052,1097,1098,1099,1105,1106,1135,1144,1183,1193,1208],altern:1208,alwai:[40,41,43,996,1002,1007],among:[40,41],amount:[817,863,1053,1166],angl:[1031,1032,1037],ani:[15,16,17,18,19,40,41,43,815,816,817,819,822,826,827,829,838,839,842,843,848,893,895,896,901,919,920,921,922,923,924,938,946,953,978,979,996,1000,1053,1097,1098,1101,1105,1106,1107,1108,1109,1113,1166,1172,1173,1195,1196,1208,1209,1212],anoth:[40,41,867,873,1166],another_backend:43,anyth:[43,1212],apart:43,api:[1166,1167],appear:[893,925],append:[40,41,1053],appli:[15,18,19,40,41,893,920,921,922,996,1003,1004,1019,1024,1027,1028,1029,1030,1049,1050,1051,1097,1101,1104,1106,1127,1128,1129,1130,1131,1132,1133,1134,1135,1144,1146,1147,1152,1153,1166,1169,1170,1171,1197,1198],applic:[1097,1101,1106,1135,1146,1147,1166,1212],approxim:[43,776,801,1127,1128],arang:[107,258,387,441,497,610,893,951,952],arbitrari:[40,41,817,846,847,849,1053],arc:[1031,1037],arcco:[1031,1032],arctan:[1031,1036],area:1166,arg:[15,16,17,40,41,59,63,817,826,839,843,849,861,893,920,921,922,969,1053,1154,1155,1156,1160,1172,1173,1195,1196],arg_nam:893,arg_stateful_idx:[1154,1155,1156,1160,1195,1196],argmax:[107,387,497,610,893],argmin:[107,387,497,610,893],args_clon:1053,args_dist:1053,args_to_ivi:[15,1166],args_to_n:[15,1166],args_uni:1053,argsort:[387,610,893],argument:[15,16,17,18,19,40,41,42,43,59,63,815,816,817,826,827,839,843,849,893,896,897,906,919,953,969,1031,1032,1053,1097,1101,1172,1173,1195,1196],aris:[1166,1212],arithmet:[43,1116,1120,1123,1125],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:441,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,107,258,387,441,497,610,801,817,835,836,837,840,841,842,843,846,847,848,849,851,853,857,861,862,867,871,877,881,882,884,885,893,894,895,896,898,899,900,902,903,904,905,907,908,909,910,911,912,914,915,916,917,920,921,922,923,925,926,927,928,929,930,931,932,933,936,938,939,940,941,942,943,944,946,947,948,949,950,951,952,954,955,956,957,959,960,961,962,963,965,966,967,968,969,974,976,977,980,981,982,983,985,986,987,988,990,991,992,993,994,995,996,998,999,1002,1003,1007,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1053,1097,1099,1106,1109,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1166,1167,1183,1191,1192,1194,1199,1203,1208,1209],arrang:[893,920],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43],array_builtin:[43,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814],array_equ:[258,610,893],array_lik:[441,893,901],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,893],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1166],arraywithgener:[22,1166],arraywithgradi:[24,1166],arraywithimag:[26,1166],arraywithlinalg:[28,1166],arraywithlog:[30,1166],arraywithmath:[32,1166],arraywithmeta:[34,1166],arraywithrandom:[36,1166],arraywithreduct:[38,1166],arriv:[40,41,42],articl:1166,arxiv:1166,as_arrai:[40,41,893,936,974],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[385,387,397,817,835,867,874,875,876,877],as_tensor:387,as_vari:[40,41],as_zero:[40,41],asarrai:[107,258,387,497,610,893],asin:[706,1031],asinh:[706,1031],aspect:[1012,1017],assert:[40,41,893,904,1053],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:893,associ:[43,1019,1026],assum:[1209,1212],astyp:[387,867],asynchron:[40,41,42],at_dev:[40,42,817,830,831],at_kei:[40,41],at_key_chain:[40,41],at_nod:1053,atan2:[706,1031],atan:[706,1031],atanh:[706,1031],attent:[1135,1146,1147,1183,1194],attribut:[0,6,40,41,893,962,995],audienc:[1166,1209],author:1166,avail:[40,41,817,852,854,855,864,893,921,1053],averag:[996,998,999,1003,1049,1050,1051,1116,1120],average_across_step:[1049,1050,1051],avoid:[817,1053,1209],axes:[40,41,387,422,435,436,817,861,893,898,899,912,925,926,982,988,993,1019,1022,1025,1053,1116,1117,1119,1120,1121,1122,1123,1124,1125],axes_length:[40,41,893,920,921,922],axi:[40,41,387,389,390,395,396,401,403,412,413,414,420,421,423,817,819,822,829,840,841,842,843,846,847,848,849,861,893,898,899,900,911,912,915,916,917,925,926,931,950,951,952,965,976,977,980,982,983,990,993,1019,1025,1053,1109,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1127,1132,1148,1150,1151],axis0:[40,41,893,982],axis1:[40,41,893,982],back:[1195,1196,1199,1203],backend:[15,17,19,40,41,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,817,852,855,864,867,873,883,892,893,941,945,996,999,1001,1003,1004,1005,1010,1053,1166,1167,1172,1173,1199,1200,1201,1202,1203,1204,1208,1209,1212],background:[1166,1209],backprop:1212,backward:[1116,1117,1208],band:[893,929],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,385,386,387,414,776,801,817,819,820,821,822,823,824,826,827,829,830,831,832,867,893,934,952,970,979,996,1053,1116,1118,1160,1164,1166,1169,1170,1171,1174,1176,1177,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1212],batch:[40,41,817,859,860,893,926,929,939,1012,1016,1019,1024,1049,1050,1051,1052,1053,1135,1144,1152,1153,1197,1198],batch_shap:[387,401,405,893,926,939,960,1012,1013,1014,1015,1016,1017,1018,1019,1026,1109,1110,1135,1145,1146,1147,1183,1192],batch_siz:[441,442,1053,1109,1110,1135,1136,1137,1138,1139,1140,1141,1142],bayesian:1212,becaus:[893,896],becom:[893,908,1031,1037,1212],been:[893,920,921,922,1109,1110],befor:[40,41,817,861,1049,1050,1051,1053,1097,1106,1116,1119,1120,1121,1122,1123,1124,1125,1135,1146,1147,1212],before_1:[893,912,993],before_n:[893,912,993],begin:[1097,1098,1105,1209],behaviour:1212,behind:[996,999,1001,1003,1004,1005,1166],being:[40,41,893,896,964,972,1053],belong:[40,41],below:[43,1166,1209,1212],below_depth:[40,41],benefit:1166,bernoul:[1135,1143,1183,1191],best:[893,953,1166],beta1:[996,998,999,1003,1199,1200,1201],beta2:[996,998,999,1003,1199,1200,1201],beta:[1152,1153],between:[40,41,42,893,896,1097,1101,1109,1111,1148,1150,1151,1199,1201],bia:[1135,1144,1145,1183,1184,1185,1186,1187,1188,1189,1190,1193],bias_initi:[1183,1184,1185,1186,1187,1188,1189,1190,1193],bilinear:[1012,1013],bilinear_resampl:[148,319,431,546,691,1012],bilinearli:[1012,1013],binari:[1148,1149],binary_cross_entropi:1148,bit:[867,878,1012,1014,1018,1166],bitwise_oper:[0,7,8],block:[1166,1209],bool:[15,18,19,40,41,42,387,392,815,816,817,835,848,852,856,861,864,866,867,877,893,895,902,903,916,919,923,924,929,936,938,946,947,953,974,976,990,991,992,996,999,1000,1001,1002,1003,1004,1005,1007,1019,1022,1025,1049,1050,1051,1052,1053,1097,1098,1099,1101,1105,1106,1109,1110,1116,1119,1120,1121,1122,1123,1124,1125,1127,1128,1135,1143,1172,1173,1183,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204],both:[43,893,915],bottom:1166,boundari:[40,41,1109,1113],branch:[815,816],broadcast:[40,41,43,776,801,893,905,923,955,956,957,965,1019,1022,1025,1031,1037,1041,1116,1117,1119,1120,1121,1122,1123,1124,1125],broadcast_to:[258,610,893],build:[1053,1166,1183,1194,1195,1196],build_mod:[1183,1194,1195,1196],builder:1166,built:[817,893,896,1053,1183,1194,1195,1196],builtin:43,builtin_ab:[213,776],builtin_add:[213,776],builtin_and:[213,776],builtin_bool:[213,776],builtin_contain:[213,776],builtin_deepcopi:[213,776],builtin_dir:[213,776],builtin_eq:[213,776],builtin_float:[213,776],builtin_floordiv:[213,776],builtin_g:[213,776],builtin_getattr:[213,776],builtin_getattribut:[213,776],builtin_getitem:[213,776],builtin_gt:[213,776],builtin_int:[213,776],builtin_invert:[213,776],builtin_l:[213,776],builtin_lt:[213,776],builtin_mul:[213,776],builtin_n:[213,776],builtin_neg:[213,776],builtin_or:[213,776],builtin_po:[213,776],builtin_pow:[43,213,776],builtin_radd:[213,776],builtin_rand:[213,776],builtin_rfloordiv:[213,776],builtin_rmul:[213,776],builtin_ror:[213,776],builtin_rpow:[213,776],builtin_rsub:[213,776],builtin_rtruediv:[213,776],builtin_rxor:[213,776],builtin_setitem:[213,776],builtin_some_op:43,builtin_sub:[213,776],builtin_truediv:[213,776],builtin_xor:[213,776],bypass:1209,cach:[817,833,893,906],cache_fn:893,calcul:[40,41,42,43,776,801,1031,1041],call:[43,817,861,893,964,972,989,996,1000,1053,1097,1098,1101,1105,1183,1194,1195,1196,1199,1203,1209,1212],callabl:[40,41,815,816,817,826,827,861,893,906,919,921,953,989,1049,1050,1051,1052,1053,1097,1101,1102,1103,1105,1106,1135,1146],can:[43,817,859,860,861,893,966,1012,1014,1053,1166,1208,1209,1212],cancel_join_thread:1053,captur:1166,cast:[40,41,107,258,387,497,610,867,893,911,1012,1014,1018],catch_except:[893,919],categori:43,ceil:[258,387,610,893,896],cell:[1135,1145,1183,1192],certain:[40,41,893,896,951,952],chain:[40,41,1049,1050,1051,1205,1206],chang:[817,893,966,1053,1097,1099,1106,1166,1208],channel:[893,929,1012,1014,1015,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193],check:[15,16,17,18,19,40,41,817,856,866,867,872,883,892,893,904,924,938,946,981,991,996,1002,1053,1097,1098,1105,1166,1209],check_nest:[1097,1105],check_shap:[40,41],check_submod_ret:[1195,1196],check_typ:[40,41],choic:[1166,1209],choleski:[695,1019],choos:[893,992,1031,1037,1166],choose_random_framework:59,chosen:[40,41,893,896,992],chunk:[817,859,860,861,1053],chunk_siz:[817,861,1053],circl:[1031,1032,1034],clark:1166,clear:[817,833,1053],clear_framework_stack:59,clear_mem_on_dev:[385,602,817],click:1166,clip:[40,41,258,387,610,893,909,910,955,957,1166],clip_matrix_norm:893,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,893],clipped_delta:1053,clone:[40,41,817,836,837,838,839,1053],clone_arrai:1053,clone_it:1053,clone_nest:1053,clonedit:1053,cloneditem:1053,clonednest:1053,close:[43,1012,1017,1031,1034,1053,1212],closest:[867,872],closest_valid_dtyp:867,code:[40,41,42,43,441,1166,1167,1208,1209],codebas:[817,859,860,1053,1166,1209,1212],collect:[15,40,41,385,387,426,431,435,438,439,441,776,815,817,867,893,996,1012,1019,1027,1031,1053,1097,1109,1116,1127,1135,1148,1152,1169,1183,1197,1199],color:[40,41,42,1210,1211],column:[893,939],combin:[40,41,42,1012,1017,1166,1212],combined_batch_s:1053,come:1209,command:1166,commit:1212,common:[40,41,1031,1037],common_key_chain:[40,41],commun:[1166,1209],compar:[40,41,893,895,902,903],comparison_oper:[0,9,10],compat:[43,776,801,893,923,966,1031,1041,1116,1117,1166,1212],compil:[258,387,610,1155,1156,1160,1166,1195,1196,1199,1200,1201,1202,1203,1204],compile_graph:[1154,1166,1195,1196,1199,1203],compile_on_next_step:[1195,1196,1199,1200,1201,1202,1203,1204],complet:[40,41,1053],complex:[1209,1212],compon:[893,915],comput:[40,41,817,861,893,909,910,916,917,923,954,996,998,999,1000,1001,1003,1004,1005,1007,1009,1012,1015,1019,1020,1021,1022,1023,1025,1027,1028,1029,1030,1031,1032,1034,1036,1037,1039,1042,1043,1044,1045,1047,1097,1101,1116,1118,1119,1120,1121,1122,1123,1124,1125,1135,1136,1137,1138,1139,1140,1141,1142,1144,1146,1148,1149,1150,1151],concat:[40,41,817,846,847,848,849,861,893,929,1053],concaten:[40,41,107,258,387,497,610,893,929,1053,1166],concatten:[40,41,817,846,847,848,849,861,1053],condit:[387,815,816,893,992,1097,1105],conditon:[1097,1105],config:[40,41,1053],config_list:1053,configur:[40,41],conjunct:1209,connect:[1160,1183,1193,1194],consid:[40,41,1019,1025,1208,1212],consist:[40,41,817,849,1053,1116,1118,1195,1196,1209],constant:[817,826,827,893,912,1053,1097,1101,1148,1149,1150,1151,1152,1153,1174,1175,1179,1182,1195,1196,1197,1198,1209],constant_kwarg:1053,constant_pad:[258,387,497,610,893],constitu:[40,41],construct:[893,983,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208],constructor:[40,41,42,893,897,1205,1206],consum:[817,1053],cont_feat_dim:[1135,1146],contaienr:[40,41],contain:[15,18,19,42,43,776,801,817,836,840,861,867,871,893,894,898,899,900,908,909,910,913,923,938,947,955,957,967,978,979,996,998,999,1001,1003,1004,1005,1031,1041,1049,1050,1051,1052,1053,1109,1110,1116,1119,1120,1121,1123,1125,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[387,610,893],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[387,893,958,1135,1146,1183,1194],context_dim:[1183,1194],contextmanag:[59,60],continu:[43,1053,1209],contract:[40,41,1116,1118],contribut:[1166,1167],contributor:1166,control:1166,conv1d:[179,351,456,751,1135,1166,1183],conv1d_transpos:[179,351,456,751,1135],conv1dtranspos:[1166,1183],conv2d:[179,351,456,572,751,1135,1166,1183],conv2d_transpos:[179,351,456,751,1135],conv2dtranspos:[1166,1183],conv3d:[179,351,456,572,751,1135,1166,1183],conv3d_transpos:[179,351,456,751,1135],conv3dtranspos:[1166,1183],convent:[40,41,1116,1118],conver:[817,833,844,856,863,866,1053],convers:[16,17,18,19,40,41,1053,1166],convert:[15,16,17,18,19,40,41,817,844,845,867,873,879,880,893,975,986,987,1012,1014,1018,1019,1026,1053,1097,1099,1106,1166,1173],convert_dtyp:867,convolut:[1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],cool:43,cooler:43,coordin:[893,956,1031,1032,1034,1037],copi:[40,41,387,392,441,893,914,1053,1097,1099],copy_arrai:[387,610,893],copy_nest:1097,core:[385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,824,826,827,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1166],correct:[43,1166,1209],correctli:[40,41,1019,1022,1025,1031,1037,1116,1119,1120,1121,1122,1123,1124,1125],correspond:[40,41,43,776,801,893,911,1109,1110],cos:[706,893,929,1031,1032,1047,1209],cosh:[706,1031],cosin:[1031,1032,1033,1039,1040],cost:[996,998,999,1001,1003,1004,1005,1049,1050,1051,1052],cost_fn:[1049,1052],could:1212,count:[40,41,1053,1116,1117,1122,1124,1164],cprint:1210,cpu:[40,41,817,854,856,862,863,866,893,896,901,931,932,939,951,952,960,961,962,968,969,994,995,1053,1109,1110,1111,1112,1113,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206,1208,1209],creat:[40,41,817,826,827,893,896,901,930,931,932,939,951,952,960,961,962,968,969,985,994,995,996,1009,1053,1109,1110,1111,1112,1113,1166,1172,1173,1174,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208,1212],create_if_abs:[40,41],create_vari:1174,creation:[40,41,42],crop:[1012,1016],crop_siz:[1012,1016],cross:[258,610,893,1148,1149,1150,1151],cross_entropi:1148,cuda:[40,41,817,826,845,862,893,896,901,931,932,939,951,952,960,961,962,968,969,994,995,1053,1109,1110,1111,1112,1113,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206],cumprod:[107,258,387,610,893],cumsum:[610,893],cumul:[893,916,917],current:[40,41,42,43,817,826,850,851,853,857,867,873,883,892,893,918,933,941,945,959,963,1053,1097,1098,1105,1166,1212],current_framework:59,current_framework_str:[387,610,893,1053],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1160,d_in:[1135,1136,1137,1138,1139,1140,1141],d_out:[1135,1136,1137,1138,1139,1140,1141],da_can_termin:1053,da_dim_s:[817,1053],da_direct:1053,da_tune_step:[817,1053],dai:1212,daniel:1166,data:[40,41,42,43,776,801,817,819,820,821,822,823,824,829,830,831,845,867,871,872,873,877,878,879,880,881,882,883,884,885,892,893,896,901,923,930,939,946,947,961,962,966,977,981,994,995,996,1002,1010,1031,1041,1053,1135,1144,1166],data_format:[1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],dataset:[40,41],datatyp:[40,41,867,872,884,885],dcdw:[996,998,999,1001,1003,1004],debug_info:1160,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[996,1003,1004,1199,1201,1202],decay_lambda:[996,1003,1004,1199,1201,1202],decid:[40,41,1212],decompos:[1019,1020],decomposit:[1019,1020,1024],decor:43,decrement:[893,942],dedic:[996,1010,1172,1173],deep:[40,41,1166],deep_copi:[40,41],deeper:[817,839,843,849,1053,1097,1106,1166],deepli:[1097,1099],def:[43,60,818,825,828,868,869,870,997,1053,1057,1064,1161,1165,1166,1175,1178,1181,1208,1209,1212],default_dev:43,default_devic:817,default_dtyp:[43,867],default_float_dtyp:867,default_int_dtyp:867,default_key_color:[40,41,42],default_nod:1053,default_rng:441,default_v:[893,919],defaultdevic:[817,818],defaultdtyp:[867,868],defaultfloatdtyp:[867,869],defaultintdtyp:[867,870],defer:43,defin:[43,893,915,960,962,995,1109,1111],degre:[1031,1039,1045,1047],del:1053,delta:[996,998,1053,1160],delta_dim_s:1053,delta_percent_mem:1053,delta_sf:1053,delta_util:1053,demo:1166,denomin:[893,928,935,971,978,979,1152,1153,1197,1198],dens:[1183,1193],depend:[43,776,801,893,992,1019,1024,1166],depth:[40,41,387,415,817,839,843,849,893,937,960,1053,1097,1106,1160,1164,1195,1196],depth_cutoff:[40,41],depthwis:[1135,1142,1183,1190],depthwise_conv2d:[179,351,456,572,751,1135],depthwiseconv2d:[1166,1183],deriv:[996,998,999,1001,1003,1004,1005,1097,1099,1106,1166,1195,1199,1203,1205],descend:[1019,1024],descent:[996,1001,1199,1204],describ:[40,41,1116,1118],design:[1166,1167],desir:[40,41,817,862,867,871,893,896,901,939,940,961,962,994,995,1012,1017,1053,1116,1119,1120,1121,1123,1125],desired_aspect_ratio:[431,434,1012,1017],desired_percent_increas:1053,detail:1212,detect:[40,41,1097,1098,1105],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,776,801,817,852,854,855,864,867,871,872,878,883,884,885,892,893,895,896,901,902,903,938,941,945,946,947,981,991,996,1002,1031,1041,1049,1050,1051,1052,1053,1116,1117,1135,1146],dev:[40,41,42,43,100,252,385,387,388,391,392,403,404,405,413,414,415,416,417,418,419,424,425,441,442,490,602,817,820,821,823,824,826,827,830,831,833,834,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,853,856,857,858,859,860,861,862,863,866,893,896,901,931,932,939,951,952,960,961,962,968,969,994,995,996,1011,1109,1110,1111,1112,1113,1172,1173,1174,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206],dev_clon:[40,41,817],dev_clone_arrai:817,dev_clone_it:817,dev_clone_nest:817,dev_dist:[40,41,817],dev_dist_arrai:817,dev_dist_it:817,dev_dist_nest:817,dev_from_str:[43,100,252,385,490,602,817],dev_mapp:817,dev_str:[40,41],dev_to_str:[100,252,385,490,602,817],dev_unifi:817,dev_unify_arrai:817,dev_unify_it:817,dev_unify_nest:817,dev_util:817,devclonedit:817,devcloneditem:817,devclonednest:817,devdistit:817,devdistitem:817,devdistnest:817,develop:[1166,1209,1212],deviat:[40,41,1109,1112,1116,1123,1152,1153,1197,1198],devic:[21,40,41,43,386,387,402,819,820,821,822,823,824,826,827,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,893,896,901,930,931,932,939,951,952,960,961,962,968,969,994,995,996,1011,1109,1110,1111,1112,1113,1166,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206],devmanag:[817,825],devmapp:[817,827],devmappermultiproc:817,diag:[1019,1024],diagon:[893,939],dict:[15,16,17,18,19,40,41,42,817,819,822,826,827,829,839,840,841,842,843,893,920,921,922,953,1049,1050,1051,1053,1097,1099,1100,1101,1104,1106,1172,1173],dict_in:[40,41,42],dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,817,836,837,840,841,1053,1135,1144,1166,1209,1212],differenti:[1166,1209],dilat:[1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],dim:[40,41,43,893,960,1012,1013,1017,1019,1024,1053,1183,1194],dim_siz:[40,41,817,1053],dimens:[40,41,42,817,848,893,905,911,915,920,921,922,925,929,936,950,960,965,966,976,977,980,988,990,1012,1016,1019,1022,1024,1025,1049,1050,1051,1052,1053,1109,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1132,1135,1136,1137,1138,1139,1140,1141,1142,1145,1148,1150,1151,1183,1184,1185,1186,1187,1188,1189,1190,1193,1194],dimension:[40,41,441,893,976,977,1019,1024],direct:1053,directli:[43,1097,1106,1209,1212],directori:[893,973,984],discret:[1148,1150],disk:[40,41,1012,1014],distanc:[893,896],distribut:[40,41,817,836,840,841,842,843,1053,1109,1110,1111,1112,1113,1135,1143,1183,1191,1195,1196],distribute_nest:1053,distributedarrai:[40,41],distrubt:[1148,1150],dive:[1166,1209],divid:[40,41,893,976,978,1031],dividend:[1031,1041],divis:[893,928,935,971,978,979,996,998,999,1003,1031,1041,1199,1200,1201],divisor:[996,998,999,1003,1031,1041,1199,1200,1201],doc:1166,docstr:43,doe:[40,41,43,893,896,976,1208],doesn:1166,domain:[1031,1032],don:1166,door:1212,dot:[1019,1021,1135,1146,1147,1183,1194],down:1208,downscal:[893,909,910],drag:[1166,1212],draw:[1109,1110,1112,1113],drawn:[1109,1110,1111,1112,1113],drop:[1166,1212],dropout:[1135,1166,1183,1194],dropout_r:[1183,1194],ds_tune_step:817,dtype:[40,41,43,107,258,387,388,391,392,393,402,405,416,417,424,425,497,610,871,872,873,874,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,896,901,930,939,960,961,962,994,995],dtype_bit:[107,258,387,497,610,867],dtype_from_str:[43,107,258,387,497,610,867],dtype_in:[387,398,399,400,867,873,878,879,880,883,884,885,892],dtype_to_str:[107,258,387,497,610,867],duplic:[40,41],dure:[40,41,43,815,816,893,989,996,998,999,1003,1049,1050,1051,1052,1195,1196,1199,1200,1201,1203],dynam:[387,394,815,816],each:[40,41,42,43,776,801,817,826,827,836,837,838,839,840,841,842,848,860,861,893,894,895,900,912,923,947,965,976,980,983,993,996,999,1001,1003,1004,1005,1012,1015,1019,1024,1031,1034,1041,1043,1044,1053,1097,1101,1109,1110,1116,1118,1135,1136,1137,1138,1139,1140,1141,1142,1143,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1194,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1209],eager:1209,easi:1212,easili:1166,econom:1212,ecosystem:1166,edg:[893,908,912,993],effect:[996,1005],effective_grad:[996,1005],effici:1212,einop:[40,41,893,920,921,922],einops_rearrang:[40,41,893],einops_reduc:[40,41,893],einops_repeat:[40,41,893],einstein:[40,41,1116,1118],einsum:[40,41,164,338,443,561,730,1116],either:[40,41,893,919,953,956,958,1049,1050,1051,1052,1053,1183,1194,1195,1196,1209],eleg:1053,element:[40,41,43,441,776,801,817,838,842,848,867,871,893,894,896,898,899,900,902,903,907,908,909,910,916,917,923,926,927,928,939,940,947,955,957,965,967,976,987,992,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1053,1116,1117,1118,1120,1122,1124,1127,1128,1129,1130,1131,1132,1133,1134,1135,1143,1183,1191],elementwis:[40,41],elementwise_affin:[1197,1198],elemtn:[1109,1110],elif:1053,els:[893,904,919,924,1053],elsewher:[893,992],emphas:1166,empti:[40,41,1053],enabl:[40,41,42,1166],encod:[893,929,1012,1014],end:[893,896,1166,1209],entir:[40,41,817,861,1053,1116,1117,1166,1183,1192],entri:[40,41,893,926,951,952,976,977],entropi:[1148,1149,1150,1151],enumer:1053,environ:1166,epsilon:[996,998,999,1003,1148,1149,1150,1151,1152,1153,1197,1198,1199,1200,1201],equal:[40,41,387,497,610,893,895,902,903,912,947,976,993,1031,1039,1045,1047,1109,1113],equality_matrix:[893,895],equat:[40,41,1116,1118],equival:[893,896,1031,1047],erf:[439,706,1031],error:[40,41,817,893,977,1031,1042,1053,1127,1128,1195,1196,1199,1203],essenti:43,etc:[40,41,43,817,862,893,896,901,931,932,939,951,952,960,961,962,968,969,994,995,1053,1109,1110,1111,1112,1113,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206,1212],evalu:[40,41,893,956,1097,1098,1105,1116,1117],even:1212,evenli:[40,41,893,896,951,952,976],everi:[893,895,1212],exact:[40,41],exampl:[43,815,816,893,908,980,1166,1208,1209,1212],example_input:[387,394,815,816],exc_tb:1053,exc_typ:1053,exc_val:1053,exce:[893,957],except:[40,41,44,47,893,896,904,911,919,989,1053,1116,1117],excess_s:1053,excit:[1166,1209],exclud:[59,61,893,896,1109,1113],exclus:[40,41,387,396,410,426,428,893,916,946,996,1002,1109,1111],execut:[893,989,1209],execute_with_gradi:[145,314,426,541,685,996,1166,1208],exist:[40,41,893,919,1053,1166,1199,1203,1212],exp:[706,1031],expand:[40,41,893,925,929],expand_dim:[40,41,258,610,893,1053],expect:[893,897],explain:1209,explicitli:[1183,1192,1194,1195,1196,1209],expon:[43,776,801,893,979],exponenti:[43,776,801,1031,1042,1043],expos:[893,901,913],express:[893,956],exsit:[40,41],extra:[40,41,42,996,1000],eye:[1019,1021],fabian:1166,fabio:1166,factor:[817,826,859,860,861,996,998,999,1003,1004,1019,1024,1053,1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190,1199,1200,1201,1202],falck:1166,fall:[1195,1196,1199,1203],fallback_to_non_compil:[1195,1196,1199,1203],fals:[15,18,19,40,41,42,59,66,67,68,69,70,385,387,396,397,410,420,423,426,427,428,435,436,817,835,848,856,861,866,867,874,875,876,877,893,895,916,919,924,929,936,946,947,953,974,976,990,992,996,999,1000,1001,1002,1003,1004,1005,1019,1022,1025,1049,1050,1051,1052,1053,1097,1098,1099,1101,1105,1106,1116,1117,1119,1120,1121,1122,1123,1124,1125,1154,1155,1156,1160,1164,1172,1173,1195,1196,1199,1200,1201,1202,1203,1204],fan_in:1174,fan_mod:1174,fan_out:1174,far:[1097,1098,1105,1208],faster:[815,816],favourit:[1166,1208],feasibl:1212,feat_dim:[1135,1146,1147],fed:[817,861,1053],feed:[817,861,1053],field:1212,file:[40,41,43,893,973,984,1195,1196],filepath:[40,41],fill:[40,41,893,930,961,994,1109,1111],fill_valu:[387,402,893,930],filter:[1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190,1212],filter_s:[1183,1184,1185],filter_shap:[1183,1186,1187,1188,1189,1190],find:[40,41,1212],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:867,finish:[1166,1212],finit:[893,947],first:[40,41,441,815,816,817,848,893,902,911,915,923,951,952,980,982,996,1000,1019,1024,1049,1050,1051,1052,1053,1097,1098,1105,1109,1115,1116,1122,1124,1183,1194,1195,1196,1199,1203,1209,1212],firstlayersiren:[1166,1174],firstli:[1209,1212],fist:[817,861,1053],fit:[40,41,385,387,426,431,435,438,439,441,893,965,1012,1017],fkt:1212,flag:[40,41,996,1002],flat:[40,41,43,893,965,968],flat_list:[40,41],flatten:[40,41,893,929,965,1019,1025,1116,1119,1120,1121,1123,1125],flatten_key_chain:[40,41,1195,1196],flexibl:[1166,1209],flip:[40,41,107,258,387,497,610,893],float32:[387,405,867,871,879,880,893,896,901,939,961,962,994,995],float_dtyp:[867,875,887],float_img_to_uint8_img:1012,floor:[258,387,610,893,928,1053],floormod:[258,387,610,893],fluid:1212,fname:[1154,1156,1160,1195,1196],folder:[43,1166],follow:[40,41,43,817,861,893,942,943,944,978,979,996,999,1001,1003,1004,1005,1053,1097,1101,1106,1135,1146,1147,1166,1183,1193,1199,1203],fomaml_step:1049,forget:[996,998,999,1003,1199,1200,1201],fork:[893,958],forkserv:[893,958,1053],form:[15,16,17,18,19,40,41,893,901,996,999,1001,1003,1004,1005,1097,1099,1106,1135],format:[40,41,43,817,835,867,871,873,877,893,896,901,939,961,962,994,995,1053,1116,1118,1166,1208,1209],format_fn:[40,41],format_key_chain:[40,41],forward:[1195,1196,1199,1203,1208],found:[40,41,42],fourier:[893,929],fourier_encod:893,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,153,154,158,159,160,161,162,163,165,166,167,168,169,170,171,172,175,177,178,180,181,182,183,184,185,186,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,320,321,322,324,325,326,327,329,330,331,334,335,336,337,339,340,341,342,343,344,345,346,347,350,352,353,354,355,356,357,358,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,429,430,432,433,434,436,437,440,442,444,445,446,447,448,449,450,451,454,455,457,458,459,460,461,462,463,491,492,493,494,495,496,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,542,543,544,545,547,548,549,551,552,553,557,558,559,560,562,563,564,565,566,567,568,569,573,574,575,603,604,605,606,607,608,609,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,686,687,688,689,690,692,693,694,696,697,698,699,700,701,703,704,705,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,724,725,726,727,728,729,731,732,733,734,735,736,737,738,741,742,743,744,745,746,747,749,750,752,753,754,755,756,757,758,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1153,1155,1156,1158,1159,1161,1165,1166,1170,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1211,1212],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1053,framewrk:[893,958],frequenc:[893,929],from:[40,41,42,43,817,826,827,861,867,873,893,919,926,931,932,939,966,977,985,992,996,999,1003,1012,1016,1049,1050,1051,1052,1053,1097,1099,1106,1109,1110,1111,1112,1113,1116,1117,1122,1124,1135,1143,1146,1166,1172,1173,1183,1191,1194,1199,1203,1208,1209],from_cal:[1195,1196],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[107,258,387,497,610,893,1166],full_matric:[1019,1024],fulli:[1166,1183,1193,1194,1208],func:[40,41,387,394,426,427,815,816,817,861,893,906,996,1000,1053],further:1212,furthermor:1212,futur:1212,gain:1174,gamma:[1152,1153],gather:[40,41,107,258,387,497,610,893,932],gather_nd:[40,41,107,258,387,497,610,893],gauss:[1031,1042],gaussian:[1127,1128],geglu:[1166,1169],gelu:[349,453,740,1127,1166,1169],gener:[23,40,41,43,385,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,441,815,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,1002,1109,1111,1113,1114,1166,1199,1203],geometr:[893,929],get:[40,41,817,826,827,835,850,851,856,860,863,866,867,877,878,881,882,893,897,933,934,935,964,1053,1164,1166,1183,1192,1212],get_all_arrays_in_memori:893,get_all_arrays_on_dev:817,get_framework:59,get_initial_st:[1183,1192],get_min_bas:893,get_min_denomin:893,get_mod_kei:[1195,1196],get_num_dim:[387,610,893],get_param:1160,get_param_recurs:1160,get_referrers_recurs:893,getfullargspec:1053,gist:1166,give:[893,900,966,1209],given:[40,41,43,817,850,856,859,860,861,863,866,867,871,893,896,900,901,908,916,917,926,932,951,952,961,962,965,968,969,976,983,988,990,994,995,996,998,999,1001,1003,1004,1005,1019,1021,1026,1031,1032,1053,1097,1102,1103,1109,1112,1113,1115,1116,1120,1122,1123,1124,1125,1135,1136,1137,1138,1139,1140,1141,1142,1172,1173,1212],global:[40,41,42,817,826,827,834,859,860,861,867,874,875,876,893,918,934,935,964,970,971,972,978,979,996,1011,1053,1152,1153,1158,1159,1166,1197,1198],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1166,1174,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193],got:1166,gpu:[817,852,855,1053],gpu_is_avail:[385,817,1053],grad:[1166,1199,1203,1208],gradient:[25,40,41,427,428,429,430,817,861,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1015,1049,1050,1051,1052,1166,1199,1200,1201,1202,1203,1204,1208,1212],gradient_descent_upd:[996,1049,1050,1051,1052],gradient_imag:[148,319,431,546,691,1012],gradienttrack:[996,997],graph:[996,999,1001,1003,1004,1005,1154,1155,1156,1161,1166,1195,1196],graph_compil:[1154,1155,1156,1157,1158,1159,1160,1164],greater:[40,41,893,896,927,977,1109,1113],green:[40,41,42,1210,1211],grid:[893,956],group:[1012,1017],guid:[1166,1167,1212],gym:1166,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1212,half:[893,896,1053,1109,1113],hand:1166,handl:[40,41,42,43,815,816,817,833,835,844,845,856,863,866,996,999,1001,1003,1004,1005,1053,1199,1200,1201,1202,1203,1204],has:[40,41,893,980,1031,1036],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,893],hasattr:1053,have:[40,41,43,776,801,893,911,915,920,921,922,923,930,947,980,996,1002,1010,1019,1024,1031,1041,1053,1166,1208,1209],hdf5:[40,41,1195,1196],head:[1135,1146,1183,1194],head_dim:[1183,1194],height:[1012,1017],height_cutoff:[40,41],help:[59,385,386,817,829,830,831,832,867,996,1160,1164,1166,1174,1176,1177,1179,1180,1182],helper:1166,here:[43,1166],hidden:[1135,1145,1183,1192],hierarch:[893,913],hierarchi:[40,41],high:[40,41,441,1109,1111,1113],higher:[996,999,1001,1003,1004,1005,1019,1024],highest:[1109,1111],highest_util:1053,highest_util_nod:1053,highli:1166,highlight:1212,highlight_subgraph:[1154,1156,1160],hint:43,hkt:1212,hold:[867,871,893,896,901,968,969],host:1166,hot:[893,960],how:[1166,1183,1194,1195,1196,1209,1212],howev:[43,1209],http:1212,hyperbol:[1031,1033,1035,1038,1040,1046,1048,1127,1134],hypothet:1212,icon:1166,idea:1166,ident:[40,41,43,107,258,387,497,610,893],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],if_exist:[40,41],ignor:[40,41,1199,1203],ignore_key_error:[40,41],ignore_miss:[1199,1203],ignore_non:[40,41],iinfo:867,imag:[27,432,433,434,893,950,1013,1014,1015,1016,1017,1018,1135,1136,1137,1138,1139,1141,1142,1166,1212],image_dim:[1012,1016],imkkhk:1212,immedi:[1166,1209,1212],implement:[43,776,801,1166,1209,1212],in_featur:[1135,1144],includ:[40,41,893,896,938,978,979,991,1097,1098,1109,1113,1116,1117,1183,1193,1194,1197,1198,1208],include_deriv:[1097,1099,1106],include_empti:[40,41],include_gener:[1154,1155,1156,1160,1195,1196],include_inf:[40,41,893,938,991],include_nest:[1097,1098],include_self:[40,41],inclus:[1109,1111],incom:[1135,1144],increas:[817,839,843,849,893,912,925,993,1053,1097,1106],increasingli:1212,increment:[893,943,1053],increment_param_count:1160,inde:1166,indent:[40,41,42],independ:[1109,1110],index:[40,41,387,441,893,898,899,931,932,956,977,980,1097,1100,1102,1103,1104,1107],index_nest:1097,indic:[40,41,387,403,404,415,418,419,893,898,899,900,931,932,940,960,968,969,1097,1098,1100,1102,1103,1104,1105,1107,1108,1109,1110,1127,1132,1135,1136,1137,1138,1139,1140,1141,1142,1152,1153,1183,1184,1185,1186,1187,1188,1189,1190,1195,1196],indices_wher:[107,258,387,610,893],inevit:1212,inf:[40,41,893,938,948,991,1031,1036],infer:[815,816,893,926,936,939,966,974,1012,1016,1209,1212],infin:[893,947,948],inform:[867,881,882,996,1007],init_c:[1135,1145],init_h:[1135,1145],init_on_first_step:[1199,1203],initi:[40,41,42,59,385,386,817,829,830,831,832,867,996,1053,1135,1145,1160,1164,1166,1176,1177,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1199,1203],initialz:[1195,1196],inner:[1049,1050,1051,1052],inner_batch_fn:[1049,1050,1051],inner_batch_shap:[1135,1144],inner_cost_fn:[1049,1050,1051],inner_grad_step:[1049,1050,1051,1052],inner_learning_r:[1049,1050,1051,1052],inner_optimization_step:[1049,1050,1051,1052],inner_v:[1049,1050,1051],inp:1053,inplac:[40,41,893,904,941,945,981,996,999,1001,1003,1004,1005,1172,1173,1199,1200,1201,1202,1203,1204],inplace_arrays_support:[387,893],inplace_decr:[107,258,387,497,610,893],inplace_incr:[107,258,387,497,610,893],inplace_oper:[0,11,12],inplace_upd:[40,41,107,258,387,497,610,893,1172,1173],inplace_variables_support:[387,893],input:[15,18,19,40,41,42,43,815,816,817,826,827,834,835,836,839,840,843,849,861,862,867,871,872,874,875,876,877,878,884,885,893,894,895,898,899,900,902,903,904,905,907,908,909,910,911,912,914,916,917,919,920,921,922,923,924,925,926,927,928,929,936,938,939,940,942,943,944,946,947,948,949,950,954,955,956,957,965,967,974,975,977,980,981,982,983,985,986,987,988,990,991,993,996,1000,1002,1007,1011,1012,1013,1014,1015,1016,1018,1019,1022,1024,1025,1027,1028,1029,1030,1031,1033,1035,1036,1038,1039,1040,1041,1045,1046,1047,1048,1049,1050,1051,1052,1053,1109,1110,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1152,1153,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1197,1198,1209],input_ax:[817,861,1053],input_channel:[1183,1184,1185,1186,1187,1188,1189,1192,1193],input_queu:1053,inputs_split:1053,insert:[893,925],insid:43,inspect:1053,inspir:1212,instal:1166,instanc:[15,16,17,18,19,40,41,43,441,776,801,817,826,1053,1172,1173,1205,1206],instead:[40,41,441,1116,1119,1120,1121,1122,1123,1124,1125,1212],int64:[867,871,893,896,901,939,961,962,994,995],int_dtyp:[867,876,888],integ:[40,41,441,867,882,885,893,896,907,927,967,976,1019,1025,1109,1111,1114,1116,1117],integr:1166,inter:1166,interchang:[40,41,893,982],interest:1166,interfac:[893,901,1209],intermedi:[40,41],intern:[40,41,817,996,1010,1053,1097,1098,1105,1106,1174,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1205,1206],interpol:[893,950],intersect:[1031,1032],interv:[40,41,893,896,908,951,952,1031,1034,1109,1113,1116,1117],introduc:1212,inv:[695,1019,1212],invalid:[1116,1117],invalid_dtyp:867,invers:[1019,1021,1023,1031,1032,1033,1034,1035,1036,1038,1212],invert:[1019,1021,1023],invest:1212,invoc:[815,816],irrespect:1166,is_al:1053,is_arrai:[107,258,387,497,610,893,1053],is_float_dtyp:867,is_int_dtyp:867,is_mean:1053,is_sum:1053,is_var:[1160,1164],is_vari:[145,314,426,541,685,996],isfinit:[107,258,387,497,610,893],isinf:[258,497,610,893],isinst:1053,isnan:[258,497,610,893],isnumer:1053,item:[15,19,40,41,776,788,789,817,826,827,829,836,838,840,842,848,867,874,893,913,937,978,979,1053,1097,1101,1102,1103,1106,1107,1108,1166,1195,1196,1208],iter:[15,16,17,18,19,40,41,42,815,816,817,820,821,823,824,826,827,830,831,838,840,841,842,843,848,861,893,895,905,911,912,926,939,956,961,965,966,969,974,976,980,983,988,993,994,1053,1097,1098,1099,1101,1105,1106],iterbal:[817,838,842,848,1053],its:[441,817,861,893,900,939,966,982,988,1053,1166],itself:[43,1097,1106],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,824,826,827,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1164,1166,1167,1169,1170,1171,1172,1173,1174,1176,1177,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1210,1211],ivy_backend:[40,41],ivy_bay:1212,ivyfcmodel:1208,ivyh:[40,41,42],ivymodul:[176,748],jame:1166,jax:[996,1002,1166,1212],jax_concat:1166,jnp:1166,join:[40,41,893,911,980,1053],journal:1166,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[1166,1183,1192,1212],kaimingnorm:[1174,1178],kalman:1212,kalman_filt:1212,kalman_filter_step:1212,kalman_filter_upd:1212,keep:[40,41,817,862,893,990,1053,1166,1212],keep_inner_v:[1049,1050,1051],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1049,1050,1051],keepdim:[40,41,387,423,435,436,893,990,1019,1022,1025,1116,1117,1119,1120,1121,1122,1123,1124,1125],kei:[15,16,17,40,41,42,776,781,817,829,893,913,1049,1050,1051,1053,1097,1100,1104,1135,1146,1147,1166,1172,1173,1183,1194,1199,1203],kept:[40,41,42,1049,1050,1051],kera:1212,kernel:[1135,1145],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,817,826,827,839,843,849,893,897,920,921,922,953,1053,1097,1101,1195,1196],keyword_color_dict:[40,41,42],kind:[867,881,882,1212],kwarg:[15,16,17,40,41,42,59,63,817,826,839,843,849,893,953,1053,1154,1155,1156,1160,1172,1173,1195,1196],kwarg_stateful_idx:[1154,1155,1156,1160,1195,1196],kwargs_clon:1053,kwargs_dist:1053,kwargs_uni:1053,label:[1148,1149,1150,1151],lamb:[996,1003,1166,1199],lamb_upd:996,lambda:[1053,1199,1202,1204,1208],lar:[996,1003,1004,1166,1199],larger:[893,908],largest:[40,41,893,898,927],lars_upd:996,last:[40,41,893,896,915,950,976,980,1019,1022,1024,1116,1117,1122,1124,1127,1132,1135,1145,1183,1193],later:[40,41,893,906],latest:[1183,1192],layer:[996,999,1001,1003,1005,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1152,1153,1166,1174,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206,1212],layer_norm:1152,layernorm:[1166,1197],layerwis:[996,1004,1199,1202],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1097,1098,1105],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1127,1128,1129],leaky_relu:[740,1127],learn:[996,999,1001,1003,1004,1005,1049,1050,1051,1052,1109,1115,1166,1199,1200,1201,1202,1203,1204,1209,1212],learnabl:[1152,1153,1197,1198],leav:[15,18,19,40,41,1097,1098,1099,1105,1106],left:[40,41,1019,1022,1025,1116,1119,1120,1121,1122,1123,1124,1125,1166],leftmost:[40,41],len:1053,length:[40,41,42,893,896,966,977,988],lenton2021ivi:1166,lenton:1166,less:[40,41,893,907,1053,1109,1113],less_util_node_str:1053,let:[1209,1212],level:1166,librari:[1166,1208,1212],lightweight:1166,like:[43,996,1002,1109,1113,1166,1208,1209,1212],limit:[40,41,42,867,881,882,893,908,909,910],linalg:[29,436,437,1020,1021,1022,1023,1024,1025,1026,1166],linear0:[1166,1208],linear1:1166,linear2:1208,linear:[435,893,929,950,1019,1127,1128,1129,1130,1135,1143,1166,1183,1184,1185,1186,1187,1188,1189,1190,1208],linear_resampl:[107,258,387,497,610,893],linearli:[893,929],link:1166,linspac:[107,258,387,497,610,893,896],list:[15,18,19,40,41,817,826,827,836,837,839,840,841,843,846,847,861,893,896,901,903,956,975,976,985,990,1049,1050,1051,1053,1097,1098,1099,1101,1105,1106,1135,1136,1137,1138,1139,1140,1141,1142,1166,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190],list_join:[40,41,42],list_stack:[40,41],littl:1209,load:[40,41],loaded_kwarg:1053,loader:1166,local_set:[893,937],locat:[43,893,948,949,1109,1110],log:[706,893,952,1031,1053,1148,1149,1150,1151,1166],log_all_op:1160,log_global_inference_abs_tim:[1157,1166],log_global_inference_rel_tim:[1157,1166],logarithm:[1031,1044],logic:[31,1028,1029,1030,1116,1117,1166],logical_and:[328,702,1027],logical_not:[328,702,1027],logical_or:[328,702,1027],logit:[1148,1151],logspac:[107,258,387,497,610,893],look:[43,1209,1212],loop:[1049,1050,1051,1052],loss:[1149,1150,1151,1166,1208],loss_fn:[1166,1208],lot:1209,low:[40,41,441,1109,1111,1113],lower:[40,41,893,955,1109,1113],lower_depth:[1195,1196],lowest:[15,18,19,40,41,1097,1106,1109,1111],lstm:[1135,1145,1166,1183],lstm_updat:1135,machin:[867,881,882,1109,1115,1166,1209,1212],mai:[893,896,919,923,1166,1209,1212],main:[893,939,1166],mainli:1166,make:[43,441,817,1053,1166,1209],maml:[1049,1050,1051],maml_step:1049,manag:[817,1053],mani:[40,41,43,893,976,1166],manner:[15,18,19,40,41,43,1097,1106],manual:[1097,1098,1105,1212],map:[40,41,42,817,826,893,948,949,1053,1097,1102,1103,1106,1183,1194,1208],map_cont:[40,41],map_nest_at_index:1097,map_nest_at_indic:1097,map_sequ:[40,41],mapper:[817,826,827,1053],mask:[1135,1146,1147],match:[40,41,893,953],match_kwarg:893,math:[33,440,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1053,1166],mathbb:[1019,1026],mathbf:[1019,1026],matmul:[43,258,387,497,610,893,1212],matplotlib:1209,matric:[1135,1144],matrix:[40,41,893,895,909,954,1019,1020,1021,1022,1023,1026,1135,1144,1183,1193],matrix_norm:[40,41,152,323,435,550,695,1019],matter:1166,max:[40,41,893,909,910,921,955,968,969,1053,1116,1119,1199,1201],max_batch_s:[40,41],max_chunk_s:[817,861,1053],max_depth:[40,41,817,821,824,831,839,843,849,893,937,1053,1097,1106],max_dev_dim_step_ratio:817,max_freq:[893,929],max_length:[40,41],max_node_dim_step_ratio:1053,max_norm:[40,41,893,909,910],max_split_factor_step_s:[817,1053],max_trust_ratio:[996,1003,1199,1201],maxim:[1166,1209,1212],maximis:1166,maximum:[40,41,42,610,817,839,843,849,861,893,898,908,909,910,929,996,1003,1053,1097,1106,1116,1119],mayb:[15,18,19],mdi:1053,mean:[40,41,441,817,846,847,848,849,861,893,921,1049,1050,1051,1052,1053,1097,1101,1109,1112,1116,1120,1123,1125,1174,1208,1212],measur:[1135,1146,1183,1194],mech:1166,mechan:[1166,1212],medic:1212,memori:[817,833,856,861,863,866,1053,1135,1145,1166],meshgrid:[258,387,610,893],messag:[1210,1211],meta:[35,1050,1051,1052,1166],method:[40,41,42,43,441,893,901,913,956,968,969,996,1003,1004,1053,1097,1098,1105,1106,1166,1183,1194,1195,1196,1209],might:[893,919,1212],min:[40,41,893,921,957,968,969,978,1053,1116,1121],min_bas:[893,979],min_denomin:[893,978],min_dev_dim_s:817,min_node_dim_s:1053,min_sf_tune_step:[817,1053],min_unit_dev_tune_step:817,min_unit_node_tune_step:1053,mind:1166,mini:[1152,1153,1197,1198],minimum:[40,41,610,817,867,871,893,896,899,901,908,934,935,970,971,978,979,1053,1116,1121],miss:[1199,1203],ml_framework:[893,896],mod:[893,928],mod_depth:[1195,1196],mod_height:[1195,1196],mod_with_top_mod_key_chain:[1195,1196],mode:[40,41,815,816,817,846,847,848,849,861,1019,1024,1053,1209],model:[1166,1208],modul:[40,41,42,59,893,958,1053,1166,1167,1169,1170,1171,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1197,1198,1205,1206,1212],moment:[996,998,999,1003,1199,1200,1201],more:[43,893,980,1053,1166,1209,1212],more_util_node_str:1053,most:[40,41,43,1166,1212],move:[40,41,43,817,862,1053],much:[1166,1212],multi:[441,893,958,1135,1146,1183,1194],multi_head_attent:1135,multi_index_nest:1097,multi_map:[40,41],multi_nod:1053,multidev:[817,828,829,830,849],multidevcontain:[40,41],multidevic:[817,826],multidevit:[817,820,823,826,827,831],multidevitem:[817,819,822],multidevnest:[817,821,824],multiheadattent:[1166,1183],multinod:[1053,1057],multinodecontain:1053,multinodeit:1053,multinodeitem:1053,multinodenest:1053,multinomi:[157,333,441,556,723,1109],multipl:[40,41,893,953,976,1019,1021,1116,1117,1119,1120,1121,1122,1123,1125,1152,1153,1183,1193,1209],multipli:[40,41,893,916,1116,1122],multiprocess:[40,41,42,387,610,817,826,893,1053],must:[40,41,42,43,776,801,817,846,847,848,849,861,893,896,911,913,915,923,947,955,957,969,980,1031,1037,1041,1053,1109,1114,1116,1117,1199,1203],mutabl:[1097,1099,1106],mutlidevic:[817,826],mutlinod:1053,mw_tm1:[996,999,1003],mx_concat:1166,mxnet:[43,1166,1212],my_func:43,mymodel:1166,name:[815,816,1154,1155,1156,1160,1208],namespac:[43,1209],nan:[40,41,893,938,947,949,991],nativ:[15,17,18,19,40,41,817,833,835,844,845,856,863,866,867,872,879,880,1053,1166,1167,1172,1173],native_modul:[1172,1173],native_module_class:[1172,1173],nativearrai:[15,18,19,43,776,801,817,835,861,862,867,871,877,881,882,884,885,893,894,895,896,898,899,900,901,902,903,905,907,908,909,910,911,912,914,915,916,917,920,921,922,923,925,926,927,928,929,931,932,936,938,939,940,947,948,949,950,951,952,954,955,956,957,960,961,962,965,966,967,968,969,974,976,977,980,982,983,985,986,987,988,990,991,992,993,994,995,1053,1097,1099,1106],natur:[1031,1044,1212],ncdhw:[1135,1140,1141,1183,1188,1189],nchw:[1135,1138,1139,1142,1183,1186,1187,1190],ncw:[1135,1136,1137,1183,1184,1185],ndarrai:[441,893,986],ndhwc:[1135,1140,1141,1183,1188,1189],nearest:[893,967],need:[43,893,909,910,1135,1137,1139,1141,1166,1183,1185,1187,1189,1212],neg:[40,41,893,947,1116,1117,1122,1124,1127,1129],negative_slop:1174,neither:1053,nest:[15,16,17,18,19,40,41,42,817,839,843,849,893,901,985,1049,1050,1051,1053,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1195,1196,1199,1200,1201,1202,1203,1204],nested_indices_wher:1097,nested_map:[1053,1097],network:[1135,1144,1166,1167,1169,1183,1195,1196,1212],neural:[1135,1166,1169,1183,1208],new_node_percent_mem:1053,new_node_util:1053,new_node_utils_kei:1053,new_std:[1152,1153,1197,1198],newli:[815,816,893,905,906],newlin:[40,41,42],newshap:[893,905,966],next:[1053,1195,1196,1199,1200,1201,1202,1203,1204],nhwc:[1135,1138,1139,1142,1183,1186,1187,1190],node:[40,41,1097,1098,1105],node_clon:1053,node_dist:1053,node_dist_arrai:1053,node_dist_it:1053,node_in:1053,node_mapp:1053,node_str:1053,node_to_str:1053,node_util:1053,nodedistit:1053,nodedistitem:1053,nodedistnest:1053,nodemanag:[1053,1064],nodemapp:1053,nodemappermultiproc:1053,noinspect:[43,818,868,869,870,997,1053,1161],non:[40,41,815,816,867,883,1195,1196,1199,1203,1209],none:[40,41,42,43,59,61,64,385,387,388,391,392,394,401,402,403,404,405,413,414,415,416,417,418,419,420,421,422,424,425,435,436,441,442,815,816,817,826,827,833,834,859,860,861,862,867,874,875,876,881,882,893,896,901,918,919,924,926,930,931,932,937,939,941,942,943,944,945,951,952,958,960,961,962,965,968,969,970,971,976,977,978,979,988,989,994,995,996,999,1001,1003,1004,1005,1011,1012,1016,1019,1022,1025,1049,1050,1051,1052,1053,1097,1098,1101,1105,1106,1109,1110,1111,1112,1113,1116,1117,1119,1120,1121,1122,1123,1124,1125,1135,1137,1139,1141,1144,1145,1146,1147,1152,1153,1154,1155,1156,1160,1164,1172,1173,1174,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206],norm:[40,41,893,909,910,1019,1022,1025,1153,1166,1198,1199,1201],normal:[1109,1112,1152,1153,1197,1198],normalized_idx:[1152,1153],normalized_shap:[1197,1198],notat:[40,41,1116,1118],noth:[40,41,1209],notimpl:43,notimplementederror:1053,now:[40,41,817,862,893,894,1053,1166,1183,1194,1195,1196,1208,1209,1212],np_concat:1166,ns_tune_step:1053,num:[387,413,414,893,951,952],num_arrai:[40,41],num_arrays_in_memori:893,num_arrays_on_dev:817,num_band:[893,929],num_channel:[1183,1190],num_chunk:1053,num_chunks_floor:1053,num_class:[1109,1110],num_cpu_cor:817,num_gpu:[100,385,817,1053],num_head:[1135,1146,1183,1194],num_kei:[1135,1146,1147],num_lay:[1183,1192],num_or_size_split:[40,41,387,420,893,976],num_output:1053,num_queri:[1135,1146,1147],num_sampl:[387,412,441,442,893,950,1012,1013,1109,1110],num_task:[1049,1050,1051,1052],number:[40,41,42,815,816,817,853,854,855,867,878,884,885,893,896,908,912,925,929,936,939,949,950,951,952,955,959,965,976,983,987,991,993,1019,1024,1049,1050,1051,1052,1053,1109,1110,1114,1116,1117,1119,1120,1121,1123,1125,1135,1146,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1209,1212],numer:[43,776,801,893,934,935,970,971,978,979,1031,1041,1174],numhead:[1135,1146],numpi:[40,41,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,893,986,1019,1024,1116,1118,1166,1208,1209,1212],nwc:[1135,1136,1137,1183,1184,1185],obj:[40,41],object:[40,41,42,59,817,867,871,881,882,893,896,901,996,1097,1100,1102,1103,1104,1107,1108,1109,1115,1160,1164,1174,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196],object_in:[387,391,392,893,901],observ:1053,occupi:[893,968,969],off:[893,896],offer:1166,offset:[1152,1153],often:1209,old:[40,41],on_init:[1183,1194,1195,1196],onc:[817,861,1053,1109,1110,1166],one:[40,41,43,817,846,847,848,849,861,867,873,893,939,953,960,968,969,977,980,1019,1022,1025,1053,1116,1118,1119,1120,1121,1122,1123,1124,1125,1166,1209,1212],one_hot:[107,387,497,610,893],onearrai:[893,925],ones:[40,41,107,258,387,497,610,893,939,960,962,1166],ones_lik:[107,258,387,497,610,893],ongo:43,onli:[40,41,441,817,1053,1097,1098,1099,1105,1199,1200,1201,1202,1203,1204,1208,1209],onlin:1166,onto:[817,846,847,862,1053,1097,1101,1106],oom:[817,1053],open:[893,896,1109,1113,1166,1212],opencv:1209,oper:[40,41,893,904,920,921,922,951,952,981,996,999,1001,1003,1004,1005,1027,1028,1029,1030,1135,1136,1137,1138,1139,1140,1141,1142,1144,1166,1167],operand:[40,41,1116,1118],oppos:[893,929],optim:[817,996,999,1001,1003,1004,1005,1049,1050,1051,1052,1053,1166,1200,1201,1202,1204,1208,1212],optimizer_upd:996,option:[15,18,19,40,41,42,43,387,392,815,816,817,826,827,835,839,840,841,842,843,846,847,848,849,856,859,860,861,862,866,867,872,877,883,892,893,895,896,898,899,900,901,909,910,911,916,918,919,926,929,930,931,932,936,938,939,946,950,951,952,953,956,958,960,961,962,965,968,969,972,974,976,977,978,979,980,988,990,991,994,995,996,999,1001,1002,1003,1004,1005,1007,1012,1016,1019,1022,1025,1049,1050,1051,1052,1053,1097,1098,1099,1101,1105,1106,1109,1110,1116,1119,1120,1121,1122,1123,1124,1125,1127,1128,1132,1135,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1209],ord:[893,926,1019,1024],order:[40,41,42,893,900,996,999,1001,1003,1004,1005,1019,1022,1025,1049,1050,1051,1205,1206],ordered_node_util_kei:1053,org:1212,organ:43,origin:[40,41,42,893,962,966,995,1019,1022,1025],other:[40,41,43,776,778,779,784,786,787,791,793,794,795,796,797,799,801,802,803,804,805,806,808,809,810,812,813,814,815,816,893,895,896,939,996,1000,1109,1113,1166,1208,1209,1212],other_i:[43,776,801],otherwis:[15,16,17,18,19,40,41,817,834,867,874,875,876,893,904,947,988,989,992,996,1002,1007,1011,1049,1050,1051,1053,1116,1117,1119,1120,1121,1123,1125],our:[1166,1212],out:[441,867,881,882,893,896,1031,1036,1135,1143,1145,1166,1183,1191],out_feat_dim:[1135,1146],out_featur:[1135,1143,1144],out_i:[893,947],outdat:1212,outer:[1049,1050,1051,1052],outer_batch_fn:[1049,1050,1051],outer_batch_shap:[1135,1144],outer_cost_fn:[1049,1050,1051],outer_v:[1049,1050,1051],outlin:1209,output:[40,41,817,826,827,861,893,896,906,930,939,965,983,996,1000,1031,1037,1053,1109,1111,1112,1113,1135,1137,1139,1141,1143,1145,1146,1147,1166,1183,1184,1185,1186,1187,1188,1189,1191,1192,1193,1194],output_ax:[817,861,1053],output_axi:1053,output_channel:[1183,1184,1185,1186,1187,1188,1189,1192,1193],output_connected_onli:[1154,1156,1160,1195,1196],output_queu:1053,output_shap:[1135,1137,1139,1141,1183,1185,1187,1189],outsid:[893,908],over:[40,41,893,926,1019,1022,1025,1109,1113,1116,1117,1119,1120,1121,1123,1125,1152,1153,1197,1198],overal:1209,overflow:[893,896],overhead:1209,overrid:[893,960,962,995],overriden:[1199,1203],overwrit:[40,41,817,861,1053],overwrite_at_key_chain:[40,41],own:[1166,1209,1212],packag:[43,1209],pad:[893,912,929,993,1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],pad_width:[387,893,912,993],page:1166,pair:[1135,1147],parallel:[817,826,827,1053],parallelis:[817,826,827,1053],param:[40,41,42,43,387,403,404,817,861,893,894,931,932,960,961,994,1053,1165,1166,1195,1196,1208],paramet:[15,16,17,18,19,40,41,42,776,801,815,816,817,826,827,833,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,856,859,860,861,862,863,866,867,871,872,873,877,878,879,880,881,882,883,884,885,892,893,895,896,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,914,915,916,917,919,920,921,922,923,924,925,926,927,928,929,930,931,932,936,938,939,940,942,943,944,946,947,948,949,950,951,952,953,954,955,956,957,958,961,962,965,966,967,968,969,970,971,972,974,975,976,977,978,979,980,981,982,983,985,986,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1007,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208],parameter:[1109,1112,1113],params_all_empti:1160,pardo:1166,pars:[893,913],part:[996,999,1001,1003,1004,1005,1031,1036,1166,1195,1196,1209],partial:[40,41,1195,1196],particl:1212,particular:1212,pass:[40,41,42,817,826,861,867,872,893,906,996,1010,1049,1050,1051,1053,1172,1173,1195,1196,1199,1203,1205,1206],pattern:[40,41,893,920,921,922],per:[817,1053,1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],percent_used_mem_on_dev:817,percent_used_mem_on_nod:1053,percentag:[817,856,1053],perf_count:1053,perform:[40,41,817,893,898,899,900,916,920,921,922,942,943,944,950,951,952,996,999,1001,1003,1004,1005,1012,1013,1049,1050,1051,1052,1053,1097,1102,1103,1116,1117,1119,1120,1121,1122,1123,1124,1125,1127,1132,1135,1143,1145],permissable_step:1053,permut:[441,893,982,988],perpendicular:[893,915],person:1166,physci:1212,pickl:[40,41,1053],pickle_filepath:[40,41],pid:1160,pinv:[323,695,1019],pip:1166,pipelin:1208,pkk:1212,pkkm1:1212,pkm1km1:1212,place:[40,41,43,817,862,893,925,930,942,943,944,1053,1199,1200,1201,1202,1203,1204],placehold:[1097,1106],pleas:441,point:[867,881,884,893,896,1031,1041],popul:[40,41,1109,1110],popular:1212,population_s:[441,442,1109,1110],portabl:[1166,1167],posit:[15,16,17,817,839,843,849,893,894,896,925,929,947,1053,1109,1114,1172,1173],possibi:[40,41],possibl:[893,953,985,1012,1017,1212],post:[1152,1153],post_shap:[40,41],power:[43,776,801,807,893,934,970,979,1174],practic:1166,pre:[817,1053,1166],pre_shap:[40,41],pred:[1148,1149,1150,1151],predict:[1148,1149,1150,1151,1212],preprint:1166,present:[40,41],preserv:[40,41,42,893,926,996,1007],preserve_typ:[40,41,426,429,996,1007],press:1166,prevent:[996,998,999,1003,1053,1199,1200,1201],previou:[996,999,1003],previous:[893,906],prime:1166,print:[40,41,42,817,857,893,963,1166,1208],print_all_arrays_in_memori:893,print_all_arrays_on_dev:817,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1199,1203],prob:[441,442,1109,1110,1135,1143,1183,1191],probabl:[1109,1110,1135,1143,1183,1191],problem:[43,1212],process:[43,817,826,827,856,866,893,958,1053],process_specif:[817,856,866,1053],prod:[40,41,893,921],produc:[817,826,827,1053],product:[40,41,893,915,916,954,1116,1118,1135,1146,1147,1183,1194],profil:[100,252,385,490,602,817,1053],project:[1166,1208,1209,1212],promot:[43,776,801,1031,1041],prompt:1166,properli:43,properti:[40,41,817,829,1053,1160,1164,1195,1196,1199,1200,1201,1202,1204],provid:[40,41,43,815,816,817,834,867,874,875,876,883,892,893,919,960,962,969,995,996,999,1001,1003,1004,1005,1011,1053,1116,1117,1166,1183,1192,1199,1200,1201,1202,1203,1204,1209],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1019,1023],ptype:[1160,1164],pure:[40,41,1166,1212],purpos:1212,put:1053,pybroadexcept:1053,pyprotectedmemb:[1053,1161],pyshadowingbuiltin:43,pyshadowingnam:[818,868,869,870,997,1053],python:[40,41,817,856,866,893,896,1053,1166],pytorch:[996,999,1001,1003,1004,1005,1166,1199,1200,1201,1202,1203,1204,1208,1209,1212],pyunresolvedrefer:1053,quadrant:[1031,1037],queri:[40,41,776,790,811,817,850,860,1053,1135,1146,1147,1183,1194],query_dim:[1183,1194],query_kei:[40,41],queue:[40,41,42,817,826,827,893,964,972,1053],queue_class:[817,826,827,1053],queue_load_s:[40,41,42],queue_timeout:[40,41,42,893,1053],quick:[441,1166],quickli:1208,radian:[1031,1032,1034,1037,1039,1045,1047],rai:[1031,1032],rais:[40,41,43,776,801,893,904,934,970,977,979,989,1053,1116,1117,1195,1196,1199,1203],ram:[817,856,863,866,1053],randint:[157,333,441,556,723,1109],random:[37,40,41,442,1110,1111,1112,1113,1114,1115,1166],random_crop:1012,random_norm:[157,333,441,556,723,1109],random_uniform:[157,333,441,556,723,1109],randomli:[441,1012,1016,1135,1143,1183,1191],randomness_factor:[1154,1156,1160,1195,1196],rang:[441,893,896,951,952,1031,1037,1053,1166,1208,1212],rank:[893,912,990,993,1116,1117],rate:[996,999,1001,1003,1004,1005,1049,1050,1051,1052,1183,1194,1199,1200,1201,1202,1203,1204],rather:[40,41,817,861,893,896,946,996,1002,1053],ratio:[817,996,1003,1012,1017,1053,1199,1201],raw:[40,41],raw_delta:1053,reach:[817,839,843,849,1053,1097,1106],read:[40,41],readi:[1053,1208],real:[1031,1032,1036],realiti:1209,rearrang:[40,41,893,920,922],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1049,1051],receiv:[817,826,827,893,897,953,1053,1183,1193],receivess:[817,1053],receiving_fn:1160,receivng:[1049,1052],recev:[1049,1050,1051],recognit:1212,recommend:1166,rectifi:[1127,1129,1130],recurr:[1135,1145],recurrent_bia:[1135,1145],recurrent_kernel:[1135,1145],recurs:[40,41,1097,1098,1099,1105,1106],redefin:43,reduc:[40,41,817,861,893,921,1053,1116,1117,1119,1120,1121,1122,1123,1124,1125],reduce_max:[40,41,164,338,443,561,730,1116],reduce_mean:[40,41,164,338,443,561,730,1116,1166,1208],reduce_min:[40,41,164,338,443,561,730,1116],reduce_prod:[40,41,164,338,443,561,730,1116],reduce_std:[40,41,338,1116],reduce_sum:[40,41,164,338,443,561,730,1053,1116],reduce_var:[40,41,164,338,443,561,730,1116],reduct:[39,40,41,387,418,419,893,921,968,969,1117,1118,1119,1120,1121,1122,1123,1124,1125,1166],refactor:43,refer:[996,998,999,1019,1026,1116,1117,1183,1193,1212],reflected_oper:[0,13,14],regard:[817,1053],regardless:[40,41,815,816],register_paramet:1208,reimplement:1212,rel:[996,999,1001,1003,1004,1005],rel_slice_obj:1053,relev:[1199,1200,1201,1202,1203,1204],relu:[740,1127,1128,1129,1166,1208],remain:[43,893,966,1097,1101],remaind:[40,41,893,928,976],remov:[40,41,893,977,1049,1050,1051],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,893,926],rep:[893,983],repeat:[40,41,258,610,893,922,983,1053,1209],repeated_config_check:[817,1053],repeatedli:[1097,1104],repetit:[40,41,893,965,983],replac:[40,41,43,441,442,893,908,968,969,1109,1110],repo:1166,repres:[867,873,878,1135,1144],represent:[40,41,42,817,844,845,867,873,879,880,893,975,985,1053],reptil:[1049,1052],reptile_step:1049,requir:[43,815,816,867,871,893,896,901,1172,1173],res:43,resampl:[893,950],reshap:[40,41,43,441,610,893],reshape_lik:[40,41],respect:[893,923,996,998,999,1000,1001,1003,1004,1005,1031,1041,1049,1050,1051,1052],respons:1053,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,776,801,817,826,893,896,923,947,968,969,980,1019,1022,1025,1027,1028,1029,1030,1031,1041,1053,1116,1117,1119,1120,1121,1122,1123,1124,1125,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1166],ret:1053,ret_dict:1053,ret_fn:[817,826,827,1053],retain:[996,1000],retain_grad:[426,427,996,1000],retreiv:1053,retrn:[893,975],return_cont:[40,41],return_dict:[40,41],return_graph:[1154,1155,1156],return_inner_v:[1049,1050,1051,1052],return_sequ:[1183,1192],return_st:[1183,1192],rev:[893,919],revers:[40,41,893,919,926,988],right:[40,41],rk_e:1212,robot:1166,ronald:1166,round:[258,387,610,893,896,1053],row:[893,939,1109,1110],rule:[43,776,801,893,896,1031,1041],run:[817,826,996,998,999,1003,1049,1050,1051,1052,1053,1166,1167,1183,1194,1195,1196],safe:[817,826,1053],safety_factor:[817,1053],same:[15,16,17,40,41,43,817,826,827,861,862,867,871,893,894,907,911,927,928,931,932,960,962,967,968,969,980,995,996,1002,1007,1019,1024,1031,1036,1049,1050,1051,1053,1116,1118,1135,1136,1137,1138,1139,1140,1141,1142,1166,1183,1184,1185,1186,1187,1188,1189,1190,1208,1212],same_arrai:[40,41],sampl:[893,950,1012,1013,1109,1110,1112,1113,1135,1143,1166,1183,1191],satisfi:[893,901,1019,1021,1026],save:[40,41,893,973,984,1012,1014,1195,1196],save_debug_info:1160,save_dir:[385,386,817,832,1053],save_to_disk:[1154,1156,1160,1195,1196],save_weight:[1195,1196],scalar:[893,908,960,987,991],scale:[817,859,860,996,1004,1053,1135,1143,1146,1147,1152,1153,1183,1191,1194,1199,1202],scaled_dot_product_attent:1135,scatter:[893,960,968,969],scatter_flat:[107,258,387,497,610,893],scatter_nd:[107,258,387,497,610,893],scene:[996,999,1001,1003,1004,1005],schemat:1166,screen:[40,41],search:[15,18,19,40,41],second:[40,41,817,848,893,902,915,923,964,972,982,996,998,999,1003,1049,1051,1053,1199,1200,1201],secondli:1212,see:[43,59,385,386,441,776,801,817,829,830,831,832,867,893,896,951,952,996,1031,1041,1116,1117,1160,1164,1166,1174,1176,1177,1179,1180,1182],seed:[40,41,157,441,723,1109],seed_valu:[40,41,441,1109,1114],seem:1166,seen_set:[893,937],select:[893,901,977,1209,1212],self:[40,41,43,59,385,386,776,801,817,829,830,831,832,867,996,1053,1160,1164,1166,1174,1176,1177,1179,1180,1182,1199,1203,1208,1212],sent:1053,seper:[893,929],seq:[40,41,42,1116,1118,1195,1196],sequenc:[15,16,17,40,41,42,441,815,816,817,826,827,836,837,838,839,840,841,842,843,846,847,861,867,871,893,896,901,903,905,911,912,926,939,953,956,961,965,966,969,976,980,983,988,993,994,996,1000,1012,1016,1017,1019,1022,1025,1053,1097,1108,1109,1111,1113,1116,1119,1120,1121,1122,1123,1124,1125,1135,1136,1137,1138,1139,1140,1141,1142,1152,1153,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1192,1195,1196,1197,1198,1199,1203,1205,1206],sequenti:1166,set:[15,18,19,40,41,817,846,847,859,860,861,893,895,918,939,970,971,972,973,996,999,1001,1002,1003,1004,1005,1019,1022,1025,1053,1097,1098,1105,1107,1108,1109,1110,1114,1116,1119,1120,1121,1122,1123,1124,1125,1164,1166,1183,1192,1199,1200,1201,1202,1203,1204,1209,1212],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1164,set_debug_mod:44,set_default_devic:817,set_default_dtyp:867,set_default_float_dtyp:867,set_default_int_dtyp:867,set_default_nod:1053,set_exception_debug_mod:44,set_framework:[40,41,59,1053,1166,1208,1209,1212],set_ivy_backend:[40,41],set_min_bas:893,set_min_denomin:893,set_nest_at_index:1097,set_nest_at_indic:1097,set_param:1160,set_queue_timeout:893,set_split_factor:[817,1053],set_stat:[1199,1200,1201,1202,1203,1204],set_tmp_dir:893,set_with_grad:996,setter:1053,sever:1212,sgd:[1166,1199],shape0:1053,shape:[40,41,387,402,416,419,424,441,610,817,829,867,871,893,894,905,907,911,912,925,926,927,928,930,932,936,939,960,961,962,965,966,967,968,969,975,977,980,993,994,995,1012,1016,1019,1021,1031,1036,1037,1053,1109,1111,1112,1113,1116,1118,1135,1137,1139,1141,1160,1164,1183,1185,1186,1187,1188,1189,1190,1197,1198],shape_slic:[40,41],shape_to_tupl:893,share:[40,41,1166,1209],shift:1053,should:[40,41,42,43,441,776,801,815,816,817,893,905,906,913,960,966,996,999,1001,1003,1004,1005,1031,1041,1053,1116,1118,1166],show:[40,41,1160,1166,1212],show_debug_info:1160,show_graph:[1154,1166,1195,1196,1199,1203],show_mod_in_top_mod:[1195,1196],show_structur:[1195,1196],show_sub_contain:[40,41],show_v:[1195,1196],show_v_in_top_v:[1195,1196],shown:[40,41],shp:1053,shuffl:[40,41,157,441,723,1109],shuffle_h5_fil:[40,41],sigmoid:[740,1127,1166,1208],signatur:[43,59,385,386,387,426,431,435,438,439,441,817,829,830,831,832,867,996,1160,1164,1174,1176,1177,1179,1180,1182],signific:1212,similar:[1135,1146,1183,1194],simpl:[43,893,924,1166,1209,1212],simplest:1209,simpli:[40,41,43,1166,1209,1212],simultan:1166,sin:[706,893,929,1031,1047,1209],sinco:1209,sine:[1031,1034,1035,1045,1046],singl:[40,41,815,816,817,826,827,846,847,848,849,893,977,987,991,1012,1017,1053,1109,1112,1113,1116,1119,1120,1121,1122,1123,1124,1125,1166,1209,1212],singleton:[1116,1117],singular:[1019,1024],sinh:[706,1031],siren:[1166,1174],size:[40,41,42,387,418,817,840,841,842,843,859,860,861,893,896,905,951,952,968,976,1012,1016,1019,1022,1024,1025,1053,1109,1110,1112,1113,1116,1119,1120,1121,1122,1123,1124,1125,1183,1184,1185],size_ordered_arrai:[40,41],skew:[1019,1026],skinv:1212,skip:[40,41],slice:[40,41,893,900,931,932,1053,1097,1104],slice_kei:[40,41],slice_obj:[40,41,1053],slice_via_kei:[40,41],slide:[1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],slope:[1127,1129],small:[1148,1149,1150,1151,1152,1153,1166,1197,1198,1209],smaller:[893,908],smallest:[40,41,893,899,907],softmax:[174,453,740,1127,1135,1146,1147],softplu:[740,1127],solv:1212,some:[40,41,43,893,896,996,998,999,1001,1003,1004,1005,1010,1135,1143,1166,1183,1191,1209,1212],some_backend:43,some_namespac:43,someth:[43,1212],something_cool:43,somewher:[40,41],sort:[40,41,42,893,900,1019,1024,1053],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,439,440,441,442,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,819,820,821,822,823,824,826,827,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1164,1169,1170,1171,1172,1173,1174,1176,1177,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1210,1211,1212],space:[893,896,929,951,952],spars:[1148,1151],sparse_cross_entropi:1148,spawn:[893,958],specif:[40,41,43,817,859,893,913,920,921,922,958,1049,1050,1051,1052,1053,1109,1115,1166,1195,1196,1208,1209],specifc:[1109,1110],specifi:[40,41,43,817,836,837,838,839,840,841,842,843,846,847,851,853,857,860,861,862,867,871,873,893,896,898,899,901,908,911,912,930,931,932,938,951,952,980,990,993,1019,1022,1025,1053,1097,1102,1103,1107,1108,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125],split:[40,41,107,258,387,497,610,817,826,840,841,842,843,859,860,861,893,953,1053],split_arg:1053,split_factor:[817,826,1053],split_func_cal:[817,1053],split_siz:1053,spread:[817,849,1053],squar:[893,939,1019,1021],squeez:[107,258,387,497,610,893],stabil:[893,978,979],stabl:[893,934,935,970,971,978,979],stable_divid:893,stable_pow:893,stack:[40,41,258,610,893,1012,1017,1097,1098,1105,1183,1192],stack_imag:[148,319,431,546,691,1012],stacked_dim_s:1053,stage:43,standard:[40,41,43,1109,1112,1116,1123,1152,1153,1197,1198],start:[40,41,385,386,387,388,413,414,441,817,832,893,896,951,952,1053,1166,1209],starting_index:[40,41],starting_split_factor:[817,1053],state:[1053,1135,1145,1154,1155,1156,1160,1166,1169,1170,1171,1172,1173,1174,1176,1177,1179,1180,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1208],statement:1209,static_argnam:[387,394,815,816],static_argnum:[387,394,815,816],std:[441,1109,1112],step:[40,41,387,388,817,893,896,951,952,996,998,999,1001,1003,1004,1005,1049,1050,1051,1052,1053,1166,1199,1200,1201,1202,1203,1204,1208,1212],stephen:1166,stick:1166,still:[40,41],stochast:[1199,1204],stop:[40,41,385,386,387,388,413,414,817,832,861,893,896,951,952,996,999,1001,1003,1004,1005,1007,1049,1050,1051,1052,1053,1199,1200,1201,1202,1203,1204],stop_gradi:[40,41,314,426,541,685,817,861,996,999,1001,1003,1004,1005,1049,1050,1051,1052,1053,1199,1200,1201,1202,1203,1204],stopiter:1053,store:[40,41,893,929,976,996,1010,1195,1196],store_var:[1195,1196],str:[15,16,17,40,41,42,43,387,392,815,816,817,826,827,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,861,867,872,873,878,879,880,881,882,883,884,885,892,893,901,918,920,921,922,956,958,961,968,969,1019,1022,1025,1049,1050,1051,1052,1053,1097,1101,1116,1118,1172,1173,1183,1194,1195,1196],str_to_nod:1053,straight:1209,strength:[1166,1212],stride:[1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],string:[40,41,817,833,835,844,845,850,856,862,863,866,867,871,877,879,880,883,892,893,896,901,918,939,961,962,994,995,1053,1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190,1195,1196],structur:[40,41,42,43,893,913],structural_diff:[40,41],sub:[40,41,817,840,841,846,847,848,849,893,976,1049,1050,1051,1052,1053],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1053,sub_mod:[1195,1196],sub_modul:[1205,1206],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1166,1167,1197,1198,1205,1206],substr:[40,41],suggest:1166,suitabl:[1012,1017],sum:[40,41,387,418,419,817,846,847,848,849,861,893,917,921,968,969,1053,1116,1118,1124],summat:[40,41,1116,1118],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,149,150,151,153,154,158,159,160,161,162,163,165,166,167,168,169,170,171,172,175,177,178,180,181,182,183,184,185,186,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,254,255,256,257,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,315,316,317,318,320,321,322,324,325,326,327,329,330,331,334,335,336,337,339,340,341,342,343,344,345,346,347,350,352,353,354,355,356,357,358,386,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,427,428,429,430,432,433,434,436,437,440,442,444,445,446,447,448,449,450,451,454,455,457,458,459,460,461,462,463,491,492,493,494,495,496,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,542,543,544,545,547,548,549,551,552,553,557,558,559,560,562,563,564,565,566,567,568,569,573,574,575,603,604,605,606,607,608,609,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,686,687,688,689,690,692,693,694,696,697,698,699,700,701,703,704,705,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,724,725,726,727,728,729,731,732,733,734,735,736,737,738,741,742,743,744,745,746,747,749,750,752,753,754,755,756,757,758,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,816,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1024,1025,1026,1028,1029,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1050,1051,1052,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1149,1150,1151,1153,1155,1156,1158,1159,1161,1165,1166,1170,1171,1173,1175,1176,1177,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1198,1199,1200,1201,1202,1203,1204,1206,1207,1208,1209,1211,1212],supports_inplac:893,suppos:1212,svd:[323,550,695,1019],swap:[40,41,893,982],swapax:[40,41,497,610,893,1212],symmetr:[1019,1026],syntax:[385,387,426,431,435,438,439,441],tab:1166,take:[893,950],taken:[1116,1119,1120,1121,1123,1125],tan:[706,1031,1036],tangent:[1031,1036,1037,1038,1047,1048,1127,1134],tanh:[706,740,1031,1127],target:[40,41,817,833,836,837,838,839,840,841,842,843,846,847,848,849,862,1053,1166],target_dict:[40,41],task:[1049,1050,1051,1052],team:1212,templat:1166,temporari:[893,973,984],tensor:[40,41,43,387,418,419,817,835,867,877,893,896,898,899,900,905,951,952,955,957,960,961,962,966,968,969,976,994,995,1053,1109,1110,1111,1135,1143,1145,1166,1183,1191,1193,1199,1200,1201,1202,1203,1204,1208,1209],tensorflow:[1135,1137,1139,1141,1166,1183,1185,1187,1189,1209,1212],term:[40,41,1135,1145,1166,1183,1193],termcolor:[40,41,42],termin:[40,41,42,1053],test:[867,884,885,893,947,1116,1117],tf_concat:1166,than:[40,41,817,861,893,896,907,908,927,946,955,977,980,996,1002,1053,1109,1113,1166,1209],thei:[40,41,43,1031,1037,1049,1050,1051,1109,1110,1166,1205,1206,1209],them:[1166,1212],themselv:[1097,1098],therefor:43,thi:[40,41,42,43,817,839,843,849,856,861,866,893,896,929,964,966,972,996,999,1001,1002,1003,1004,1005,1010,1019,1022,1025,1053,1097,1101,1106,1116,1119,1120,1121,1122,1123,1124,1125,1135,1144,1166,1195,1196,1199,1200,1201,1202,1203,1204,1208,1209,1212],thing:[43,1166],those:[40,41,893,908,996,1010,1019,1024,1053],threshold:[893,955,957],through:[40,41],tile:[258,497,610,893],time:[893,983,996,999,1003,1049,1050,1051,1052,1053,1109,1110,1135,1145,1183,1194,1195,1196,1212],time_chronolog:[1154,1155,1160],time_infer:[1154,1155],timeout:[40,41,42,817,826,827,893,964,972,1053],timestep:[1135,1145,1183,1192],timing_fnam:[1154,1155],titl:1166,tmp_dir:893,tmp_dr:[893,973],to_appli:[40,41],to_clon:[817,1053],to_dev:[40,41,100,252,385,490,602,817],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[817,1053],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,43,1166],to_ivy_modul:[176,748,1166,1172],to_json:[40,41],to_kv_fn:[1135,1146],to_kv_v:[1135,1146],to_list:[40,41,387,610,893],to_multi_dev:[40,41],to_mut:[1097,1099,1106],to_n:[15,40,41,43,1166],to_nod:1053,to_numpi:[40,41,387,610,893,1166,1208],to_out_fn:[1135,1146],to_out_v:[1135,1146],to_q_fn:[1135,1146],to_q_v:[1135,1146],to_raw:[40,41],to_scalar:[387,610,893],todo:1053,togeth:[40,41,1205,1206],tool:[1166,1209],top_mod:[1195,1196],topic:1212,torch:[43,815,816,1166,1208,1209,1212],torch_concat:1166,torchfcmodel:1208,total:[40,41,42,817,863,1053],total_mem_on_dev:817,total_mem_on_nod:1053,tpu:[817,864,1053],tpu_is_avail:[385,490,602,817,1053],tpye:[867,878],trace:[40,41,893,946],track:[817,1053,1097,1106,1195,1196],track_submod_call_ord:[1195,1196],track_submod_ret:[1195,1196],trail:[1197,1198],train:[996,998,999,1003,1166,1167],trainabl:[996,1002,1166,1167,1172,1173,1195,1196,1205],trainer:1166,tran:1212,transform:[1135,1143,1144],transpos:[40,41,107,258,387,610,817,848,893,1053,1135,1137,1139,1141,1183,1185,1187,1189],travers:[15,18,19,40,41,1097,1106],treat:[40,41,815,816],tree_depth:1164,tree_height:1160,tri:[40,41],trigonometr:[1031,1032,1036,1039,1045],trim_kei:[40,41],trust:[996,1003,1199,1201],truth:[893,923,1027,1028,1029,1030],try_else_non:893,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[817,1053],tune_dev_alloc:817,tune_dev_split:817,tune_node_alloc:1053,tune_node_split:1053,tune_step:[817,1053],tupl:[15,16,17,18,19,40,41,815,816,893,912,929,930,975,993,1053,1097,1098,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1111,1116,1117,1119,1120,1121,1122,1123,1124,1125],two:[40,41,893,896,902,915,954,982,1019,1022,1024],type:[15,18,40,41,42,43,59,385,386,776,801,817,829,830,831,832,844,845,849,861,867,871,872,873,877,878,879,880,881,882,883,884,885,892,893,894,896,901,907,911,913,923,927,928,930,939,946,947,960,961,962,967,981,991,994,995,996,1002,1007,1031,1041,1053,1160,1164,1166,1174,1176,1177,1179,1180,1182,1195,1196,1209],types_to_iteratively_nest:[40,41,42],uint8:[1012,1014,1018],uint8_img_to_float_img:1012,unchang:[15,16,17,18,19],unif:1053,unifi:[40,41,817,846,847,848,849,861,1053,1166],uniform:[40,41,1109,1110,1112,1113,1174,1176,1177,1180,1181],uniformli:[1109,1111,1113],unify_arrai:1053,unify_it:1053,unify_nest:1053,union:[15,18,19,40,41,43,776,801,815,816,817,835,840,841,842,843,861,862,867,871,872,873,877,878,879,880,881,882,883,884,885,892,893,894,895,896,898,899,900,901,902,903,905,907,908,909,910,911,912,914,915,916,917,920,921,922,923,925,926,927,928,929,930,931,932,936,938,939,940,947,948,949,950,951,952,954,955,956,957,960,961,962,965,966,967,968,969,974,975,976,977,980,982,983,985,986,987,988,990,991,992,993,994,995,1053,1097,1098,1099,1105,1106],uniqu:[817,826,827,1049,1050,1051,1052,1053,1097,1101],unique_kwarg:1053,unit:[817,1031,1032,1034,1053,1127,1128,1129,1130],unitari:[1019,1024],unless:[893,960,962,995],unlik:[817,1053],unnorm:[1109,1110],unpack:[893,990],unrol:[1135,1145],unset:1209,unset_debug_mod:44,unset_default_devic:817,unset_default_dtyp:867,unset_default_float_dtyp:867,unset_default_int_dtyp:867,unset_framework:[59,1209],unset_with_grad:996,unstack:[40,41,107,258,387,497,610,893],unus:[815,816],updat:[40,41,387,418,419,817,826,893,944,968,969,996,998,999,1001,1003,1004,1005,1049,1050,1051,1053,1097,1102,1103,1107,1108,1135,1145,1172,1173,1199,1200,1201,1202,1203,1204,1209,1212],update_backend:[40,41],update_config:[40,41],update_inference_tim:1160,upper:[40,41,1109,1113],upper_depth:[1195,1196],usabl:[1166,1212],usag:[817,861,1053],use:[40,41,42,43,441,817,826,827,852,864,893,965,978,979,1053,1135,1146,1152,1153,1166,1197,1198,1209,1212],used:[40,41,43,441,817,826,856,859,860,866,867,878,893,934,935,953,962,968,969,970,971,995,996,1003,1004,1019,1022,1049,1050,1051,1052,1053,1097,1106,1183,1194,1199,1201,1202,1208,1209],used_dev:[817,826],used_mem_on_dev:817,used_mem_on_nod:1053,used_node_str:1053,used_node_strs_dict:1053,useful:[40,41,817,861,1053,1135,1144,1166,1209],user:[1166,1183,1194,1195,1196,1209,1212],uses:1166,using:[40,41,996,998,999,1097,1100,1104,1116,1118,1135,1143,1147,1166,1183,1191,1208,1209,1212],util:[817,850,1053],v_with_top_v_key_chain:[1195,1196],val:[40,41,387,407,408,409,776,811,893,942,943,944,970,971,1164],valid:[867,872,893,978,979,1116,1117,1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],valid_dtyp:867,valu:[40,41,387,817,829,860,861,893,894,896,898,899,900,908,909,910,912,913,919,923,929,930,931,932,948,949,951,952,955,957,964,965,966,967,968,969,970,971,972,988,991,992,993,996,1000,1003,1012,1018,1019,1024,1027,1028,1029,1030,1031,1042,1043,1044,1049,1050,1051,1053,1097,1101,1102,1103,1107,1108,1109,1112,1113,1116,1119,1121,1135,1146,1147,1152,1153,1160,1183,1194,1197,1198,1199,1201],value_is_nan:893,vanilla:[1049,1051],var_shap:1174,variabl:[15,16,17,18,19,40,41,314,426,541,685,893,904,942,943,944,945,946,981,996,999,1000,1001,1002,1003,1004,1005,1007,1010,1049,1050,1051,1052,1135,1146,1152,1153,1172,1173,1174,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206],variable_data:[426,685,996],varianc:[40,41,1116,1125,1212],varieti:1209,variou:[43,1166],vector:[40,41,435,437,893,910,915,1019,1024,1025,1026,1135,1144,1183,1193],vector_norm:[40,41,1019],vector_to_skew_symmetric_matrix:[152,323,435,550,695,1019],verbos:1211,veri:[43,1166],version:43,via:[1097,1098,1105,1209],view:[1012,1017],vision:1166,visual:1209,volum:[1135,1140],vw_tm1:[996,999,1003],wai:[1209,1212],wait:[40,41,42],want:[1166,1209,1212],warn:[59,66,67,68,69,70],warp:[431,432,1012,1013],watch:1208,weight:[996,998,999,1001,1003,1004,1005,1135,1144,1145,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1195,1196,1199,1201,1202],weight_initi:[1183,1184,1185,1186,1187,1188,1189,1190,1192,1193],weights_path:[1195,1196],well:[40,41,893,938],were:[40,41,1053],what:1166,when:[40,41,42,817,893,906,979,992,1019,1024,1053,1166,1195,1196,1209,1212],where:[40,41,43,258,387,610,776,801,893,896,905,908,912,925,940,948,949,960,993,1019,1024,1097,1098,1105,1109,1110,1116,1117],wherebi:[1097,1106],whether:[15,18,19,40,41,42,815,816,817,835,848,852,856,861,864,866,867,877,883,884,885,892,893,895,902,903,916,919,924,929,936,938,941,945,946,953,974,981,990,991,996,999,1000,1001,1002,1003,1004,1005,1007,1049,1050,1051,1052,1053,1097,1098,1099,1101,1105,1106,1109,1110,1116,1117,1127,1128,1135,1143,1166,1172,1173,1183,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204],which:[40,41,42,43,441,815,816,817,826,827,835,840,841,842,843,846,847,848,849,851,853,857,859,860,861,867,872,877,881,882,883,892,893,896,901,911,913,915,916,917,919,926,930,931,932,933,939,940,950,951,952,959,960,961,962,963,965,968,969,976,980,990,992,994,995,996,999,1000,1001,1003,1004,1005,1007,1009,1010,1012,1014,1019,1022,1025,1031,1037,1053,1097,1101,1102,1103,1107,1108,1109,1110,1111,1112,1113,1116,1117,1119,1120,1121,1122,1123,1124,1125,1127,1132,1135,1146,1147,1166,1172,1173,1183,1184,1185,1186,1187,1188,1189,1190,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1205,1206,1208,1209],whitespac:[40,41,42],whose:[43,776,801,893,901,906,1116,1118,1119,1120,1121,1123,1125],why:[1166,1167],width:[1012,1017],wiki:1212,wikipedia:1212,window:[1012,1017,1135,1136,1137,1138,1139,1140,1141,1142,1183,1184,1185,1186,1187,1188,1189,1190],wise:[40,41,43,776,801,893,907,908,923,927,928,955,957,967,996,999,1001,1003,1005,1027,1028,1029,1030,1031,1032,1034,1036,1037,1039,1041,1042,1043,1044,1045,1047,1127,1128,1129,1130,1131,1132,1133,1134],wish:1209,with_arg_label:[1154,1156,1160,1195,1196],with_array_cach:[1154,1155,1156,1160],with_bia:[1183,1193],with_cal:[893,919],with_default_key_color:[40,41],with_edge_label:[1154,1156,1160,1195,1196],with_entries_as_list:[40,41],with_grad:[996,1006,1195,1196],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1053,with_output_label:[1154,1156,1160,1195,1196],with_partial_v:[1195,1196],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,387,420,893,976,1053],with_to_kv_fn:[1183,1194],with_to_out_fn:[1183,1194],with_to_q_fn:[1183,1194],within:[15,18,19,893,896,1019,1024,1109,1113],without:[40,41,43,893,964,966,972,1097,1099,1209],wonder:1166,word:[15,16,17,893,896,1109,1113,1172,1173],work:[43,1208],worker:[817,826,827,1053],worker_class:[817,826,827,1053],worker_kwarg:1053,would:[43,893,900,1127,1132,1166,1209,1212],wrap:[15,40,41,42,385,387,426,431,435,438,439,441,893,906,996,1010,1166],wrapper:43,write:[40,41,43,1166,1167,1212],written:[43,1166,1212],ws_new:[996,999,1001,1003,1004,1005],x1_i:[893,923,1031,1041],x2_i:[893,923,1031,1041],x_feat_dim:[1135,1146],x_i:[893,947],x_in:[1166,1208],x_inv:[1019,1021],x_max:[387,893,908],x_min:[387,893,908],x_sub:1053,xkk:1212,xkkm1:1212,xkm1km1:1212,xs0:1053,xs_t:1053,year:[1166,1212],yet:[1097,1106,1212],yield:[893,992],you:[1166,1208,1209,1212],your:[1166,1208,1209,1212],your_awesome_project:1209,yourself:1166,zero:[40,41,107,258,387,497,610,893,912,960,962,968,969,993,995,996,998,999,1003,1004,1135,1143,1166,1174,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1199,1200,1201,1202],zero_pad:[258,387,497,610,893],zeros_lik:[107,258,387,497,610,893],zip:1053,zk_e:1212},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","asarray","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","asarray","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","asarray","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","asarray","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","asarray","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","Data types","Elementwise functions","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","finfo","iinfo","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isfinite","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","all","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":919,"function":[77,78,80,81,83,84,85,86,87,88,89,190,191,193,194,196,197,198,199,200,201,202,362,363,365,366,368,369,370,371,372,373,374,467,468,470,471,473,474,475,476,477,478,479,579,580,582,583,585,586,587,588,589,590,591,762,763,765,766,768,769,770,771,772,773,774],Ones:1179,Using:1209,abs:[259,498,611,894],aco:[707,1032],acosh:[708,1033],activ:[174,349,453,571,740,1127,1169],adam:1200,adam_step:998,adam_upd:999,algebra:[82,83,195,196,367,368,472,473,584,585,767,768],all:[165,339,444,562,731,1117],all_equ:895,all_nested_indic:1098,api:[0,43,75,91,188,204,360,376,465,481,577,593,760],arang:[108,260,388,499,612,896],arg_nam:897,argmax:[109,389,500,613,898],argmin:[110,390,501,614,899],args_to_ivi:16,args_to_n:17,argsort:[615,900],arithmet:[1,92,205,377,482,594],arrai:[0,3,43,75,90,91,93,111,188,203,204,206,213,261,360,375,376,378,391,465,480,481,483,502,577,592,593,595,616,760,776,901],array_equ:[262,617,902],arrays_equ:903,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asarrai:[112,263,392,503,618],asin:[709,1034],asinh:[710,1035],assert_supports_inplac:904,atan2:[712,1037],atan:[711,1036],atanh:[713,1038],attribut:[5,94,207,379,484,596],backend:[43,73],bilinear_resampl:[149,320,432,547,692,1013],binary_cross_entropi:1149,bitwis:[7,95,208,380,485,597],broadcast_to:[264,619,905],builder:51,builtin:[90,203,213,375,480,592,776],builtin_ab:[214,777],builtin_add:[215,778],builtin_and:[216,779],builtin_bool:[217,780],builtin_contain:[218,781],builtin_deepcopi:[219,782],builtin_dir:[220,783],builtin_eq:[221,784],builtin_float:[222,785],builtin_floordiv:[223,786],builtin_g:[224,787],builtin_getattr:[225,788],builtin_getattribut:[226,789],builtin_getitem:[227,790],builtin_gt:[228,791],builtin_int:[229,792],builtin_invert:[230,793],builtin_l:[231,794],builtin_lt:[232,795],builtin_mul:[233,796],builtin_n:[234,797],builtin_neg:[235,798],builtin_or:[236,799],builtin_po:[237,800],builtin_pow:[238,801],builtin_radd:[239,802],builtin_rand:[240,803],builtin_rfloordiv:[241,804],builtin_rmul:[242,805],builtin_ror:[243,806],builtin_rpow:[244,807],builtin_rsub:[245,808],builtin_rtruediv:[246,809],builtin_rxor:[247,810],builtin_setitem:[248,811],builtin_sub:[249,812],builtin_truediv:[250,813],builtin_xor:[251,814],cache_fn:906,cast:[113,265,393,504,620,871],ceil:[266,621,907],choleski:[696,1020],choose_random_framework:61,citat:1166,clear_framework_stack:62,clear_mem_on_dev:[604,833],clip:[267,622,908],clip_matrix_norm:909,clip_vector_norm:910,clone:1068,clone_arrai:1069,clone_it:1070,clone_nest:1071,clonedit:1055,cloneditem:1054,clonednest:1056,closest_valid_dtyp:872,code:1212,comparison:[9,96,209,381,486,598],compil:[268,394,623,815,816,1154],compile_graph:1155,concaten:[114,269,395,505,624,911],constant:[76,189,361,466,578,761],constant_pad:[270,506,625,912],contain:[40,41],container_typ:[626,913],content:1166,contribut:43,conv1d:[180,352,457,752,1136,1184],conv1d_transpos:[181,353,458,753,1137],conv1dtranspos:1185,conv2d:[182,354,459,573,754,1138,1186],conv2d_transpos:[183,355,460,755,1139],conv2dtranspos:1187,conv3d:[184,356,461,574,756,1140,1188],conv3d_transpos:[185,357,462,757,1141],conv3dtranspos:1189,convers:15,convert:[176,748,1172],convert_dtyp:873,copy_arrai:[627,914],copy_nest:1099,core:[99,212,384,489,601,775],cos:[714,1039],cosh:[715,1040],cprint:1211,creation:[77,190,362,467,579,762],cross:[271,628,915],cross_entropi:1150,cumprod:[115,272,396,629,916],cumsum:[630,917],current_framework:63,current_framework_str:[631,918],data:[78,79,191,192,363,364,468,469,580,581,763,764],debug_mod:45,debugg:44,default_devic:834,default_dtyp:874,default_float_dtyp:875,default_int_dtyp:876,default_nod:1072,depthwise_conv2d:[186,358,463,575,758,1142],depthwiseconv2d:1190,design:43,dev:[102,254,492,605,835],dev_clon:836,dev_clone_arrai:837,dev_clone_it:838,dev_clone_nest:839,dev_dist:840,dev_dist_arrai:841,dev_dist_it:842,dev_dist_nest:843,dev_from_str:[103,255,493,606,844],dev_to_str:[104,256,494,607,845],dev_unifi:846,dev_unify_arrai:847,dev_unify_it:848,dev_unify_nest:849,dev_util:850,devclonedit:820,devcloneditem:819,devclonednest:821,devdistit:823,devdistitem:822,devdistnest:824,devic:[20,100,252,385,490,602,817],devmapp:826,devmappermultiproc:827,distribute_nest:1073,divid:1041,document:1166,dropout:[1143,1191],dtype:[116,273,397,507,632,867,877],dtype_bit:[117,274,398,508,633,878],dtype_from_str:[118,275,399,509,634,879],dtype_to_str:[119,276,400,510,635,880],ecosystem:52,einops_rearrang:920,einops_reduc:921,einops_repeat:922,einsum:[166,340,445,563,732,1118],elementwis:[80,193,365,470,582,765],equal:[511,636,923],erf:[440,716,1042],execute_with_gradi:[146,315,427,542,686,1000],exist:924,exp:[717,1043],expand_dim:[277,637,925],extens:[82,195,367,472,584,767],finfo:881,firstlayersiren:1176,flip:[120,278,401,512,638,926],float_img_to_uint8_img:1014,floor:[279,639,927],floormod:[280,640,928],fomaml_step:1050,fourier_encod:929,framework:59,full:[121,281,402,513,641,930],func:72,gather:[122,282,403,514,642,931],gather_nd:[123,283,404,515,643,932],geglu:1170,gelu:[350,454,741,1128,1171],gener:[22,107,258,387,497,610,893],get_all_arrays_in_memori:933,get_all_arrays_on_dev:851,get_framework:64,get_min_bas:934,get_min_denomin:935,get_num_dim:[644,936],get_referrers_recurs:937,global:1157,glorotuniform:1177,gpu_is_avail:[852,1074],gradient:[24,145,314,426,541,685,996],gradient_descent_upd:1001,gradient_imag:[150,321,433,548,693,1015],graph:1160,gym:53,handler:59,has_nan:938,helper:1162,ident:[124,284,405,516,645,939],iinfo:882,imag:[26,148,319,431,546,691,1012],index_nest:1100,indices_wher:[125,285,406,646,940],initi:1174,inplac:[11,97,210,382,487,599],inplace_arrays_support:941,inplace_decr:[126,286,407,517,647,942],inplace_incr:[127,287,408,518,648,943],inplace_upd:[128,288,409,519,649,944],inplace_variables_support:945,inv:[697,1021],invalid_dtyp:883,is_arrai:[129,289,410,520,650,946],is_float_dtyp:884,is_int_dtyp:885,is_vari:[147,316,428,543,687,1002],isfinit:[130,290,411,521,651,947],isinf:[291,522,652,948],isnan:[292,523,653,949],ivi:[43,50,51,52,53,54,55,56,57,58,759,1208,1209,1212],ivymodul:[177,749],jax:74,lamb:1201,lamb_upd:1003,lar:1202,lars_upd:1004,layer:[179,351,456,572,751,1135,1183],layer_norm:1153,layernorm:1198,leaky_relu:[742,1129],linalg:[28,152,323,435,550,695,1019],linear:[82,83,195,196,367,368,472,473,584,585,767,768,1144,1193],linear_resampl:[131,293,412,524,654,950],linspac:[132,294,413,525,655,951],log:[718,1044,1163],log_global_inference_abs_tim:1158,log_global_inference_rel_tim:1159,logic:[30,155,328,438,554,702,1027],logical_and:[329,703,1028],logical_not:[330,704,1029],logical_or:[331,705,1030],logspac:[133,295,414,526,656,952],loss:1148,lstm:1192,lstm_updat:1145,maml_step:1051,manipul:[84,197,369,474,586,769],map:1101,map_nest_at_index:1102,map_nest_at_indic:1103,match_kwarg:953,math:[32,156,332,439,555,706,1031],matmul:[296,527,657,954],matrix_norm:[153,324,436,551,698,1022],maximum:[658,955],mech:54,memori:55,meshgrid:[297,659,956],meta:[34,1049],method:[81,194,366,471,583,766],minimum:[660,957],model:56,modul:[1195,1196,1208],multi:1053,multi_head_attent:1146,multi_index_nest:1104,multidevcontain:42,multidevit:830,multidevitem:829,multidevnest:831,multiheadattent:1194,multinodeit:1059,multinodeitem:1058,multinodenest:1060,multinomi:[158,334,442,557,724,1110],multiprocess:[661,958],mxnet:187,nativ:1208,nest:1097,nested_indices_wher:1105,nested_map:1106,network:1208,next:1166,node:[1053,1075],node_dist:1076,node_dist_arrai:1077,node_dist_it:1078,node_str:1079,node_to_str:1080,node_util:1081,nodedistit:1062,nodedistitem:1061,nodedistnest:1063,nodemapp:1065,nodemappermultiproc:1066,norm:[1152,1197],num_arrays_in_memori:959,num_arrays_on_dev:853,num_cpu_cor:854,num_gpu:[105,855,1082],numpi:359,nutshel:1166,one_hot:[134,415,528,662,960],ones:[135,298,416,529,663,961],ones_lik:[136,299,417,530,664,962],oper:[1,3,7,9,11,13,43,92,93,95,96,97,98,205,206,208,209,210,211,377,378,380,381,382,383,482,483,485,486,487,488,594,595,597,598,599,600],optim:[1199,1203],optimizer_upd:1005,overview:1166,param:1164,percent_used_mem_on_dev:856,percent_used_mem_on_nod:1083,pinv:[325,699,1023],portabl:1212,print_all_arrays_in_memori:963,print_all_arrays_on_dev:857,profil:[101,253,386,491,603,832,1067],queue_timeout:964,randint:[159,335,558,725,1111],random:[36,157,333,441,556,723,1109],random_crop:1016,random_norm:[160,336,559,726,1112],random_uniform:[161,337,560,727,1113],reduce_max:[167,341,446,564,733,1119],reduce_mean:[168,342,447,565,734,1120],reduce_min:[169,343,448,566,735,1121],reduce_prod:[170,344,449,567,736,1122],reduce_std:[345,1123],reduce_sum:[171,346,450,568,737,1124],reduce_var:[172,347,451,569,738,1125],reduct:[38,164,338,443,561,730,1116],reflect:[13,98,211,383,488,600],relu:[743,1130],repeat:[300,665,965],reptile_step:1052,reshap:[666,966],robot:57,round:[301,667,967],run:1209,scaled_dot_product_attent:1147,scatter_flat:[137,302,418,531,668,968],scatter_nd:[138,303,419,532,669,969],search:[85,198,370,475,587,770],seed:[162,728,1114],sequenti:[1205,1206],set:[86,199,371,476,588,771],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:858,set_default_dtyp:886,set_default_float_dtyp:887,set_default_int_dtyp:888,set_default_nod:1084,set_exception_debug_mod:48,set_framework:65,set_min_bas:970,set_min_denomin:971,set_nest_at_index:1107,set_nest_at_indic:1108,set_queue_timeout:972,set_split_factor:[859,1085],set_tmp_dir:973,set_with_grad:1006,sgd:1204,shape:[670,974],shape_to_tupl:975,show_graph:1156,shuffl:[163,729,1115],sigmoid:[744,1131],signatur:[81,194,366,471,583,766],sin:[719,1045],sinh:[720,1046],siren:1180,softmax:[175,455,745,1132],softplu:[746,1133],sort:[87,200,372,477,589,772],sparse_cross_entropi:1151,split:[139,304,420,533,671,976],split_factor:[860,1086],split_func_cal:[861,1087],squeez:[140,305,421,534,672,977],stable_divid:978,stable_pow:979,stack:[306,673,980],stack_imag:[151,322,434,549,694,1017],statist:[88,201,373,478,590,773],stop_gradi:[317,429,544,688,1007],str_to_nod:1088,submodul:43,supports_inplac:981,svd:[326,552,700,1024],swapax:[535,674,982],tan:[721,1047],tanh:[722,747,1048,1134],tensorflow:464,tile:[307,536,675,983],tmp_dir:984,to_dev:[106,257,495,608,862],to_ivi:18,to_ivy_modul:[178,750,1173],to_list:[676,985],to_n:19,to_nod:1089,to_numpi:[677,986],to_scalar:[678,987],torch:576,total_mem_on_dev:863,total_mem_on_nod:1090,tpu_is_avail:[496,609,864,1091],train:1208,trainabl:1208,transpos:[141,308,422,679,988],tree:1166,try_else_non:989,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,79,191,192,363,364,468,469,580,581,763,764],uint8_img_to_float_img:1018,unifi:1092,unify_arrai:1093,unify_it:1094,unify_nest:1095,unset_debug_mod:49,unset_default_devic:865,unset_default_dtyp:889,unset_default_float_dtyp:890,unset_default_int_dtyp:891,unset_framework:71,unset_with_grad:1008,unstack:[142,309,423,537,680,990],used_mem_on_dev:866,used_mem_on_nod:1096,util:[89,202,374,479,591,774],valid_dtyp:892,value_is_nan:991,variabl:[318,430,545,689,1009],variable_data:[690,1010],vector_norm:1025,vector_to_skew_symmetric_matrix:[154,327,437,553,701,1026],verbos:1210,vision:58,where:[310,681,992,1166],why:1212,with_grad:1011,wrapper:72,write:1209,zero:[143,312,424,539,683,994,1182],zero_pad:[311,538,682,993],zeros_lik:[144,313,425,540,684,995]}})